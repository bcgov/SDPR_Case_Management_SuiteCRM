<?php

namespace ContainerGRi2xj9;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiPlatform_Graphql_FieldsBuilderService extends App_KernelProdContainer
{
    /*
     * Gets the private 'api_platform.graphql.fields_builder' shared service.
     *
     * @return \ApiPlatform\Core\GraphQl\Type\FieldsBuilder
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Type/FieldsBuilderInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Type/FieldsBuilder.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Type/TypeBuilderInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Type/TypeBuilder.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/ResourceFieldResolver.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Type/TypeConverterInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Type/TypeConverter.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Factory/ResolverFactoryInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Factory/ItemResolverFactory.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Stage/ReadStageInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Util/ArrayTrait.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Resolver/Util/IdentifierTrait.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Stage/ReadStage.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Serializer/SerializerContextBuilderInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Serializer/SerializerContextBuilder.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Stage/SecurityStageInterface.php';
        include_once \dirname(__DIR__, 3).'/core/backend/Security/LegacySessionSecurityStage.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Stage/SecurityStage.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Stage/SecurityPostDenormalizeStageInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Stage/SecurityPostDenormalizeStage.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Stage/SerializeStageInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Stage/SerializeStage.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Factory/CollectionResolverFactory.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Factory/ItemMutationResolverFactory.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Stage/DeserializeStageInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Stage/DeserializeStage.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Stage/WriteStageInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Stage/WriteStage.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Stage/ValidateStageInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Stage/ValidateStage.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Resolver/Factory/ItemSubscriptionResolverFactory.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Subscription/SubscriptionManagerInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Util/SortTrait.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Subscription/SubscriptionManager.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Subscription/SubscriptionIdentifierGeneratorInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Subscription/SubscriptionIdentifierGenerator.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Type/TypesContainerInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Type/TypesContainer.php';

        $a = ($container->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $container->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService());
        $b = ($container->privates['api_platform.graphql.types_container'] ?? ($container->privates['api_platform.graphql.types_container'] = new \ApiPlatform\Core\GraphQl\Type\TypesContainer()));
        $c = ($container->privates['api_platform.iri_converter.legacy'] ?? $container->getApiPlatform_IriConverter_LegacyService());
        $d = ($container->privates['api_platform.pagination.legacy'] ?? $container->load('getApiPlatform_Pagination_LegacyService'));

        $e = new \ApiPlatform\Core\GraphQl\Type\TypeBuilder($b, new \ApiPlatform\Core\GraphQl\Resolver\ResourceFieldResolver($c), new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'api_platform.graphql.fields_builder' => ['privates', 'api_platform.graphql.fields_builder', 'getApiPlatform_Graphql_FieldsBuilderService', true],
        ], [
            'api_platform.graphql.fields_builder' => '?',
        ]), $d);
        $f = ($container->privates['serializer.name_converter.metadata_aware'] ?? $container->getSerializer_NameConverter_MetadataAwareService());

        $g = new \ApiPlatform\Core\GraphQl\Serializer\SerializerContextBuilder($a, $f);

        $h = new \ApiPlatform\Core\GraphQl\Resolver\Stage\ReadStage($a, $c, ($container->privates['api_platform.collection_data_provider'] ?? $container->getApiPlatform_CollectionDataProviderService()), ($container->privates['api_platform.subresource_data_provider'] ?? $container->getApiPlatform_SubresourceDataProviderService()), $g, '_');
        $i = ($container->privates['api_platform.security.resource_access_checker'] ?? $container->getApiPlatform_Security_ResourceAccessCheckerService());

        $j = new \App\Security\LegacySessionSecurityStage(new \ApiPlatform\Core\GraphQl\Resolver\Stage\SecurityStage($a, $i), $a, $i, ($container->privates['App\\Authentication\\LegacyHandler\\Authentication'] ?? $container->getAuthenticationService()), ($container->services['session'] ?? $container->getSessionService()));
        $k = new \ApiPlatform\Core\GraphQl\Resolver\Stage\SecurityPostDenormalizeStage($a, $i);
        $l = ($container->services['.container.private.serializer'] ?? $container->get_Container_Private_SerializerService());

        $m = new \ApiPlatform\Core\GraphQl\Resolver\Stage\SerializeStage($a, $l, $g, $d);
        $n = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Data\\Resolver\\RecordItemResolver' => ['privates', 'App\\Data\\Resolver\\RecordItemResolver', 'getRecordItemResolverService', true],
            'App\\Data\\Resolver\\RecordListResolver' => ['privates', 'App\\Data\\Resolver\\RecordListResolver', 'getRecordListResolverService', true],
            'App\\Statistics\\Resolver\\BatchedStatisticsItemResolver' => ['privates', 'App\\Statistics\\Resolver\\BatchedStatisticsItemResolver', 'getBatchedStatisticsItemResolverService', true],
            'App\\Statistics\\Resolver\\StatisticsItemResolver' => ['privates', 'App\\Statistics\\Resolver\\StatisticsItemResolver', 'getStatisticsItemResolverService', true],
        ], [
            'App\\Data\\Resolver\\RecordItemResolver' => '?',
            'App\\Data\\Resolver\\RecordListResolver' => '?',
            'App\\Statistics\\Resolver\\BatchedStatisticsItemResolver' => '?',
            'App\\Statistics\\Resolver\\StatisticsItemResolver' => '?',
        ]);

        return $container->privates['api_platform.graphql.fields_builder'] = new \ApiPlatform\Core\GraphQl\Type\FieldsBuilder(($container->privates['api_platform.metadata.property.name_collection_factory.cached'] ?? $container->getApiPlatform_Metadata_Property_NameCollectionFactory_CachedService()), ($container->privates['api_platform.metadata.property.metadata_factory.cached.legacy'] ?? $container->getApiPlatform_Metadata_Property_MetadataFactory_Cached_LegacyService()), $a, $b, $e, new \ApiPlatform\Core\GraphQl\Type\TypeConverter($e, $b, $a), new \ApiPlatform\Core\GraphQl\Resolver\Factory\ItemResolverFactory($h, $j, $k, $m, $n, $a), new \ApiPlatform\Core\GraphQl\Resolver\Factory\CollectionResolverFactory($h, $j, $k, $m, $n, $a, ($container->services['request_stack'] ?? ($container->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack()))), new \ApiPlatform\Core\GraphQl\Resolver\Factory\ItemMutationResolverFactory($h, $j, $k, $m, new \ApiPlatform\Core\GraphQl\Resolver\Stage\DeserializeStage($a, $l, $g), new \ApiPlatform\Core\GraphQl\Resolver\Stage\WriteStage($a, ($container->privates['api_platform.data_persister'] ?? $container->load('getApiPlatform_DataPersisterService')), $g), new \ApiPlatform\Core\GraphQl\Resolver\Stage\ValidateStage($a, ($container->privates['api_platform.validator'] ?? $container->load('getApiPlatform_ValidatorService'))), ($container->privates['api_platform.graphql.mutation_resolver_locator'] ?? ($container->privates['api_platform.graphql.mutation_resolver_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [], []))), $a), new \ApiPlatform\Core\GraphQl\Resolver\Factory\ItemSubscriptionResolverFactory($h, $j, $m, $a, new \ApiPlatform\Core\GraphQl\Subscription\SubscriptionManager(($container->privates['api_platform.graphql.cache.subscription'] ?? $container->load('getApiPlatform_Graphql_Cache_SubscriptionService')), new \ApiPlatform\Core\GraphQl\Subscription\SubscriptionIdentifierGenerator(), $m, $c), NULL), ($container->privates['api_platform.filter_locator'] ?? ($container->privates['api_platform.filter_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [], []))), $d, $f, '_');
    }
}
