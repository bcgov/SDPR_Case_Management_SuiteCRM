<?php

namespace ContainerGRi2xj9;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;
use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class App_KernelProdContainer extends Container
{
    protected $containerDir;
    protected $targetDir;
    protected $parameters = [];
    private $buildParameters;
    protected $getService;

    public function __construct(array $buildParameters = [], $containerDir = __DIR__)
    {
        $this->getService = \Closure::fromCallable([$this, 'getService']);
        $this->buildParameters = $buildParameters;
        $this->containerDir = $containerDir;
        $this->targetDir = \dirname($containerDir);
        $this->parameters = $this->getDefaultParameters();

        $this->services = $this->privates = [];
        $this->syntheticIds = [
            'kernel' => true,
        ];
        $this->methodMap = [
            '.container.private.security.csrf.token_manager' => 'get_Container_Private_Security_Csrf_TokenManagerService',
            '.container.private.serializer' => 'get_Container_Private_SerializerService',
            '.container.private.validator' => 'get_Container_Private_ValidatorService',
            'app.system-configs' => 'getApp_SystemconfigsService',
            'doctrine' => 'getDoctrineService',
            'doctrine.dbal.default_connection' => 'getDoctrine_Dbal_DefaultConnectionService',
            'doctrine.orm.default_entity_manager' => 'getDoctrine_Orm_DefaultEntityManagerService',
            'event_dispatcher' => 'getEventDispatcherService',
            'http_kernel' => 'getHttpKernelService',
            'request_stack' => 'getRequestStackService',
            'router' => 'getRouterService',
            'security.authorization_checker' => 'getSecurity_AuthorizationCheckerService',
            'security.token_storage' => 'getSecurity_TokenStorageService',
            'session' => 'getSessionService',
            'translator' => 'getTranslatorService',
            'cache_clearer' => 'getCacheClearerService',
            'filesystem' => 'getFilesystemService',
            'security.csrf.token_manager' => 'getSecurity_Csrf_TokenManagerService',
            'validator' => 'getValidatorService',
            'serializer' => 'getSerializerService',
            'twig' => 'getTwigService',
        ];
        $this->fileMap = [
            '.container.private.cache_clearer' => 'get_Container_Private_CacheClearerService',
            '.container.private.filesystem' => 'get_Container_Private_FilesystemService',
            '.container.private.twig' => 'get_Container_Private_TwigService',
            'App\\Authentication\\Controller\\SecurityController' => 'getSecurityControllerService',
            'App\\Engine\\Controller\\IndexController' => 'getIndexControllerService',
            'Hslavich\\OneloginSamlBundle\\Controller\\SamlController' => 'getSamlControllerService',
            'Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController' => 'getRedirectControllerService',
            'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController' => 'getTemplateControllerService',
            'api_platform.action.documentation' => 'getApiPlatform_Action_DocumentationService',
            'api_platform.action.entrypoint' => 'getApiPlatform_Action_EntrypointService',
            'api_platform.action.exception' => 'getApiPlatform_Action_ExceptionService',
            'api_platform.action.not_exposed' => 'getApiPlatform_Action_NotExposedService',
            'api_platform.action.not_found' => 'getApiPlatform_Action_NotFoundService',
            'api_platform.action.placeholder' => 'getApiPlatform_Action_PlaceholderService',
            'api_platform.graphql.action.entrypoint' => 'getApiPlatform_Graphql_Action_EntrypointService',
            'api_platform.graphql.action.graphiql' => 'getApiPlatform_Graphql_Action_GraphiqlService',
            'api_platform.graphql.action.graphql_playground' => 'getApiPlatform_Graphql_Action_GraphqlPlaygroundService',
            'api_platform.jsonld.action.context' => 'getApiPlatform_Jsonld_Action_ContextService',
            'api_platform.swagger.action.ui' => 'getApiPlatform_Swagger_Action_UiService',
            'api_platform.swagger_ui.action' => 'getApiPlatform_SwaggerUi_ActionService',
            'app.version.provider' => 'getApp_Version_ProviderService',
            'cache.app' => 'getCache_AppService',
            'cache.app_clearer' => 'getCache_AppClearerService',
            'cache.global_clearer' => 'getCache_GlobalClearerService',
            'cache.rate_limiter' => 'getCache_RateLimiterService',
            'cache.system' => 'getCache_SystemService',
            'cache.system_clearer' => 'getCache_SystemClearerService',
            'cache_warmer' => 'getCacheWarmerService',
            'console.command_loader' => 'getConsole_CommandLoaderService',
            'container.env_var_processors_locator' => 'getContainer_EnvVarProcessorsLocatorService',
            'error_controller' => 'getErrorControllerService',
            'graphql.introspection_manager' => 'getGraphql_IntrospectionManagerService',
            'legacy.route.handler' => 'getLegacy_Route_HandlerService',
            'monolog.logger.auth' => 'getMonolog_Logger_AuthService',
            'monolog.logger.install' => 'getMonolog_Logger_InstallService',
            'monolog.logger.upgrade' => 'getMonolog_Logger_UpgradeService',
            'routing.loader' => 'getRouting_LoaderService',
            'saml_user_factory' => 'getSamlUserFactoryService',
            'security.password_encoder' => 'getSecurity_PasswordEncoderService',
            'services_resetter' => 'getServicesResetterService',
        ];
        $this->aliases = [
            'ApiPlatform\\Action\\NotExposedAction' => 'api_platform.action.not_exposed',
            'ApiPlatform\\Action\\NotFoundAction' => 'api_platform.action.not_found',
            'api_platform.action.delete_item' => 'api_platform.action.placeholder',
            'api_platform.action.get_collection' => 'api_platform.action.placeholder',
            'api_platform.action.get_item' => 'api_platform.action.placeholder',
            'api_platform.action.get_subresource' => 'api_platform.action.placeholder',
            'api_platform.action.patch_item' => 'api_platform.action.placeholder',
            'api_platform.action.post_collection' => 'api_platform.action.placeholder',
            'api_platform.action.put_item' => 'api_platform.action.placeholder',
            'database_connection' => 'doctrine.dbal.default_connection',
            'doctrine.orm.entity_manager' => 'doctrine.orm.default_entity_manager',
            'entity_manager' => 'doctrine.orm.default_entity_manager',
        ];

        $this->privates['service_container'] = function () {
            include_once \dirname(__DIR__, 3).'/core/backend/Install/Service/InstallationUtilsTrait.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Engine/LegacyHandler/LegacyHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Authentication/LegacyHandler/Authentication.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Authentication/LegacyHandler/UserHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Currency/LegacyHandler/CurrencyHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Process/Service/ActionNameMapperInterface.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Engine/LegacyHandler/ActionNameMapperHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Engine/LegacyHandler/LegacyScopeState.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Install/LegacyHandler/InstallHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Module/Service/ModuleNameMapperInterface.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Module/LegacyHandler/ModuleNameMapperHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Module/Service/ModuleRegistryInterface.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Module/LegacyHandler/ModuleRegistryHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Routes/Service/NavigationProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Navbar/LegacyHandler/NavbarHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Routes/EventListener/LegacyRedirectListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/event-dispatcher/EventSubscriberInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-http/Util/TargetPathTrait.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Routes/EventSubscriber/RequestSubscriber.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Routes/Service/RouteConverterInterface.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Routes/LegacyHandler/RouteConverterHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Routes/Service/LegacyRedirectHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Routes/Service/LegacyApiRedirectHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Routes/Service/LegacyAssetRedirectHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Routes/Service/LegacyNonViewActionRedirectHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Security/CSRFCookieListener.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Security/CSRFTokenManager.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Security/CSRFValidationListener.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Security/LegacySessionDenyAccessListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Util/OperationRequestInitiatorTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Symfony/EventListener/DenyAccessListener.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Security/RouteMatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Security/RouteMatcher.php';
            include_once \dirname(__DIR__, 3).'/core/backend/UserPreferences/Service/UserPreferencesProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/core/backend/UserPreferences/LegacyHandler/UserPreferenceHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/UserPreferences/LegacyHandler/UserPreferencesMappers.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/ResponseListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/StreamedResponseListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/LocaleListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/ValidateRequestListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/ErrorListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/dependency-injection/ParameterBag/ParameterBagInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/dependency-injection/ParameterBag/ParameterBag.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/dependency-injection/ParameterBag/FrozenParameterBag.php';
            include_once \dirname(__DIR__, 3).'/vendor/psr/container/src/ContainerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/dependency-injection/ParameterBag/ContainerBagInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/dependency-injection/ParameterBag/ContainerBag.php';
            include_once \dirname(__DIR__, 3).'/vendor/psr/event-dispatcher/src/EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/event-dispatcher-contracts/EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/event-dispatcher/EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/event-dispatcher/EventDispatcher.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/HttpKernelInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/TerminableInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/HttpKernel.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Controller/ControllerResolverInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Controller/ControllerResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/framework-bundle/Controller/ControllerResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Controller/ArgumentResolverInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Controller/ArgumentResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/ControllerMetadata/ArgumentMetadataFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/ControllerMetadata/ArgumentMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/RequestStack.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/config/ConfigCacheFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/config/ResourceCheckerConfigCacheFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/LocaleAwareListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/psr/cache/src/CacheItemPoolInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Adapter/AdapterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache-contracts/CacheInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/psr/log/Psr/Log/LoggerAwareInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/service-contracts/ResetInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/ResettableInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/psr/log/Psr/Log/LoggerAwareTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Traits/AbstractAdapterTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache-contracts/CacheTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Traits/ContractsTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Adapter/AbstractAdapter.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Marshaller/MarshallerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Marshaller/DefaultMarshaller.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/PruneableInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Traits/FilesystemCommonTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Traits/FilesystemTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Adapter/FilesystemAdapter.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/property-access/PropertyAccessorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/property-access/PropertyAccessor.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/SessionInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/Session.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/Storage/SessionStorageInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/SessionBagInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/Storage/MetadataBag.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/AbstractSessionListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/SessionListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/service-contracts/ServiceProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/service-contracts/ServiceLocatorTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/dependency-injection/ServiceLocator.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-csrf/TokenStorage/TokenStorageInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-csrf/TokenStorage/ClearableTokenStorageInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-csrf/TokenStorage/SessionTokenStorage.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/validator/ValidatorBuilder.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/validator/Validation.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/validator/ConstraintValidatorFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/validator/ContainerConstraintValidatorFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Traits/ProxyTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Adapter/PhpArrayAdapter.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/validator/ObjectInitializerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/doctrine-bridge/Validator/DoctrineInitializer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/validator/Mapping/Loader/LoaderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/validator/Mapping/Loader/AutoMappingTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/validator/Mapping/Loader/PropertyInfoLoader.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/doctrine-bridge/Validator/DoctrineLoader.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/DebugHandlersListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/psr/log/Psr/Log/LoggerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/ResettableInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Logger.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Log/DebugLoggerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/monolog-bridge/Logger.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Debug/FileLinkFormatter.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/RequestContext.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/expression-language/ExpressionFunctionProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Matcher/ExpressionLanguageProvider.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/RouterListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/Reader.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/AnnotationReader.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/AnnotationRegistry.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/NameConverter/NameConverterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/NameConverter/AdvancedNameConverterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/NameConverter/MetadataAwareNameConverter.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/property-info/PropertyTypeExtractorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/property-info/PropertyDescriptionExtractorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/property-info/PropertyAccessExtractorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/property-info/PropertyListExtractorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/property-info/PropertyInfoExtractorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/property-info/PropertyInitializableExtractorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/property-info/PropertyInfoCacheExtractor.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/property-info/PropertyInfoExtractor.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/property-info/PropertyReadInfoExtractorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/property-info/PropertyWriteInfoExtractorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/property-info/Extractor/ConstructorArgumentTypeExtractorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/property-info/Extractor/ReflectionExtractor.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/web-link/EventListener/AddLinkHeaderListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/AuthorizationCheckerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/AuthorizationChecker.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authentication/Token/Storage/TokenStorageInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/service-contracts/ServiceSubscriberInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authentication/Token/Storage/UsageTrackingTokenStorage.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authentication/Token/Storage/TokenStorage.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authentication/AuthenticationTrustResolverInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authentication/AuthenticationTrustResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/expression-language/ExpressionLanguage.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/ExpressionLanguage.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Symfony/Security/Core/Authorization/ExpressionLanguageProvider.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/AccessDecisionManagerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/AccessDecisionManager.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Role/RoleHierarchyInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Role/RoleHierarchy.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-http/Firewall.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-bundle/EventListener/FirewallListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-http/FirewallMapInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-bundle/Security/FirewallMap.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-http/Logout/LogoutUrlGenerator.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-http/RememberMe/ResponseListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authentication/AuthenticationManagerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-http/Authentication/NoopAuthenticationManager.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/persistence/src/Persistence/ConnectionRegistry.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/persistence/src/Persistence/ManagerRegistry.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/persistence/src/Persistence/AbstractManagerRegistry.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/doctrine-bridge/ManagerRegistry.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/Registry.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/Connection.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Connection.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/ConnectionFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Configuration.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/Dbal/SchemaAssetsFilterManager.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/Dbal/RegexSchemaAssetFilter.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/event-manager/src/EventManager.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/doctrine-bridge/ContainerAwareEventManager.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Api/ResourceClassResolverInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Util/ClassInfoTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Api/ResourceClassResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/RequestContextAwareInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Matcher/UrlMatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Generator/UrlGeneratorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/RouterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Api/UrlGeneratorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Symfony/Routing/Router.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Serializer/SerializerContextBuilderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Serializer/SerializerFilterContextBuilder.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Serializer/SerializerContextBuilder.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Mapping/Factory/ClassMetadataFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Serializer/Mapping/Factory/ClassMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Mapping/Factory/ClassResolverTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Mapping/Factory/CacheClassMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Mapping/Factory/ClassMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Mapping/Loader/LoaderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Mapping/Loader/LoaderChain.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Mapping/Loader/AnnotationLoader.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/PathResolver/OperationPathResolverInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/PathResolver/CustomOperationPathResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/PathResolver/OperationPathResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Operation/PathSegmentNameGeneratorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Operation/DashPathSegmentNameGenerator.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Api/IriConverterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/DataProvider/OperationDataProviderTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Util/ResourceClassInfoTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Bridge/Symfony/Routing/IriConverter.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Bridge/Symfony/Routing/RouteNameResolverInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Util/CachedTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Bridge/Symfony/Routing/CachedRouteNameResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Bridge/Symfony/Routing/RouteNameResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Bridge/Symfony/Routing/RouterOperationPathResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Symfony/EventListener/AddFormatListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/willdurand/negotiation/src/Negotiation/AbstractNegotiator.php';
            include_once \dirname(__DIR__, 3).'/vendor/willdurand/negotiation/src/Negotiation/Negotiator.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Resource/ToggleableOperationAttributeTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Symfony/EventListener/DeserializeListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Util/CloneTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/EventListener/ReadListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/DataProvider/ItemDataProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/DataProvider/RestrictedDataProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/DataProvider/RestrictDataProviderTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/DataProvider/ChainItemDataProvider.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/DataProvider/CollectionDataProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/DataProvider/ContextAwareCollectionDataProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/DataProvider/ChainCollectionDataProvider.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/DataProvider/SubresourceDataProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/DataProvider/ChainSubresourceDataProvider.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Metadata/Resource/Factory/ResourceNameCollectionFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Metadata/Resource/Factory/CachedResourceNameCollectionFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Metadata/Resource/Factory/ExtractorResourceNameCollectionFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Resource/Factory/AnnotationResourceNameCollectionFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Metadata/Property/Factory/PropertyNameCollectionFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Metadata/Property/Factory/CachedPropertyNameCollectionFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Metadata/Property/Factory/ExtractorPropertyNameCollectionFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Metadata/Property/Factory/PropertyInfoPropertyNameCollectionFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Resource/Factory/ResourceMetadataFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Resource/Factory/CachedResourceMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Resource/Factory/FormatsResourceMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Resource/Factory/OperationResourceMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Util/AnnotationFilterExtractorTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Resource/Factory/AnnotationResourceFilterMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Resource/Factory/ShortNameResourceMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Resource/Factory/PhpDocResourceMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Resource/Factory/InputOutputResourceMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Resource/Factory/ExtractorResourceMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Resource/Factory/AnnotationResourceMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Property/Factory/PropertyMetadataFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Property/Factory/CachedPropertyMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Bridge/Symfony/Validator/Metadata/Property/ValidatorPropertyMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Property/Factory/ExtractorPropertyMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Property/Factory/AnnotationPropertyMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Property/Factory/AnnotationSubresourceMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Property/Factory/DefaultPropertyMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Property/Factory/SerializerPropertyMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Bridge/Doctrine/Orm/Metadata/Property/DoctrineOrmPropertyMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Bridge/Symfony/PropertyInfo/Metadata/Property/PropertyInfoPropertyMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Metadata/Extractor/ResourceExtractorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Metadata/Extractor/AbstractResourceExtractor.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Metadata/Extractor/PropertyExtractorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Extractor/XmlExtractor.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Operation/Factory/SubresourceOperationFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Operation/Factory/CachedSubresourceOperationFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Operation/Factory/SubresourceOperationFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Extractor/YamlExtractor.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/JsonSchema/TypeFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/JsonSchema/TypeFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Symfony/Bundle/EventListener/SwaggerUiListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/JsonLd/ContextBuilderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/JsonLd/AnonymousContextBuilderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/JsonLd/ContextBuilder.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Api/IriConverterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Symfony/Routing/SkolemIriConverter.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Util/CorsTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Hydra/EventListener/AddLinkHeaderListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/JsonSchema/SchemaFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Hydra/JsonSchema/SchemaFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/JsonSchema/SchemaFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/HttpCache/EventListener/AddHeadersListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Symfony/EventListener/QueryParameterValidateListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Api/FilterLocatorTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Api/QueryParameterValidator/QueryParameterValidator.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Symfony/Security/ResourceAccessCheckerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Symfony/Security/ResourceAccessChecker.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Api/IdentifiersExtractorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Api/CachedIdentifiersExtractor.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Api/IdentifiersExtractor.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Identifier/IdentifierConverterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Identifier/ContextAwareIdentifierConverterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Identifier/IdentifierConverter.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Processor/ProcessorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ActivationStrategyInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ErrorLevelActivationStrategy.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/monolog-bridge/Handler/FingersCrossed/HttpCodeActivationStrategy.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/monolog-bridge/Handler/ConsoleHandler.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php';
            include_once \dirname(__DIR__, 3).'/vendor/nelmio/cors-bundle/EventListener/CorsListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/nelmio/cors-bundle/Options/ResolverInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/nelmio/cors-bundle/Options/Resolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/nelmio/cors-bundle/Options/ProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/nelmio/cors-bundle/Options/ConfigProvider.php';
            include_once \dirname(__DIR__, 3).'/vendor/nelmio/cors-bundle/EventListener/CacheableResponseVaryListener.php';
            include_once \dirname(__DIR__, 3).'/core/backend/SystemConfig/Service/SystemConfigProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/core/backend/SystemConfig/LegacyHandler/SystemConfigHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/Routes/LegacyHandler/ClassicViewRoutingExclusionsHandler.php';
            include_once \dirname(__DIR__, 3).'/core/backend/SystemConfig/LegacyHandler/SystemConfigMappers.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation-contracts/TranslatorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation/TranslatorBagInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation-contracts/LocaleAwareInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation/Translator.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/CacheWarmer/WarmableInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/framework-bundle/Translation/Translator.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation/Formatter/MessageFormatterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation/Formatter/IntlFormatterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation/Formatter/MessageFormatter.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation-contracts/TranslatorTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation/IdentityTranslator.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Matcher/RequestMatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Router.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/framework-bundle/Routing/Router.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-csrf/CsrfTokenManagerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-csrf/CsrfTokenManager.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-csrf/TokenGenerator/TokenGeneratorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-csrf/TokenGenerator/UriSafeTokenGenerator.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/validator/Mapping/Factory/MetadataFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/validator/Validator/ValidatorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/SerializerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/NormalizerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/ContextAwareNormalizerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/DenormalizerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/ContextAwareDenormalizerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Encoder/EncoderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Encoder/ContextAwareEncoderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Encoder/DecoderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Encoder/ContextAwareDecoderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Serializer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/SerializerAwareInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/CacheableSupportsMethodInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/SerializerAwareTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/UnwrappingDenormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/OpenApi/Serializer/ApiGatewayNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/OpenApi/Serializer/OpenApiNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/ObjectToPopulateTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/AbstractNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/AbstractObjectNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/ObjectNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Encoder/JsonEncoder.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Metadata/Resource/ApiResourceToLegacyResourceMetadataTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Api/FilterLocatorTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/Swagger/Serializer/DocumentationNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Serializer/AbstractConstraintViolationListNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Hydra/Serializer/ConstraintViolationListNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Problem/Serializer/ConstraintViolationListNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Serializer/Exception/ValidationExceptionNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Serializer/Exception/HttpExceptionNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Serializer/Exception/RuntimeExceptionNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Serializer/Exception/ErrorNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Hydra/Serializer/DocumentationNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Hydra/Serializer/EntrypointNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Problem/Serializer/ErrorNormalizerTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Hydra/Serializer/ErrorNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Problem/Serializer/ErrorNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/ProblemNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/UidNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Serializer/ContextTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Serializer/InputOutputMetadataTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/JsonLd/Serializer/JsonLdContextTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/JsonLd/Serializer/ItemNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Serializer/ItemNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Serializer/ItemNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/JsonSerializableNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/DateTimeNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/ConstraintViolationListNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/DateTimeZoneNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/DateIntervalNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/FormErrorNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/DataUriNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/NormalizerAwareInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Hydra/Serializer/CollectionFiltersNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Hydra/Serializer/PartialCollectionViewNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/NormalizerAwareTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Hydra/Serializer/CollectionNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Normalizer/ArrayDenormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/JsonLd/Serializer/ObjectNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Mapping/ClassDiscriminatorResolverInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Mapping/ClassDiscriminatorFromClassMetadata.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Core/GraphQl/Serializer/ObjectNormalizer.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Encoder/NormalizationAwareInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Encoder/XmlEncoder.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Encoder/YamlEncoder.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/serializer/Encoder/CsvEncoder.php';
            include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Serializer/JsonEncoder.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/PsrCachedReader.php';
        };
    }

    public function compile(): void
    {
        throw new LogicException('You cannot compile a dumped container that was already compiled.');
    }

    public function isCompiled(): bool
    {
        return true;
    }

    public function getRemovedIds(): array
    {
        return require $this->containerDir.\DIRECTORY_SEPARATOR.'removed-ids.php';
    }

    protected function load($file, $lazyLoad = true)
    {
        if (class_exists($class = __NAMESPACE__.'\\'.$file, false)) {
            return $class::do($this, $lazyLoad);
        }

        if ('.' === $file[-4]) {
            $class = substr($class, 0, -4);
        } else {
            $file .= '.php';
        }

        $service = require $this->containerDir.\DIRECTORY_SEPARATOR.$file;

        return class_exists($class, false) ? $class::do($this, $lazyLoad) : $service;
    }

    protected function createProxy($class, \Closure $factory)
    {
        class_exists($class, false) || require __DIR__.'/'.$class.'.php';

        return $factory();
    }

    /*
     * Gets the public '.container.private.security.csrf.token_manager' shared service.
     *
     * @return \Symfony\Component\Security\Csrf\CsrfTokenManager
     */
    protected function get_Container_Private_Security_Csrf_TokenManagerService()
    {
        return $this->services['.container.private.security.csrf.token_manager'] = new \Symfony\Component\Security\Csrf\CsrfTokenManager(new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator(), ($this->privates['security.csrf.token_storage'] ?? $this->getSecurity_Csrf_TokenStorageService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /*
     * Gets the public '.container.private.serializer' shared service.
     *
     * @return \Symfony\Component\Serializer\Serializer
     */
    protected function get_Container_Private_SerializerService()
    {
        $a = ($this->privates['property_accessor'] ?? $this->getPropertyAccessorService());
        $b = ($this->privates['property_info.cache'] ?? $this->getPropertyInfo_CacheService());
        $c = new \Symfony\Component\Serializer\Encoder\JsonEncoder();

        $d = new \ApiPlatform\OpenApi\Serializer\OpenApiNormalizer(new \Symfony\Component\Serializer\Serializer([0 => new \Symfony\Component\Serializer\Normalizer\ObjectNormalizer(NULL, NULL, $a, $b)], [0 => $c]));

        $e = new \ApiPlatform\OpenApi\Serializer\ApiGatewayNormalizer($d);
        $f = ($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService());
        $g = ($this->privates['api_platform.metadata.property.name_collection_factory.cached'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_CachedService());
        $h = ($this->privates['api_platform.metadata.property.metadata_factory.cached.legacy'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_Cached_LegacyService());
        $i = ($this->privates['api_platform.filter_locator'] ?? ($this->privates['api_platform.filter_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [], [])));
        $j = ($this->privates['api_platform.identifiers_extractor.cached'] ?? $this->getApiPlatform_IdentifiersExtractor_CachedService());

        $k = new \ApiPlatform\OpenApi\Serializer\ApiGatewayNormalizer(new \ApiPlatform\Core\Swagger\Serializer\DocumentationNormalizer($f, $g, $h, ($this->privates['api_platform.hydra.json_schema.schema_factory'] ?? $this->getApiPlatform_Hydra_JsonSchema_SchemaFactoryService()), ($this->privates['api_platform.json_schema.type_factory'] ?? $this->getApiPlatform_JsonSchema_TypeFactoryService()), ($this->privates['api_platform.operation_path_resolver.router'] ?? $this->getApiPlatform_OperationPathResolver_RouterService()), NULL, $i, NULL, true, 'oauth2', 'password', '/oauth/v2/token', '/oauth/v2/auth', [], [], ($this->privates['api_platform.subresource_operation_factory.cached'] ?? $this->getApiPlatform_SubresourceOperationFactory_CachedService()), true, 'page', false, 'itemsPerPage', $this->parameters['api_platform.formats'], false, 'pagination', [], $this->parameters['api_platform.swagger.versions'], $j, NULL, true, $d));
        $l = ($this->privates['api_platform.router'] ?? $this->getApiPlatform_RouterService());
        $m = ($this->privates['serializer.name_converter.metadata_aware'] ?? $this->getSerializer_NameConverter_MetadataAwareService());
        $n = ($this->privates['api_platform.resource_class_resolver'] ?? $this->getApiPlatform_ResourceClassResolverService());
        $o = ($this->privates['api_platform.iri_converter.legacy'] ?? $this->getApiPlatform_IriConverter_LegacyService());
        $p = ($this->privates['api_platform.jsonld.context_builder'] ?? $this->getApiPlatform_Jsonld_ContextBuilderService());
        $q = ($this->privates['api_platform.serializer.mapping.class_metadata_factory'] ?? $this->getApiPlatform_Serializer_Mapping_ClassMetadataFactoryService());
        $r = ($this->privates['api_platform.security.resource_access_checker'] ?? $this->getApiPlatform_Security_ResourceAccessCheckerService());
        $s = ($this->privates['api_platform.item_data_provider'] ?? $this->getApiPlatform_ItemDataProviderService());
        $t = new \Symfony\Component\Serializer\Normalizer\ObjectNormalizer($q, $m, $a, $b, new \Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata($q), NULL, []);

        return $this->services['.container.private.serializer'] = new \Symfony\Component\Serializer\Serializer([0 => new \Symfony\Component\Serializer\Normalizer\UnwrappingDenormalizer($a), 1 => $e, 2 => $k, 3 => new \ApiPlatform\Hydra\Serializer\ConstraintViolationListNormalizer($l, [], $m), 4 => new \ApiPlatform\Problem\Serializer\ConstraintViolationListNormalizer([], $m), 5 => new \ApiPlatform\Core\GraphQl\Serializer\Exception\ValidationExceptionNormalizer($this->parameters['api_platform.exception_to_status']), 6 => new \ApiPlatform\Core\GraphQl\Serializer\Exception\HttpExceptionNormalizer(), 7 => new \ApiPlatform\Core\GraphQl\Serializer\Exception\RuntimeExceptionNormalizer(), 8 => $k, 9 => new \ApiPlatform\Core\GraphQl\Serializer\Exception\ErrorNormalizer(), 10 => $e, 11 => new \ApiPlatform\Hydra\Serializer\DocumentationNormalizer($f, $g, $h, $n, NULL, $l, NULL, $m), 12 => new \ApiPlatform\Hydra\Serializer\EntrypointNormalizer($f, $o, $l), 13 => new \ApiPlatform\Hydra\Serializer\ErrorNormalizer($l, false), 14 => new \ApiPlatform\Problem\Serializer\ErrorNormalizer(false), 15 => new \Symfony\Component\Serializer\Normalizer\ProblemNormalizer(false), 16 => new \Symfony\Component\Serializer\Normalizer\UidNormalizer(), 17 => new \ApiPlatform\JsonLd\Serializer\ItemNormalizer($f, $g, $h, $o, $n, $p, $a, $m, $q, [], new RewindableGenerator(function () {
            return new \EmptyIterator();
        }, 0), $r), 18 => new \ApiPlatform\Core\GraphQl\Serializer\ItemNormalizer($g, $h, $o, $j, $n, $a, $m, $q, $s, false, NULL, new RewindableGenerator(function () {
            return new \EmptyIterator();
        }, 0), $f), 19 => new \ApiPlatform\Serializer\ItemNormalizer($g, $h, $o, $n, $a, $m, $q, $s, false, NULL, new RewindableGenerator(function () {
            return new \EmptyIterator();
        }, 0), $f, $r), 20 => new \Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer(), 21 => new \Symfony\Component\Serializer\Normalizer\DateTimeNormalizer(), 22 => new \Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer([], $m), 23 => new \Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer(), 24 => new \Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer(), 25 => new \Symfony\Component\Serializer\Normalizer\FormErrorNormalizer(), 26 => new \Symfony\Component\Serializer\Normalizer\DataUriNormalizer(NULL), 27 => new \ApiPlatform\Hydra\Serializer\CollectionFiltersNormalizer(new \ApiPlatform\Hydra\Serializer\PartialCollectionViewNormalizer(new \ApiPlatform\Hydra\Serializer\CollectionNormalizer($p, $n, $o, NULL), 'page', 'pagination', $f, $a), $f, $n, $i), 28 => new \Symfony\Component\Serializer\Normalizer\ArrayDenormalizer(), 29 => new \ApiPlatform\JsonLd\Serializer\ObjectNormalizer($t, $o, $p), 30 => new \ApiPlatform\Core\GraphQl\Serializer\ObjectNormalizer($t, $o, $j), 31 => $t], [0 => new \Symfony\Component\Serializer\Encoder\XmlEncoder(), 1 => $c, 2 => new \Symfony\Component\Serializer\Encoder\YamlEncoder(), 3 => new \Symfony\Component\Serializer\Encoder\CsvEncoder(), 4 => new \ApiPlatform\Serializer\JsonEncoder('jsonld'), 5 => new \ApiPlatform\Serializer\JsonEncoder('jsonproblem')]);
    }

    /*
     * Gets the public '.container.private.validator' shared service.
     *
     * @return \Symfony\Component\Validator\Validator\ValidatorInterface
     */
    protected function get_Container_Private_ValidatorService()
    {
        return $this->services['.container.private.validator'] = ($this->privates['validator.builder'] ?? $this->getValidator_BuilderService())->getValidator();
    }

    /*
     * Gets the public 'app.system-configs' shared autowired service.
     *
     * @return \App\SystemConfig\LegacyHandler\SystemConfigHandler
     */
    protected function getApp_SystemconfigsService()
    {
        $a = ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ?? ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] = new \App\Engine\LegacyHandler\LegacyScopeState()));
        $b = ($this->services['session'] ?? $this->getSessionService());

        return $this->services['app.system-configs'] = new \App\SystemConfig\LegacyHandler\SystemConfigHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', $a, $this->parameters['legacy.exposed_system_configs'], ($this->privates['App\\Engine\\LegacyHandler\\ActionNameMapperHandler'] ?? $this->getActionNameMapperHandlerService()), ($this->privates['App\\Module\\LegacyHandler\\ModuleNameMapperHandler'] ?? $this->getModuleNameMapperHandlerService()), new \App\Routes\LegacyHandler\ClassicViewRoutingExclusionsHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', $a, $b), new \App\SystemConfig\LegacyHandler\SystemConfigMappers(new RewindableGenerator(function () {
            yield 0 => ($this->privates['App\\SystemConfig\\LegacyHandler\\DateFormatConfigMapper'] ?? $this->load('getDateFormatConfigMapperService'));
            yield 1 => ($this->privates['App\\SystemConfig\\LegacyHandler\\DefaultCurrencyConfigMapper'] ?? $this->load('getDefaultCurrencyConfigMapperService'));
            yield 2 => ($this->privates['App\\SystemConfig\\LegacyHandler\\DefaultModuleConfigMapper'] ?? $this->load('getDefaultModuleConfigMapperService'));
            yield 3 => ($this->privates['App\\SystemConfig\\LegacyHandler\\TimeFormatConfigMapper'] ?? $this->load('getTimeFormatConfigMapperService'));
        }, 4)), ($this->privates['App\\Currency\\LegacyHandler\\CurrencyHandler'] ?? $this->getCurrencyHandlerService()), ($this->privates['App\\Install\\LegacyHandler\\InstallHandler'] ?? $this->getInstallHandlerService()), $this->parameters['legacy.system_config_key_map'], $this->parameters['legacy.cache_reset_actions'], $this->parameters['themes.navigation_tab_limits'], $this->parameters['module.listview.column_limits'], $this->parameters['module.listview.settings_limits'], $this->parameters['module.listview.actions_limits'], $this->parameters['module.recordview.actions_limits'], $this->parameters['module.subpanelview.actions_limits'], $this->parameters['module.listview.line_actions_limits'], $this->parameters['module.listview.url_query_filter_mapping'], $this->parameters['ui'], $this->parameters['notifications'], $this->parameters['notifications_reload_actions'], $this->parameters['extensions'], $this->parameters['auth.logout'], $this->parameters['auth.session-expired'], $b, ($this->privates['App\\Navbar\\LegacyHandler\\NavbarHandler'] ?? $this->getNavbarHandlerService()));
    }

    /*
     * Gets the public 'doctrine' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Registry
     */
    protected function getDoctrineService()
    {
        return $this->services['doctrine'] = new \Doctrine\Bundle\DoctrineBundle\Registry($this, $this->parameters['doctrine.connections'], $this->parameters['doctrine.entity_managers'], 'default', 'default');
    }

    /*
     * Gets the public 'doctrine.dbal.default_connection' shared service.
     *
     * @return \Doctrine\DBAL\Connection
     */
    protected function getDoctrine_Dbal_DefaultConnectionService()
    {
        $a = new \Doctrine\DBAL\Configuration();
        $a->setAutoCommit(false);
        $a->setSchemaAssetsFilter(new \Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager([0 => new \Doctrine\Bundle\DoctrineBundle\Dbal\RegexSchemaAssetFilter('/^(users|migration_versions|)$/')]));
        $b = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine.orm.default_listeners.attach_entity_listeners' => ['privates', 'doctrine.orm.default_listeners.attach_entity_listeners', 'getDoctrine_Orm_DefaultListeners_AttachEntityListenersService', true],
            'doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber' => ['privates', 'doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber', 'getDoctrine_Orm_Listeners_PdoCacheAdapterDoctrineSchemaSubscriberService', true],
        ], [
            'doctrine.orm.default_listeners.attach_entity_listeners' => '?',
            'doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber' => '?',
        ]), [0 => 'doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber']);
        $b->addEventListener([0 => 'loadClassMetadata'], 'doctrine.orm.default_listeners.attach_entity_listeners');

        return $this->services['doctrine.dbal.default_connection'] = (new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory([]))->createConnection(['url' => $this->getEnv('DATABASE_URL'), 'driver' => 'pdo_mysql', 'charset' => 'UTF8', 'host' => 'localhost', 'port' => NULL, 'user' => 'root', 'password' => NULL, 'driverOptions' => [], 'defaultTableOptions' => ['charset' => 'utf8', 'collate' => 'utf8_unicode_ci']], $a, $b, []);
    }

    /*
     * Gets the public 'doctrine.orm.default_entity_manager' shared service.
     *
     * @return \Doctrine\ORM\EntityManager
     */
    protected function getDoctrine_Orm_DefaultEntityManagerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            return $this->services['doctrine.orm.default_entity_manager'] = $this->createProxy('EntityManager_9a5be93', function () {
                return \EntityManager_9a5be93::staticProxyConstructor(function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getDoctrine_Orm_DefaultEntityManagerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                });
            });
        }

        include_once \dirname(__DIR__, 3).'/vendor/doctrine/common/src/Proxy/Autoloader.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/orm/lib/Doctrine/ORM/Proxy/Autoloader.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/persistence/src/Persistence/ObjectManager.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/orm/lib/Doctrine/ORM/EntityManagerInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/orm/lib/Doctrine/ORM/EntityManager.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/orm/lib/Doctrine/ORM/Configuration.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/persistence/src/Persistence/Mapping/Driver/MappingDriver.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/Mapping/MappingDriver.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/persistence/src/Persistence/Mapping/Driver/MappingDriverChain.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/persistence/src/Persistence/Mapping/Driver/ColocatedMappingDriver.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/persistence/src/Persistence/Mapping/Driver/AnnotationDriver.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/Driver/AnnotationDriver.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/NamingStrategy.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/UnderscoreNamingStrategy.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/QuoteStrategy.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/orm/lib/Doctrine/ORM/Internal/SQLResultCasing.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/DefaultQuoteStrategy.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/EntityListenerResolver.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/Mapping/EntityListenerServiceResolver.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/Mapping/ContainerEntityListenerResolver.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/orm/lib/Doctrine/ORM/Repository/RepositoryFactory.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/Repository/ContainerRepositoryFactory.php';
        include_once \dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/ManagerConfigurator.php';

        $a = new \Doctrine\ORM\Configuration();

        $b = ($this->privates['doctrine.system_cache_pool'] ?? $this->getDoctrine_SystemCachePoolService());
        $c = new \Doctrine\Persistence\Mapping\Driver\MappingDriverChain();
        $c->addDriver(new \Doctrine\ORM\Mapping\Driver\AnnotationDriver(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()), $this->parameters['api_platform.resource_class_directories']), 'App');

        $a->setEntityNamespaces(['App' => 'App']);
        $a->setMetadataCache($b);
        $a->setQueryCache($b);
        $a->setResultCache(($this->privates['doctrine.result_cache_pool'] ?? $this->getDoctrine_ResultCachePoolService()));
        $a->setMetadataDriverImpl(new \Doctrine\Bundle\DoctrineBundle\Mapping\MappingDriver($c, new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine.ulid_generator' => ['privates', 'doctrine.ulid_generator', 'getDoctrine_UlidGeneratorService', true],
        ], [
            'doctrine.ulid_generator' => '?',
        ])));
        $a->setProxyDir(($this->targetDir.''.'/doctrine/orm/Proxies'));
        $a->setProxyNamespace('Proxies');
        $a->setAutoGenerateProxyClasses(false);
        $a->setClassMetadataFactoryName('Doctrine\\Bundle\\DoctrineBundle\\Mapping\\ClassMetadataFactory');
        $a->setDefaultRepositoryClassName('Doctrine\\ORM\\EntityRepository');
        $a->setNamingStrategy(new \Doctrine\ORM\Mapping\UnderscoreNamingStrategy(0, true));
        $a->setQuoteStrategy(new \Doctrine\ORM\Mapping\DefaultQuoteStrategy());
        $a->setEntityListenerResolver(new \Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver($this));
        $a->setRepositoryFactory(new \Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory(($this->privates['api_platform.graphql.mutation_resolver_locator'] ?? ($this->privates['api_platform.graphql.mutation_resolver_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [], [])))));

        $instance = \Doctrine\ORM\EntityManager::create(($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService()), $a);

        (new \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator([], []))->configure($instance);

        return $instance;
    }

    /*
     * Gets the public 'event_dispatcher' shared service.
     *
     * @return \Symfony\Component\EventDispatcher\EventDispatcher
     */
    protected function getEventDispatcherService()
    {
        $this->services['event_dispatcher'] = $instance = new \Symfony\Component\EventDispatcher\EventDispatcher();

        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['App\\Routes\\EventListener\\LegacyRedirectListener'] ?? $this->getLegacyRedirectListenerService());
        }, 1 => '__invoke'], 2050);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['App\\Security\\CSRFCookieListener'] ?? $this->getCSRFCookieListenerService());
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['App\\Security\\CSRFValidationListener'] ?? $this->getCSRFValidationListenerService());
        }, 1 => 'onKernelRequest'], 12);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['App\\Security\\LegacySessionDenyAccessListener'] ?? $this->getLegacySessionDenyAccessListenerService());
        }, 1 => 'onSecurity'], 3);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['App\\Security\\LegacySessionDenyAccessListener'] ?? $this->getLegacySessionDenyAccessListenerService());
        }, 1 => 'onSecurityPostDenormalize'], 1);
        $instance->addListener('kernel.view', [0 => function () {
            return ($this->privates['App\\Security\\LegacySessionDenyAccessListener'] ?? $this->getLegacySessionDenyAccessListenerService());
        }, 1 => 'onSecurityPostValidation'], 63);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () {
            return ($this->privates['security.listener.user_provider'] ?? $this->load('getSecurity_Listener_UserProviderService'));
        }, 1 => 'checkPassport'], 1024);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['api_platform.listener.request.add_format'] ?? $this->getApiPlatform_Listener_Request_AddFormatService());
        }, 1 => 'onKernelRequest'], 28);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['api_platform.listener.request.deserialize'] ?? $this->getApiPlatform_Listener_Request_DeserializeService());
        }, 1 => 'onKernelRequest'], 2);
        $instance->addListener('kernel.view', [0 => function () {
            return ($this->privates['api_platform.listener.view.serialize'] ?? $this->load('getApiPlatform_Listener_View_SerializeService'));
        }, 1 => 'onKernelView'], 16);
        $instance->addListener('kernel.view', [0 => function () {
            return ($this->privates['api_platform.listener.view.respond'] ?? $this->load('getApiPlatform_Listener_View_RespondService'));
        }, 1 => 'onKernelView'], 8);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['api_platform.listener.exception.validation'] ?? $this->load('getApiPlatform_Listener_Exception_ValidationService'));
        }, 1 => 'onKernelException'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['api_platform.listener.exception'] ?? $this->load('getApiPlatform_Listener_ExceptionService'));
        }, 1 => 'onKernelException'], -96);
        $instance->addListener('kernel.view', [0 => function () {
            return ($this->privates['api_platform.listener.view.write.legacy'] ?? $this->load('getApiPlatform_Listener_View_Write_LegacyService'));
        }, 1 => 'onKernelView'], 32);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['api_platform.listener.request.read.legacy'] ?? $this->getApiPlatform_Listener_Request_Read_LegacyService());
        }, 1 => 'onKernelRequest'], 4);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['api_platform.swagger.listener.ui'] ?? ($this->privates['api_platform.swagger.listener.ui'] = new \ApiPlatform\Symfony\Bundle\EventListener\SwaggerUiListener()));
        }, 1 => 'onKernelRequest'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['api_platform.hydra.listener.response.add_link_header'] ?? $this->getApiPlatform_Hydra_Listener_Response_AddLinkHeaderService());
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['api_platform.http_cache.listener.response.configure'] ?? $this->getApiPlatform_HttpCache_Listener_Response_ConfigureService());
        }, 1 => 'onKernelResponse'], -1);
        $instance->addListener('kernel.view', [0 => function () {
            return ($this->privates['api_platform.listener.view.validate'] ?? $this->load('getApiPlatform_Listener_View_ValidateService'));
        }, 1 => 'onKernelView'], 64);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['api_platform.listener.view.validate_query_parameters'] ?? $this->getApiPlatform_Listener_View_ValidateQueryParametersService());
        }, 1 => 'onKernelRequest'], 16);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['nelmio_cors.cors_listener'] ?? $this->getNelmioCors_CorsListenerService());
        }, 1 => 'onKernelRequest'], 250);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['nelmio_cors.cors_listener'] ?? $this->getNelmioCors_CorsListenerService());
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['nelmio_cors.cacheable_response_vary_listener'] ?? ($this->privates['nelmio_cors.cacheable_response_vary_listener'] = new \Nelmio\CorsBundle\EventListener\CacheableResponseVaryListener()));
        }, 1 => 'onResponse'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [0 => function () {
            return ($this->privates['Hslavich\\OneloginSamlBundle\\EventListener\\Security\\SamlLogoutListener'] ?? $this->load('getSamlLogoutListenerService'));
        }, 1 => '__invoke'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['App\\Routes\\EventSubscriber\\RequestSubscriber'] ?? $this->getRequestSubscriberService());
        }, 1 => 'onKernelRequest'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () {
            return ($this->privates['App\\Security\\Ldap\\AppCheckLdapCredentialsListener'] ?? ($this->privates['App\\Security\\Ldap\\AppCheckLdapCredentialsListener'] = new \App\Security\Ldap\AppCheckLdapCredentialsListener($this)));
        }, 1 => 'onCheckPassport'], 144);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [0 => function () {
            return ($this->privates['App\\Security\\LoginSuccessEventListener'] ?? $this->load('getLoginSuccessEventListenerService'));
        }, 1 => 'onLoginSuccess'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['response_listener'] ?? ($this->privates['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8')));
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['streamed_response_listener'] ?? ($this->privates['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener()));
        }, 1 => 'onKernelResponse'], -1024);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['locale_listener'] ?? $this->getLocaleListenerService());
        }, 1 => 'setDefaultLocale'], 100);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['locale_listener'] ?? $this->getLocaleListenerService());
        }, 1 => 'onKernelRequest'], 16);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['locale_listener'] ?? $this->getLocaleListenerService());
        }, 1 => 'onKernelFinishRequest'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['validate_request_listener'] ?? ($this->privates['validate_request_listener'] = new \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener()));
        }, 1 => 'onKernelRequest'], 256);
        $instance->addListener('kernel.controller_arguments', [0 => function () {
            return ($this->privates['exception_listener'] ?? $this->getExceptionListenerService());
        }, 1 => 'onControllerArguments'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['exception_listener'] ?? $this->getExceptionListenerService());
        }, 1 => 'logKernelException'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['exception_listener'] ?? $this->getExceptionListenerService());
        }, 1 => 'onKernelException'], -128);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['exception_listener'] ?? $this->getExceptionListenerService());
        }, 1 => 'removeCspHeader'], -128);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['locale_aware_listener'] ?? $this->getLocaleAwareListenerService());
        }, 1 => 'onKernelRequest'], 15);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['locale_aware_listener'] ?? $this->getLocaleAwareListenerService());
        }, 1 => 'onKernelFinishRequest'], -15);
        $instance->addListener('console.error', [0 => function () {
            return ($this->privates['console.error_listener'] ?? $this->load('getConsole_ErrorListenerService'));
        }, 1 => 'onConsoleError'], -128);
        $instance->addListener('console.terminate', [0 => function () {
            return ($this->privates['console.error_listener'] ?? $this->load('getConsole_ErrorListenerService'));
        }, 1 => 'onConsoleTerminate'], -128);
        $instance->addListener('console.error', [0 => function () {
            return ($this->privates['console.suggest_missing_package_subscriber'] ?? ($this->privates['console.suggest_missing_package_subscriber'] = new \Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber()));
        }, 1 => 'onConsoleError'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['session_listener'] ?? $this->getSessionListenerService());
        }, 1 => 'onKernelRequest'], 128);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['session_listener'] ?? $this->getSessionListenerService());
        }, 1 => 'onKernelResponse'], -1000);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['session_listener'] ?? $this->getSessionListenerService());
        }, 1 => 'onFinishRequest'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['debug.debug_handlers_listener'] ?? $this->getDebug_DebugHandlersListenerService());
        }, 1 => 'configure'], 2048);
        $instance->addListener('console.command', [0 => function () {
            return ($this->privates['debug.debug_handlers_listener'] ?? $this->getDebug_DebugHandlersListenerService());
        }, 1 => 'configure'], 2048);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
        }, 1 => 'onKernelRequest'], 32);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
        }, 1 => 'onKernelFinishRequest'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
        }, 1 => 'onKernelException'], -64);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['web_link.add_link_header_listener'] ?? ($this->privates['web_link.add_link_header_listener'] = new \Symfony\Component\WebLink\EventListener\AddLinkHeaderListener()));
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['security.firewall'] ?? $this->getSecurity_FirewallService());
        }, 1 => 'configureLogoutUrlGenerator'], 8);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['security.firewall'] ?? $this->getSecurity_FirewallService());
        }, 1 => 'onKernelRequest'], 8);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['security.firewall'] ?? $this->getSecurity_FirewallService());
        }, 1 => 'onKernelFinishRequest'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['security.rememberme.response_listener'] ?? ($this->privates['security.rememberme.response_listener'] = new \Symfony\Component\Security\Http\RememberMe\ResponseListener()));
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () {
            return ($this->privates['security.listener.check_authenticator_credentials'] ?? $this->load('getSecurity_Listener_CheckAuthenticatorCredentialsService'));
        }, 1 => 'checkPassport'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [0 => function () {
            return ($this->privates['security.listener.password_migrating'] ?? $this->load('getSecurity_Listener_PasswordMigratingService'));
        }, 1 => 'onLoginSuccess'], 0);
        $instance->addListener('console.command', [0 => function () {
            return ($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService());
        }, 1 => 'onCommand'], 255);
        $instance->addListener('console.terminate', [0 => function () {
            return ($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService());
        }, 1 => 'onTerminate'], -255);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () {
            return ($this->privates['security.listener.csrf_protection'] ?? $this->load('getSecurity_Listener_CsrfProtectionService'));
        }, 1 => 'checkPassport'], 512);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [0 => function () {
            return ($this->privates['security.logout.listener.csrf_token_clearing'] ?? $this->load('getSecurity_Logout_Listener_CsrfTokenClearingService'));
        }, 1 => 'onLogout'], 0);

        return $instance;
    }

    /*
     * Gets the public 'http_kernel' shared service.
     *
     * @return \Symfony\Component\HttpKernel\HttpKernel
     */
    protected function getHttpKernelService()
    {
        return $this->services['http_kernel'] = new \Symfony\Component\HttpKernel\HttpKernel(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), new \Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver($this, ($this->privates['monolog.logger.request'] ?? $this->getMonolog_Logger_RequestService())), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), new \Symfony\Component\HttpKernel\Controller\ArgumentResolver(new \Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory(), new RewindableGenerator(function () {
            yield 0 => ($this->privates['argument_resolver.request_attribute'] ?? ($this->privates['argument_resolver.request_attribute'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver()));
            yield 1 => ($this->privates['argument_resolver.request'] ?? ($this->privates['argument_resolver.request'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver()));
            yield 2 => ($this->privates['argument_resolver.session'] ?? ($this->privates['argument_resolver.session'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver()));
            yield 3 => ($this->privates['security.user_value_resolver'] ?? $this->load('getSecurity_UserValueResolverService'));
            yield 4 => ($this->privates['argument_resolver.service'] ?? $this->load('getArgumentResolver_ServiceService'));
            yield 5 => ($this->privates['argument_resolver.default'] ?? ($this->privates['argument_resolver.default'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver()));
            yield 6 => ($this->privates['argument_resolver.variadic'] ?? ($this->privates['argument_resolver.variadic'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver()));
        }, 7)));
    }

    /*
     * Gets the public 'request_stack' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestStack
     */
    protected function getRequestStackService()
    {
        return $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack();
    }

    /*
     * Gets the public 'router' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Routing\Router
     */
    protected function getRouterService()
    {
        $a = new \Symfony\Bridge\Monolog\Logger('router');
        $a->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $a->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        $this->services['router'] = $instance = new \Symfony\Bundle\FrameworkBundle\Routing\Router((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'routing.loader' => ['services', 'routing.loader', 'getRouting_LoaderService', true],
        ], [
            'routing.loader' => 'Symfony\\Component\\Config\\Loader\\LoaderInterface',
        ]))->withContext('router.default', $this), 'kernel::loadRoutes', ['cache_dir' => $this->targetDir.'', 'debug' => false, 'generator_class' => 'Symfony\\Component\\Routing\\Generator\\CompiledUrlGenerator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\CompiledUrlGeneratorDumper', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableCompiledUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\CompiledUrlMatcherDumper', 'strict_requirements' => NULL, 'resource_type' => 'service'], ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()), ($this->privates['parameter_bag'] ?? ($this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this))), $a, 'en');

        $instance->setConfigCacheFactory(($this->privates['config_cache_factory'] ?? ($this->privates['config_cache_factory'] = new \Symfony\Component\Config\ResourceCheckerConfigCacheFactory())));
        $instance->addExpressionLanguageProvider(($this->privates['router.expression_language_provider'] ?? $this->getRouter_ExpressionLanguageProviderService()));

        return $instance;
    }

    /*
     * Gets the public 'security.authorization_checker' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\AuthorizationChecker
     */
    protected function getSecurity_AuthorizationCheckerService()
    {
        return $this->services['security.authorization_checker'] = new \Symfony\Component\Security\Core\Authorization\AuthorizationChecker(($this->services['security.token_storage'] ?? $this->getSecurity_TokenStorageService()), ($this->privates['security.authentication.manager'] ?? ($this->privates['security.authentication.manager'] = new \Symfony\Component\Security\Http\Authentication\NoopAuthenticationManager())), ($this->privates['security.access.decision_manager'] ?? $this->getSecurity_Access_DecisionManagerService()), false, false, false);
    }

    /*
     * Gets the public 'security.token_storage' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage
     */
    protected function getSecurity_TokenStorageService()
    {
        return $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage(($this->privates['security.untracked_token_storage'] ?? ($this->privates['security.untracked_token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage())), new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'session' => ['services', 'session', 'getSessionService', false],
        ], [
            'session' => '?',
        ]));
    }

    /*
     * Gets the public 'session' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Session
     */
    protected function getSessionService()
    {
        return $this->services['session'] = new \Symfony\Component\HttpFoundation\Session\Session(($this->privates['session.storage.native'] ?? $this->getSession_Storage_NativeService()), NULL, NULL, [0 => ($this->privates['session_listener'] ?? $this->getSessionListenerService()), 1 => 'onSessionUsage']);
    }

    /*
     * Gets the public 'translator' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Translation\Translator
     */
    protected function getTranslatorService()
    {
        $this->services['translator'] = $instance = new \Symfony\Bundle\FrameworkBundle\Translation\Translator(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'translation.loader.csv' => ['privates', 'translation.loader.csv', 'getTranslation_Loader_CsvService', true],
            'translation.loader.dat' => ['privates', 'translation.loader.dat', 'getTranslation_Loader_DatService', true],
            'translation.loader.ini' => ['privates', 'translation.loader.ini', 'getTranslation_Loader_IniService', true],
            'translation.loader.json' => ['privates', 'translation.loader.json', 'getTranslation_Loader_JsonService', true],
            'translation.loader.mo' => ['privates', 'translation.loader.mo', 'getTranslation_Loader_MoService', true],
            'translation.loader.php' => ['privates', 'translation.loader.php', 'getTranslation_Loader_PhpService', true],
            'translation.loader.po' => ['privates', 'translation.loader.po', 'getTranslation_Loader_PoService', true],
            'translation.loader.qt' => ['privates', 'translation.loader.qt', 'getTranslation_Loader_QtService', true],
            'translation.loader.res' => ['privates', 'translation.loader.res', 'getTranslation_Loader_ResService', true],
            'translation.loader.xliff' => ['privates', 'translation.loader.xliff', 'getTranslation_Loader_XliffService', true],
            'translation.loader.yml' => ['privates', 'translation.loader.yml', 'getTranslation_Loader_YmlService', true],
        ], [
            'translation.loader.csv' => '?',
            'translation.loader.dat' => '?',
            'translation.loader.ini' => '?',
            'translation.loader.json' => '?',
            'translation.loader.mo' => '?',
            'translation.loader.php' => '?',
            'translation.loader.po' => '?',
            'translation.loader.qt' => '?',
            'translation.loader.res' => '?',
            'translation.loader.xliff' => '?',
            'translation.loader.yml' => '?',
        ]), new \Symfony\Component\Translation\Formatter\MessageFormatter(new \Symfony\Component\Translation\IdentityTranslator()), 'en', ['translation.loader.php' => [0 => 'php'], 'translation.loader.yml' => [0 => 'yaml', 1 => 'yml'], 'translation.loader.xliff' => [0 => 'xlf', 1 => 'xliff'], 'translation.loader.po' => [0 => 'po'], 'translation.loader.mo' => [0 => 'mo'], 'translation.loader.qt' => [0 => 'ts'], 'translation.loader.csv' => [0 => 'csv'], 'translation.loader.res' => [0 => 'res'], 'translation.loader.dat' => [0 => 'dat'], 'translation.loader.ini' => [0 => 'ini'], 'translation.loader.json' => [0 => 'json']], ['cache_dir' => ($this->targetDir.''.'/translations'), 'debug' => false, 'resource_files' => ['af' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.af.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.af.xlf')], 'ar' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.ar.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.ar.xlf')], 'az' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.az.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.az.xlf')], 'be' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.be.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.be.xlf')], 'bg' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.bg.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.bg.xlf')], 'bs' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.bs.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.bs.xlf')], 'ca' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.ca.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.ca.xlf')], 'cs' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.cs.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.cs.xlf')], 'cy' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.cy.xlf')], 'da' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.da.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.da.xlf')], 'de' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.de.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.de.xlf')], 'el' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.el.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.el.xlf')], 'en' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.en.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.en.xlf')], 'es' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.es.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.es.xlf')], 'et' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.et.xlf')], 'eu' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.eu.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.eu.xlf')], 'fa' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.fa.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.fa.xlf')], 'fi' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.fi.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.fi.xlf')], 'fr' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.fr.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.fr.xlf')], 'gl' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.gl.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.gl.xlf')], 'he' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.he.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.he.xlf')], 'hr' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.hr.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.hr.xlf')], 'hu' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.hu.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.hu.xlf')], 'hy' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.hy.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.hy.xlf')], 'id' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.id.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.id.xlf')], 'it' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.it.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.it.xlf')], 'ja' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.ja.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.ja.xlf')], 'lb' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.lb.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.lb.xlf')], 'lt' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.lt.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.lt.xlf')], 'lv' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.lv.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.lv.xlf')], 'mn' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.mn.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.mn.xlf')], 'nb' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.nb.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.nb.xlf')], 'nl' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.nl.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.nl.xlf')], 'nn' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.nn.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.nn.xlf')], 'no' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.no.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.no.xlf')], 'pl' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.pl.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.pl.xlf')], 'pt' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.pt.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.pt.xlf')], 'pt_BR' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.pt_BR.xlf')], 'ro' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.ro.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.ro.xlf')], 'ru' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.ru.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.ru.xlf')], 'sk' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.sk.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.sk.xlf')], 'sl' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.sl.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.sl.xlf')], 'sq' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.sq.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.sq.xlf')], 'sr_Cyrl' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.sr_Cyrl.xlf')], 'sr_Latn' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.sr_Latn.xlf')], 'sv' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.sv.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.sv.xlf')], 'th' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.th.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.th.xlf')], 'tl' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.tl.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.tl.xlf')], 'tr' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.tr.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.tr.xlf')], 'uk' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.uk.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.uk.xlf')], 'uz' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.uz.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.uz.xlf')], 'vi' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.vi.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.vi.xlf')], 'zh_CN' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.zh_CN.xlf')], 'zh_TW' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.zh_TW.xlf')]], 'scanned_directories' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/validator/Resources/translations'), 1 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations'), 2 => (\dirname(__DIR__, 3).'/vendor/symfony/framework-bundle/translations'), 3 => (\dirname(__DIR__, 3).'/vendor/symfony/twig-bundle/translations'), 4 => (\dirname(__DIR__, 3).'/vendor/symfony/security-bundle/translations'), 5 => (\dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/translations'), 6 => (\dirname(__DIR__, 3).'/vendor/api-platform/core/src/Symfony/Bundle/translations'), 7 => (\dirname(__DIR__, 3).'/vendor/symfony/monolog-bundle/translations'), 8 => (\dirname(__DIR__, 3).'/vendor/nelmio/cors-bundle/translations'), 9 => (\dirname(__DIR__, 3).'/vendor/doctrine/doctrine-migrations-bundle/translations'), 10 => (\dirname(__DIR__, 3).'/vendor/shivas/versioning-bundle/src/translations'), 11 => (\dirname(__DIR__, 3).'/vendor/hslavich/oneloginsaml-bundle/translations'), 12 => (\dirname(__DIR__, 3).'/translations')], 'cache_vary' => ['scanned_directories' => [0 => 'vendor/symfony/validator/Resources/translations', 1 => 'vendor/symfony/security-core/Resources/translations', 2 => 'vendor/symfony/framework-bundle/translations', 3 => 'vendor/symfony/twig-bundle/translations', 4 => 'vendor/symfony/security-bundle/translations', 5 => 'vendor/doctrine/doctrine-bundle/translations', 6 => 'vendor/api-platform/core/src/Symfony/Bundle/translations', 7 => 'vendor/symfony/monolog-bundle/translations', 8 => 'vendor/nelmio/cors-bundle/translations', 9 => 'vendor/doctrine/doctrine-migrations-bundle/translations', 10 => 'vendor/shivas/versioning-bundle/src/translations', 11 => 'vendor/hslavich/oneloginsaml-bundle/translations', 12 => 'translations']]], []);

        $instance->setConfigCacheFactory(($this->privates['config_cache_factory'] ?? ($this->privates['config_cache_factory'] = new \Symfony\Component\Config\ResourceCheckerConfigCacheFactory())));
        $instance->setFallbackLocales([0 => 'en']);

        return $instance;
    }

    /*
     * Gets the private 'App\Authentication\LegacyHandler\Authentication' shared autowired service.
     *
     * @return \App\Authentication\LegacyHandler\Authentication
     */
    protected function getAuthenticationService()
    {
        return $this->privates['App\\Authentication\\LegacyHandler\\Authentication'] = new \App\Authentication\LegacyHandler\Authentication(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ?? ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] = new \App\Engine\LegacyHandler\LegacyScopeState())), ($this->services['session'] ?? $this->getSessionService()), $this->parameters['system.settings'], ($this->privates['App\\Authentication\\LegacyHandler\\UserHandler'] ?? $this->getUserHandlerService()));
    }

    /*
     * Gets the private 'App\Authentication\LegacyHandler\UserHandler' shared autowired service.
     *
     * @return \App\Authentication\LegacyHandler\UserHandler
     */
    protected function getUserHandlerService()
    {
        return $this->privates['App\\Authentication\\LegacyHandler\\UserHandler'] = new \App\Authentication\LegacyHandler\UserHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ?? ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] = new \App\Engine\LegacyHandler\LegacyScopeState())), ($this->services['session'] ?? $this->getSessionService()), ($this->services['app.system-configs'] ?? $this->getApp_SystemconfigsService()), ($this->privates['App\\UserPreferences\\LegacyHandler\\UserPreferenceHandler'] ?? $this->getUserPreferenceHandlerService()));
    }

    /*
     * Gets the private 'App\Currency\LegacyHandler\CurrencyHandler' shared autowired service.
     *
     * @return \App\Currency\LegacyHandler\CurrencyHandler
     */
    protected function getCurrencyHandlerService()
    {
        return $this->privates['App\\Currency\\LegacyHandler\\CurrencyHandler'] = new \App\Currency\LegacyHandler\CurrencyHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ?? ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] = new \App\Engine\LegacyHandler\LegacyScopeState())), ($this->services['session'] ?? $this->getSessionService()));
    }

    /*
     * Gets the private 'App\Engine\LegacyHandler\ActionNameMapperHandler' shared autowired service.
     *
     * @return \App\Engine\LegacyHandler\ActionNameMapperHandler
     */
    protected function getActionNameMapperHandlerService()
    {
        return $this->privates['App\\Engine\\LegacyHandler\\ActionNameMapperHandler'] = new \App\Engine\LegacyHandler\ActionNameMapperHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ?? ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] = new \App\Engine\LegacyHandler\LegacyScopeState())), ($this->services['session'] ?? $this->getSessionService()));
    }

    /*
     * Gets the private 'App\Install\LegacyHandler\InstallHandler' shared autowired service.
     *
     * @return \App\Install\LegacyHandler\InstallHandler
     */
    protected function getInstallHandlerService()
    {
        return $this->privates['App\\Install\\LegacyHandler\\InstallHandler'] = new \App\Install\LegacyHandler\InstallHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ?? ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] = new \App\Engine\LegacyHandler\LegacyScopeState())), ($this->services['session'] ?? $this->getSessionService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()));
    }

    /*
     * Gets the private 'App\Module\LegacyHandler\ModuleNameMapperHandler' shared autowired service.
     *
     * @return \App\Module\LegacyHandler\ModuleNameMapperHandler
     */
    protected function getModuleNameMapperHandlerService()
    {
        return $this->privates['App\\Module\\LegacyHandler\\ModuleNameMapperHandler'] = new \App\Module\LegacyHandler\ModuleNameMapperHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ?? ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] = new \App\Engine\LegacyHandler\LegacyScopeState())), ($this->services['session'] ?? $this->getSessionService()));
    }

    /*
     * Gets the private 'App\Module\LegacyHandler\ModuleRegistryHandler' shared autowired service.
     *
     * @return \App\Module\LegacyHandler\ModuleRegistryHandler
     */
    protected function getModuleRegistryHandlerService()
    {
        return $this->privates['App\\Module\\LegacyHandler\\ModuleRegistryHandler'] = new \App\Module\LegacyHandler\ModuleRegistryHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ?? ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] = new \App\Engine\LegacyHandler\LegacyScopeState())), $this->parameters['legacy.frontend_excluded_modules'], ($this->services['session'] ?? $this->getSessionService()));
    }

    /*
     * Gets the private 'App\Navbar\LegacyHandler\NavbarHandler' shared autowired service.
     *
     * @return \App\Navbar\LegacyHandler\NavbarHandler
     */
    protected function getNavbarHandlerService()
    {
        return $this->privates['App\\Navbar\\LegacyHandler\\NavbarHandler'] = new \App\Navbar\LegacyHandler\NavbarHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ?? ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] = new \App\Engine\LegacyHandler\LegacyScopeState())), $this->parameters['legacy.menu_item_map'], ($this->privates['App\\Module\\LegacyHandler\\ModuleNameMapperHandler'] ?? $this->getModuleNameMapperHandlerService()), ($this->privates['App\\Routes\\LegacyHandler\\RouteConverterHandler'] ?? $this->getRouteConverterHandlerService()), ($this->privates['App\\Module\\LegacyHandler\\ModuleRegistryHandler'] ?? $this->getModuleRegistryHandlerService()), ($this->services['session'] ?? $this->getSessionService()), $this->parameters['legacy.module_routing'], $this->parameters['navbar.administration_override'], $this->parameters['quick_actions']);
    }

    /*
     * Gets the private 'App\Routes\EventListener\LegacyRedirectListener' shared autowired service.
     *
     * @return \App\Routes\EventListener\LegacyRedirectListener
     */
    protected function getLegacyRedirectListenerService()
    {
        return $this->privates['App\\Routes\\EventListener\\LegacyRedirectListener'] = new \App\Routes\EventListener\LegacyRedirectListener(($this->privates['App\\Routes\\LegacyHandler\\RouteConverterHandler'] ?? $this->getRouteConverterHandlerService()), ($this->privates['App\\Routes\\Service\\LegacyAssetRedirectHandler'] ?? $this->getLegacyAssetRedirectHandlerService()), ($this->privates['App\\Routes\\Service\\LegacyApiRedirectHandler'] ?? $this->getLegacyApiRedirectHandlerService()), ($this->privates['App\\Routes\\Service\\LegacyNonViewActionRedirectHandler'] ?? $this->getLegacyNonViewActionRedirectHandlerService()));
    }

    /*
     * Gets the private 'App\Routes\EventSubscriber\RequestSubscriber' shared autowired service.
     *
     * @return \App\Routes\EventSubscriber\RequestSubscriber
     */
    protected function getRequestSubscriberService()
    {
        return $this->privates['App\\Routes\\EventSubscriber\\RequestSubscriber'] = new \App\Routes\EventSubscriber\RequestSubscriber(($this->services['session'] ?? $this->getSessionService()));
    }

    /*
     * Gets the private 'App\Routes\LegacyHandler\RouteConverterHandler' shared autowired service.
     *
     * @return \App\Routes\LegacyHandler\RouteConverterHandler
     */
    protected function getRouteConverterHandlerService()
    {
        return $this->privates['App\\Routes\\LegacyHandler\\RouteConverterHandler'] = new \App\Routes\LegacyHandler\RouteConverterHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ?? ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] = new \App\Engine\LegacyHandler\LegacyScopeState())), ($this->privates['App\\Module\\LegacyHandler\\ModuleNameMapperHandler'] ?? $this->getModuleNameMapperHandlerService()), ($this->privates['App\\Engine\\LegacyHandler\\ActionNameMapperHandler'] ?? $this->getActionNameMapperHandlerService()), ($this->services['session'] ?? $this->getSessionService()));
    }

    /*
     * Gets the private 'App\Routes\Service\LegacyApiRedirectHandler' shared autowired service.
     *
     * @return \App\Routes\Service\LegacyApiRedirectHandler
     */
    protected function getLegacyApiRedirectHandlerService()
    {
        return $this->privates['App\\Routes\\Service\\LegacyApiRedirectHandler'] = new \App\Routes\Service\LegacyApiRedirectHandler($this->parameters['legacy.api_paths'], '/legacy', $this->parameters['legacy.api_path_files']);
    }

    /*
     * Gets the private 'App\Routes\Service\LegacyAssetRedirectHandler' shared autowired service.
     *
     * @return \App\Routes\Service\LegacyAssetRedirectHandler
     */
    protected function getLegacyAssetRedirectHandlerService()
    {
        return $this->privates['App\\Routes\\Service\\LegacyAssetRedirectHandler'] = new \App\Routes\Service\LegacyAssetRedirectHandler($this->parameters['legacy.asset_paths'], '/legacy');
    }

    /*
     * Gets the private 'App\Routes\Service\LegacyNonViewActionRedirectHandler' shared autowired service.
     *
     * @return \App\Routes\Service\LegacyNonViewActionRedirectHandler
     */
    protected function getLegacyNonViewActionRedirectHandlerService()
    {
        return $this->privates['App\\Routes\\Service\\LegacyNonViewActionRedirectHandler'] = new \App\Routes\Service\LegacyNonViewActionRedirectHandler(($this->privates['App\\Routes\\LegacyHandler\\RouteConverterHandler'] ?? $this->getRouteConverterHandlerService()), ($this->services['router'] ?? $this->getRouterService()), '/legacy', $this->parameters['legacy.entrypoint_files']);
    }

    /*
     * Gets the private 'App\Security\CSRFCookieListener' shared autowired service.
     *
     * @return \App\Security\CSRFCookieListener
     */
    protected function getCSRFCookieListenerService()
    {
        return $this->privates['App\\Security\\CSRFCookieListener'] = new \App\Security\CSRFCookieListener(($this->privates['App\\Security\\RouteMatcher'] ?? ($this->privates['App\\Security\\RouteMatcher'] = new \App\Security\RouteMatcher())), [0 => ['path' => '(/login$|/$|/auth$|/logout$|/session-status|/auth/logout|/auth/login|/auth/session-status)']], 'XSRF-TOKEN', 0, '/', NULL, false, ($this->privates['App\\Security\\CSRFTokenManager'] ?? $this->getCSRFTokenManagerService()));
    }

    /*
     * Gets the private 'App\Security\CSRFTokenManager' shared autowired service.
     *
     * @return \App\Security\CSRFTokenManager
     */
    protected function getCSRFTokenManagerService()
    {
        return $this->privates['App\\Security\\CSRFTokenManager'] = new \App\Security\CSRFTokenManager(($this->services['.container.private.security.csrf.token_manager'] ?? $this->get_Container_Private_Security_Csrf_TokenManagerService()), 'angular');
    }

    /*
     * Gets the private 'App\Security\CSRFValidationListener' shared autowired service.
     *
     * @return \App\Security\CSRFValidationListener
     */
    protected function getCSRFValidationListenerService()
    {
        return $this->privates['App\\Security\\CSRFValidationListener'] = new \App\Security\CSRFValidationListener(($this->privates['App\\Security\\CSRFTokenManager'] ?? $this->getCSRFTokenManagerService()), ($this->privates['App\\Security\\RouteMatcher'] ?? ($this->privates['App\\Security\\RouteMatcher'] = new \App\Security\RouteMatcher())), [0 => ['path' => '/api']], 'X-XSRF-TOKEN');
    }

    /*
     * Gets the private 'App\Security\LegacySessionDenyAccessListener' shared autowired service.
     *
     * @return \App\Security\LegacySessionDenyAccessListener
     */
    protected function getLegacySessionDenyAccessListenerService()
    {
        $a = ($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService());
        $b = ($this->privates['api_platform.security.resource_access_checker'] ?? $this->getApiPlatform_Security_ResourceAccessCheckerService());

        return $this->privates['App\\Security\\LegacySessionDenyAccessListener'] = new \App\Security\LegacySessionDenyAccessListener(new \ApiPlatform\Symfony\EventListener\DenyAccessListener($a, $b), $a, $b, ($this->privates['App\\Authentication\\LegacyHandler\\Authentication'] ?? $this->getAuthenticationService()), ($this->services['session'] ?? $this->getSessionService()));
    }

    /*
     * Gets the private 'App\UserPreferences\LegacyHandler\UserPreferenceHandler' shared autowired service.
     *
     * @return \App\UserPreferences\LegacyHandler\UserPreferenceHandler
     */
    protected function getUserPreferenceHandlerService()
    {
        return $this->privates['App\\UserPreferences\\LegacyHandler\\UserPreferenceHandler'] = new \App\UserPreferences\LegacyHandler\UserPreferenceHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ?? ($this->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] = new \App\Engine\LegacyHandler\LegacyScopeState())), $this->parameters['legacy.exposed_user_preferences'], new \App\UserPreferences\LegacyHandler\UserPreferencesMappers(new RewindableGenerator(function () {
            yield 0 => ($this->privates['App\\UserPreferences\\LegacyHandler\\Mappers\\CurrencyPreferenceMapper'] ?? $this->load('getCurrencyPreferenceMapperService'));
            yield 1 => ($this->privates['App\\UserPreferences\\LegacyHandler\\Mappers\\DateFormatPreferenceMapper'] ?? $this->load('getDateFormatPreferenceMapperService'));
            yield 2 => ($this->privates['App\\UserPreferences\\LegacyHandler\\Mappers\\SnoozeAlertTimerPreferenceMapper'] ?? $this->load('getSnoozeAlertTimerPreferenceMapperService'));
            yield 3 => ($this->privates['App\\UserPreferences\\LegacyHandler\\Mappers\\TimeFormatPreferenceMapper'] ?? $this->load('getTimeFormatPreferenceMapperService'));
            yield 4 => ($this->privates['App\\UserPreferences\\LegacyHandler\\Mappers\\TimezonePreferenceMapper'] ?? ($this->privates['App\\UserPreferences\\LegacyHandler\\Mappers\\TimezonePreferenceMapper'] = new \App\UserPreferences\LegacyHandler\Mappers\TimezonePreferenceMapper()));
            yield 5 => ($this->privates['App\\UserPreferences\\LegacyHandler\\Mappers\\UiPreferenceMapper'] ?? ($this->privates['App\\UserPreferences\\LegacyHandler\\Mappers\\UiPreferenceMapper'] = new \App\UserPreferences\LegacyHandler\Mappers\UiPreferenceMapper()));
        }, 6)), $this->parameters['legacy.user_preferences_key_map'], ($this->services['session'] ?? $this->getSessionService()));
    }

    /*
     * Gets the private 'annotations.cached_reader' shared service.
     *
     * @return \Doctrine\Common\Annotations\PsrCachedReader
     */
    protected function getAnnotations_CachedReaderService()
    {
        return $this->privates['annotations.cached_reader'] = new \Doctrine\Common\Annotations\PsrCachedReader(($this->privates['annotations.reader'] ?? $this->getAnnotations_ReaderService()), $this->load('getAnnotations_CacheAdapterService'), false);
    }

    /*
     * Gets the private 'annotations.reader' shared service.
     *
     * @return \Doctrine\Common\Annotations\AnnotationReader
     */
    protected function getAnnotations_ReaderService()
    {
        $this->privates['annotations.reader'] = $instance = new \Doctrine\Common\Annotations\AnnotationReader();

        $a = new \Doctrine\Common\Annotations\AnnotationRegistry();
        $a->registerUniqueLoader('class_exists');

        $instance->addGlobalIgnoredName('required', $a);

        return $instance;
    }

    /*
     * Gets the private 'api_platform.cache.identifiers_extractor' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getApiPlatform_Cache_IdentifiersExtractorService()
    {
        return $this->privates['api_platform.cache.identifiers_extractor'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('8mZilFl6I7', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'api_platform.cache.metadata.property.legacy' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getApiPlatform_Cache_Metadata_Property_LegacyService()
    {
        return $this->privates['api_platform.cache.metadata.property.legacy'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('jrXET9e9zp', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'api_platform.cache.metadata.resource' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getApiPlatform_Cache_Metadata_ResourceService()
    {
        return $this->privates['api_platform.cache.metadata.resource'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('JFRw9hCjGb', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'api_platform.cache.metadata.resource.legacy' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getApiPlatform_Cache_Metadata_Resource_LegacyService()
    {
        return $this->privates['api_platform.cache.metadata.resource.legacy'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('-eLSJCddW9', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'api_platform.cache.route_name_resolver' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getApiPlatform_Cache_RouteNameResolverService()
    {
        return $this->privates['api_platform.cache.route_name_resolver'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('s3W6YQVYeY', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'api_platform.cache.subresource_operation_factory' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getApiPlatform_Cache_SubresourceOperationFactoryService()
    {
        return $this->privates['api_platform.cache.subresource_operation_factory'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('D406Un+Eaz', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'api_platform.collection_data_provider' shared service.
     *
     * @return \ApiPlatform\Core\DataProvider\ChainCollectionDataProvider
     */
    protected function getApiPlatform_CollectionDataProviderService()
    {
        return $this->privates['api_platform.collection_data_provider'] = new \ApiPlatform\Core\DataProvider\ChainCollectionDataProvider(new RewindableGenerator(function () {
            yield 0 => ($this->privates['App\\Process\\DataProvider\\ProcessCollectionDataProvider'] ?? ($this->privates['App\\Process\\DataProvider\\ProcessCollectionDataProvider'] = new \App\Process\DataProvider\ProcessCollectionDataProvider()));
            yield 1 => ($this->privates['App\\SystemConfig\\DataProvider\\SystemConfigCollectionDataProvider'] ?? $this->load('getSystemConfigCollectionDataProviderService'));
            yield 2 => ($this->privates['App\\UserPreferences\\DataProvider\\UserPreferenceCollectionDataProvider'] ?? $this->load('getUserPreferenceCollectionDataProviderService'));
            yield 3 => ($this->privates['api_platform.doctrine.orm.default.collection_data_provider'] ?? $this->load('getApiPlatform_Doctrine_Orm_Default_CollectionDataProviderService'));
        }, 4));
    }

    /*
     * Gets the private 'api_platform.http_cache.listener.response.configure' shared service.
     *
     * @return \ApiPlatform\HttpCache\EventListener\AddHeadersListener
     */
    protected function getApiPlatform_HttpCache_Listener_Response_ConfigureService()
    {
        return $this->privates['api_platform.http_cache.listener.response.configure'] = new \ApiPlatform\HttpCache\EventListener\AddHeadersListener(true, NULL, NULL, $this->parameters['api_platform.http_cache.vary'], NULL, ($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService()));
    }

    /*
     * Gets the private 'api_platform.hydra.json_schema.schema_factory' shared service.
     *
     * @return \ApiPlatform\Core\Hydra\JsonSchema\SchemaFactory
     */
    protected function getApiPlatform_Hydra_JsonSchema_SchemaFactoryService()
    {
        $a = ($this->privates['api_platform.json_schema.type_factory'] ?? $this->getApiPlatform_JsonSchema_TypeFactoryService());

        if (isset($this->privates['api_platform.hydra.json_schema.schema_factory'])) {
            return $this->privates['api_platform.hydra.json_schema.schema_factory'];
        }

        return $this->privates['api_platform.hydra.json_schema.schema_factory'] = new \ApiPlatform\Core\Hydra\JsonSchema\SchemaFactory(new \ApiPlatform\Core\JsonSchema\SchemaFactory($a, ($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService()), ($this->privates['api_platform.metadata.property.name_collection_factory.cached'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_CachedService()), ($this->privates['api_platform.metadata.property.metadata_factory.cached.legacy'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_Cached_LegacyService()), ($this->privates['serializer.name_converter.metadata_aware'] ?? $this->getSerializer_NameConverter_MetadataAwareService()), ($this->privates['api_platform.resource_class_resolver'] ?? $this->getApiPlatform_ResourceClassResolverService())));
    }

    /*
     * Gets the private 'api_platform.hydra.listener.response.add_link_header' shared service.
     *
     * @return \ApiPlatform\Hydra\EventListener\AddLinkHeaderListener
     */
    protected function getApiPlatform_Hydra_Listener_Response_AddLinkHeaderService()
    {
        return $this->privates['api_platform.hydra.listener.response.add_link_header'] = new \ApiPlatform\Hydra\EventListener\AddLinkHeaderListener(($this->privates['api_platform.router'] ?? $this->getApiPlatform_RouterService()));
    }

    /*
     * Gets the private 'api_platform.identifier.converter' shared service.
     *
     * @return \ApiPlatform\Core\Identifier\IdentifierConverter
     */
    protected function getApiPlatform_Identifier_ConverterService()
    {
        return $this->privates['api_platform.identifier.converter'] = new \ApiPlatform\Core\Identifier\IdentifierConverter(($this->privates['api_platform.identifiers_extractor.cached'] ?? $this->getApiPlatform_IdentifiersExtractor_CachedService()), ($this->privates['api_platform.metadata.property.metadata_factory.cached.legacy'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_Cached_LegacyService()), new RewindableGenerator(function () {
            yield 0 => ($this->privates['api_platform.identifier.integer'] ?? ($this->privates['api_platform.identifier.integer'] = new \ApiPlatform\Core\Identifier\Normalizer\IntegerDenormalizer()));
            yield 1 => ($this->privates['api_platform.identifier.date_normalizer'] ?? ($this->privates['api_platform.identifier.date_normalizer'] = new \ApiPlatform\Core\Identifier\Normalizer\DateTimeIdentifierDenormalizer()));
        }, 2));
    }

    /*
     * Gets the private 'api_platform.identifiers_extractor.cached' shared service.
     *
     * @return \ApiPlatform\Core\Api\CachedIdentifiersExtractor
     */
    protected function getApiPlatform_IdentifiersExtractor_CachedService()
    {
        $a = ($this->privates['property_accessor'] ?? $this->getPropertyAccessorService());
        $b = ($this->privates['api_platform.resource_class_resolver'] ?? $this->getApiPlatform_ResourceClassResolverService());

        return $this->privates['api_platform.identifiers_extractor.cached'] = new \ApiPlatform\Core\Api\CachedIdentifiersExtractor(($this->privates['api_platform.cache.identifiers_extractor'] ?? $this->getApiPlatform_Cache_IdentifiersExtractorService()), new \ApiPlatform\Core\Api\IdentifiersExtractor(($this->privates['api_platform.metadata.property.name_collection_factory.cached'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_CachedService()), ($this->privates['api_platform.metadata.property.metadata_factory.cached.legacy'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_Cached_LegacyService()), $a, $b, true), $a, $b);
    }

    /*
     * Gets the private 'api_platform.iri_converter.legacy' shared service.
     *
     * @return \ApiPlatform\Core\Bridge\Symfony\Routing\IriConverter
     */
    protected function getApiPlatform_IriConverter_LegacyService()
    {
        $a = ($this->privates['api_platform.router'] ?? $this->getApiPlatform_RouterService());

        return $this->privates['api_platform.iri_converter.legacy'] = new \ApiPlatform\Core\Bridge\Symfony\Routing\IriConverter(($this->privates['api_platform.metadata.property.name_collection_factory.cached'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_CachedService()), ($this->privates['api_platform.metadata.property.metadata_factory.cached.legacy'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_Cached_LegacyService()), ($this->privates['api_platform.item_data_provider'] ?? $this->getApiPlatform_ItemDataProviderService()), new \ApiPlatform\Core\Bridge\Symfony\Routing\CachedRouteNameResolver(($this->privates['api_platform.cache.route_name_resolver'] ?? $this->getApiPlatform_Cache_RouteNameResolverService()), new \ApiPlatform\Core\Bridge\Symfony\Routing\RouteNameResolver($a)), $a, ($this->privates['property_accessor'] ?? $this->getPropertyAccessorService()), ($this->privates['api_platform.identifiers_extractor.cached'] ?? $this->getApiPlatform_IdentifiersExtractor_CachedService()), ($this->privates['api_platform.subresource_data_provider'] ?? $this->getApiPlatform_SubresourceDataProviderService()), ($this->privates['api_platform.identifier.converter'] ?? $this->getApiPlatform_Identifier_ConverterService()), ($this->privates['api_platform.resource_class_resolver'] ?? $this->getApiPlatform_ResourceClassResolverService()), ($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService()));
    }

    /*
     * Gets the private 'api_platform.item_data_provider' shared service.
     *
     * @return \ApiPlatform\Core\DataProvider\ChainItemDataProvider
     */
    protected function getApiPlatform_ItemDataProviderService()
    {
        return $this->privates['api_platform.item_data_provider'] = new \ApiPlatform\Core\DataProvider\ChainItemDataProvider(new RewindableGenerator(function () {
            yield 0 => ($this->privates['App\\Data\\DataProvider\\RecordItemDataProvider'] ?? $this->load('getRecordItemDataProviderService'));
            yield 1 => ($this->privates['App\\Data\\DataProvider\\RecordListItemDataProvider'] ?? $this->load('getRecordListItemDataProviderService'));
            yield 2 => ($this->privates['App\\FieldDefinitions\\DataProvider\\FieldDefinitionItemDataProvider'] ?? $this->load('getFieldDefinitionItemDataProviderService'));
            yield 3 => ($this->privates['App\\Languages\\DataProvider\\AppListStringsItemDataProvider'] ?? $this->load('getAppListStringsItemDataProviderService'));
            yield 4 => ($this->privates['App\\Languages\\DataProvider\\AppStringsItemDataProvider'] ?? $this->load('getAppStringsItemDataProviderService'));
            yield 5 => ($this->privates['App\\Languages\\DataProvider\\ModStringsItemDataProvider'] ?? $this->load('getModStringsItemDataProviderService'));
            yield 6 => ($this->privates['App\\Metadata\\DataProvider\\AppMetadataItemDataProvider'] ?? $this->load('getAppMetadataItemDataProviderService'));
            yield 7 => ($this->privates['App\\Metadata\\DataProvider\\ModuleMetadataItemDataProvider'] ?? $this->load('getModuleMetadataItemDataProviderService'));
            yield 8 => ($this->privates['App\\Navbar\\DataProvider\\NavbarItemDataProvider'] ?? $this->load('getNavbarItemDataProviderService'));
            yield 9 => ($this->privates['App\\Process\\DataProvider\\ProcessItemDataProvider'] ?? ($this->privates['App\\Process\\DataProvider\\ProcessItemDataProvider'] = new \App\Process\DataProvider\ProcessItemDataProvider()));
            yield 10 => ($this->privates['App\\Statistics\\DataProvider\\BatchedStatisticsItemDataProvider'] ?? $this->load('getBatchedStatisticsItemDataProviderService'));
            yield 11 => ($this->privates['App\\Statistics\\DataProvider\\StatisticsItemDataProvider'] ?? $this->load('getStatisticsItemDataProviderService'));
            yield 12 => ($this->privates['App\\SystemConfig\\DataProvider\\SystemConfigItemDataProvider'] ?? $this->load('getSystemConfigItemDataProviderService'));
            yield 13 => ($this->privates['App\\Themes\\DataProvider\\ThemeImagesItemDataProvider'] ?? $this->load('getThemeImagesItemDataProviderService'));
            yield 14 => ($this->privates['App\\UserPreferences\\DataProvider\\UserPreferenceItemDataProvider'] ?? $this->load('getUserPreferenceItemDataProviderService'));
            yield 15 => ($this->privates['App\\ViewDefinitions\\DataProvider\\ViewDefinitionItemDataProvider'] ?? $this->load('getViewDefinitionItemDataProviderService'));
            yield 16 => ($this->privates['api_platform.doctrine.orm.default.item_data_provider'] ?? $this->load('getApiPlatform_Doctrine_Orm_Default_ItemDataProviderService'));
        }, 17));
    }

    /*
     * Gets the private 'api_platform.json_schema.type_factory' shared service.
     *
     * @return \ApiPlatform\Core\JsonSchema\TypeFactory
     */
    protected function getApiPlatform_JsonSchema_TypeFactoryService()
    {
        $this->privates['api_platform.json_schema.type_factory'] = $instance = new \ApiPlatform\Core\JsonSchema\TypeFactory(($this->privates['api_platform.resource_class_resolver'] ?? $this->getApiPlatform_ResourceClassResolverService()));

        $instance->setSchemaFactory(($this->privates['api_platform.hydra.json_schema.schema_factory'] ?? $this->getApiPlatform_Hydra_JsonSchema_SchemaFactoryService()));

        return $instance;
    }

    /*
     * Gets the private 'api_platform.jsonld.context_builder' shared service.
     *
     * @return \ApiPlatform\JsonLd\ContextBuilder
     */
    protected function getApiPlatform_Jsonld_ContextBuilderService()
    {
        $a = ($this->privates['api_platform.router'] ?? $this->getApiPlatform_RouterService());

        return $this->privates['api_platform.jsonld.context_builder'] = new \ApiPlatform\JsonLd\ContextBuilder(($this->privates['api_platform.metadata.resource.name_collection_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_NameCollectionFactory_CachedService()), ($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService()), ($this->privates['api_platform.metadata.property.name_collection_factory.cached'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_CachedService()), ($this->privates['api_platform.metadata.property.metadata_factory.cached.legacy'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_Cached_LegacyService()), $a, NULL, new \ApiPlatform\Symfony\Routing\SkolemIriConverter($a));
    }

    /*
     * Gets the private 'api_platform.listener.request.add_format' shared service.
     *
     * @return \ApiPlatform\Symfony\EventListener\AddFormatListener
     */
    protected function getApiPlatform_Listener_Request_AddFormatService()
    {
        return $this->privates['api_platform.listener.request.add_format'] = new \ApiPlatform\Symfony\EventListener\AddFormatListener(new \Negotiation\Negotiator(), ($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService()), $this->parameters['api_platform.formats']);
    }

    /*
     * Gets the private 'api_platform.listener.request.deserialize' shared service.
     *
     * @return \ApiPlatform\Symfony\EventListener\DeserializeListener
     */
    protected function getApiPlatform_Listener_Request_DeserializeService()
    {
        return $this->privates['api_platform.listener.request.deserialize'] = new \ApiPlatform\Symfony\EventListener\DeserializeListener(($this->services['.container.private.serializer'] ?? $this->get_Container_Private_SerializerService()), ($this->privates['api_platform.serializer.context_builder.filter'] ?? $this->getApiPlatform_Serializer_ContextBuilder_FilterService()), ($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService()));
    }

    /*
     * Gets the private 'api_platform.listener.request.read.legacy' shared service.
     *
     * @return \ApiPlatform\Core\EventListener\ReadListener
     */
    protected function getApiPlatform_Listener_Request_Read_LegacyService()
    {
        return $this->privates['api_platform.listener.request.read.legacy'] = new \ApiPlatform\Core\EventListener\ReadListener(($this->privates['api_platform.collection_data_provider'] ?? $this->getApiPlatform_CollectionDataProviderService()), ($this->privates['api_platform.item_data_provider'] ?? $this->getApiPlatform_ItemDataProviderService()), ($this->privates['api_platform.subresource_data_provider'] ?? $this->getApiPlatform_SubresourceDataProviderService()), ($this->privates['api_platform.serializer.context_builder.filter'] ?? $this->getApiPlatform_Serializer_ContextBuilder_FilterService()), ($this->privates['api_platform.identifier.converter'] ?? $this->getApiPlatform_Identifier_ConverterService()), ($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService()));
    }

    /*
     * Gets the private 'api_platform.listener.view.validate_query_parameters' shared service.
     *
     * @return \ApiPlatform\Symfony\EventListener\QueryParameterValidateListener
     */
    protected function getApiPlatform_Listener_View_ValidateQueryParametersService()
    {
        return $this->privates['api_platform.listener.view.validate_query_parameters'] = new \ApiPlatform\Symfony\EventListener\QueryParameterValidateListener(($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService()), new \ApiPlatform\Core\Filter\QueryParameterValidator(($this->privates['api_platform.filter_locator'] ?? ($this->privates['api_platform.filter_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [], [])))), true);
    }

    /*
     * Gets the private 'api_platform.metadata.property.metadata_factory.cached.legacy' shared service.
     *
     * @return \ApiPlatform\Core\Metadata\Property\Factory\CachedPropertyMetadataFactory
     */
    protected function getApiPlatform_Metadata_Property_MetadataFactory_Cached_LegacyService()
    {
        $a = ($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService());

        return $this->privates['api_platform.metadata.property.metadata_factory.cached.legacy'] = new \ApiPlatform\Core\Metadata\Property\Factory\CachedPropertyMetadataFactory(($this->privates['api_platform.cache.metadata.property.legacy'] ?? $this->getApiPlatform_Cache_Metadata_Property_LegacyService()), new \ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\ValidatorPropertyMetadataFactory(($this->services['.container.private.validator'] ?? $this->get_Container_Private_ValidatorService()), new \ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyMetadataFactory(($this->privates['api_platform.metadata.extractor.yaml.legacy'] ?? ($this->privates['api_platform.metadata.extractor.yaml.legacy'] = new \ApiPlatform\Core\Metadata\Extractor\YamlExtractor([], $this))), new \ApiPlatform\Core\Metadata\Property\Factory\AnnotationPropertyMetadataFactory($a, new \ApiPlatform\Core\Metadata\Property\Factory\AnnotationSubresourceMetadataFactory($a, new \ApiPlatform\Core\Metadata\Property\Factory\DefaultPropertyMetadataFactory(new \ApiPlatform\Core\Metadata\Property\Factory\SerializerPropertyMetadataFactory(($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService()), ($this->privates['api_platform.serializer.mapping.class_metadata_factory'] ?? $this->getApiPlatform_Serializer_Mapping_ClassMetadataFactoryService()), new \ApiPlatform\Core\Bridge\Doctrine\Orm\Metadata\Property\DoctrineOrmPropertyMetadataFactory(($this->services['doctrine'] ?? $this->getDoctrineService()), new \ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyMetadataFactory(($this->privates['property_info.cache'] ?? $this->getPropertyInfo_CacheService()), new \ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyMetadataFactory(($this->privates['api_platform.metadata.extractor.xml.legacy'] ?? ($this->privates['api_platform.metadata.extractor.xml.legacy'] = new \ApiPlatform\Core\Metadata\Extractor\XmlExtractor([], $this)))))), ($this->privates['api_platform.resource_class_resolver'] ?? $this->getApiPlatform_ResourceClassResolverService())))))), new RewindableGenerator(function () {
            yield 0 => ($this->privates['api_platform.metadata.property_schema.choice_restriction'] ?? ($this->privates['api_platform.metadata.property_schema.choice_restriction'] = new \ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaChoiceRestriction()));
            yield 1 => ($this->privates['api_platform.metadata.property_schema.collection_restriction'] ?? $this->load('getApiPlatform_Metadata_PropertySchema_CollectionRestrictionService'));
            yield 2 => ($this->privates['api_platform.metadata.property_schema.count_restriction'] ?? ($this->privates['api_platform.metadata.property_schema.count_restriction'] = new \ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaCountRestriction()));
            yield 3 => ($this->privates['api_platform.metadata.property_schema.greater_than_or_equal_restriction'] ?? ($this->privates['api_platform.metadata.property_schema.greater_than_or_equal_restriction'] = new \ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaGreaterThanOrEqualRestriction()));
            yield 4 => ($this->privates['api_platform.metadata.property_schema.greater_than_restriction'] ?? ($this->privates['api_platform.metadata.property_schema.greater_than_restriction'] = new \ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaGreaterThanRestriction()));
            yield 5 => ($this->privates['api_platform.metadata.property_schema.length_restriction'] ?? ($this->privates['api_platform.metadata.property_schema.length_restriction'] = new \ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaLengthRestriction()));
            yield 6 => ($this->privates['api_platform.metadata.property_schema.less_than_or_equal_restriction'] ?? ($this->privates['api_platform.metadata.property_schema.less_than_or_equal_restriction'] = new \ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaLessThanOrEqualRestriction()));
            yield 7 => ($this->privates['api_platform.metadata.property_schema.less_than_restriction'] ?? ($this->privates['api_platform.metadata.property_schema.less_than_restriction'] = new \ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaLessThanRestriction()));
            yield 8 => ($this->privates['api_platform.metadata.property_schema.one_of_restriction'] ?? $this->load('getApiPlatform_Metadata_PropertySchema_OneOfRestrictionService'));
            yield 9 => ($this->privates['api_platform.metadata.property_schema.range_restriction'] ?? ($this->privates['api_platform.metadata.property_schema.range_restriction'] = new \ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaRangeRestriction()));
            yield 10 => ($this->privates['api_platform.metadata.property_schema.regex_restriction'] ?? ($this->privates['api_platform.metadata.property_schema.regex_restriction'] = new \ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaRegexRestriction()));
            yield 11 => ($this->privates['api_platform.metadata.property_schema.format_restriction'] ?? ($this->privates['api_platform.metadata.property_schema.format_restriction'] = new \ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaFormat()));
            yield 12 => ($this->privates['api_platform.metadata.property_schema.unique_restriction'] ?? ($this->privates['api_platform.metadata.property_schema.unique_restriction'] = new \ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaUniqueRestriction()));
        }, 13)));
    }

    /*
     * Gets the private 'api_platform.metadata.property.name_collection_factory.cached' shared service.
     *
     * @return \ApiPlatform\Metadata\Property\Factory\CachedPropertyNameCollectionFactory
     */
    protected function getApiPlatform_Metadata_Property_NameCollectionFactory_CachedService()
    {
        return $this->privates['api_platform.metadata.property.name_collection_factory.cached'] = new \ApiPlatform\Metadata\Property\Factory\CachedPropertyNameCollectionFactory(($this->privates['api_platform.cache.metadata.property.legacy'] ?? $this->getApiPlatform_Cache_Metadata_Property_LegacyService()), new \ApiPlatform\Metadata\Property\Factory\ExtractorPropertyNameCollectionFactory(($this->privates['api_platform.metadata.extractor.xml.legacy'] ?? ($this->privates['api_platform.metadata.extractor.xml.legacy'] = new \ApiPlatform\Core\Metadata\Extractor\XmlExtractor([], $this))), new \ApiPlatform\Metadata\Property\Factory\PropertyInfoPropertyNameCollectionFactory(($this->privates['property_info.cache'] ?? $this->getPropertyInfo_CacheService()))));
    }

    /*
     * Gets the private 'api_platform.metadata.resource.metadata_factory.cached' shared service.
     *
     * @return \ApiPlatform\Core\Metadata\Resource\Factory\CachedResourceMetadataFactory
     */
    protected function getApiPlatform_Metadata_Resource_MetadataFactory_CachedService()
    {
        $a = ($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService());

        return $this->privates['api_platform.metadata.resource.metadata_factory.cached'] = new \ApiPlatform\Core\Metadata\Resource\Factory\CachedResourceMetadataFactory(($this->privates['api_platform.cache.metadata.resource.legacy'] ?? $this->getApiPlatform_Cache_Metadata_Resource_LegacyService()), new \ApiPlatform\Core\Metadata\Resource\Factory\FormatsResourceMetadataFactory(new \ApiPlatform\Core\Metadata\Resource\Factory\OperationResourceMetadataFactory(new \ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceFilterMetadataFactory($a, new \ApiPlatform\Core\Metadata\Resource\Factory\ShortNameResourceMetadataFactory(new \ApiPlatform\Core\Metadata\Resource\Factory\PhpDocResourceMetadataFactory(new \ApiPlatform\Core\Metadata\Resource\Factory\InputOutputResourceMetadataFactory(new \ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceMetadataFactory(($this->privates['api_platform.metadata.extractor.yaml.legacy'] ?? ($this->privates['api_platform.metadata.extractor.yaml.legacy'] = new \ApiPlatform\Core\Metadata\Extractor\YamlExtractor([], $this))), new \ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceMetadataFactory($a, new \ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceMetadataFactory(($this->privates['api_platform.metadata.extractor.xml.legacy'] ?? ($this->privates['api_platform.metadata.extractor.xml.legacy'] = new \ApiPlatform\Core\Metadata\Extractor\XmlExtractor([], $this)))), $this->parameters['api_platform.defaults']), $this->parameters['api_platform.defaults']))))), $this->parameters['api_platform.patch_formats']), $this->parameters['api_platform.formats'], $this->parameters['api_platform.patch_formats']));
    }

    /*
     * Gets the private 'api_platform.metadata.resource.name_collection_factory.cached' shared service.
     *
     * @return \ApiPlatform\Metadata\Resource\Factory\CachedResourceNameCollectionFactory
     */
    protected function getApiPlatform_Metadata_Resource_NameCollectionFactory_CachedService()
    {
        return $this->privates['api_platform.metadata.resource.name_collection_factory.cached'] = new \ApiPlatform\Metadata\Resource\Factory\CachedResourceNameCollectionFactory(($this->privates['api_platform.cache.metadata.resource'] ?? $this->getApiPlatform_Cache_Metadata_ResourceService()), new \ApiPlatform\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory(($this->privates['api_platform.metadata.extractor.yaml.legacy'] ?? ($this->privates['api_platform.metadata.extractor.yaml.legacy'] = new \ApiPlatform\Core\Metadata\Extractor\YamlExtractor([], $this))), new \ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceNameCollectionFactory(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()), $this->parameters['api_platform.resource_class_directories'], new \ApiPlatform\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory(($this->privates['api_platform.metadata.extractor.xml.legacy'] ?? ($this->privates['api_platform.metadata.extractor.xml.legacy'] = new \ApiPlatform\Core\Metadata\Extractor\XmlExtractor([], $this)))))));
    }

    /*
     * Gets the private 'api_platform.operation_path_resolver.custom' shared service.
     *
     * @return \ApiPlatform\PathResolver\CustomOperationPathResolver
     */
    protected function getApiPlatform_OperationPathResolver_CustomService()
    {
        return $this->privates['api_platform.operation_path_resolver.custom'] = new \ApiPlatform\PathResolver\CustomOperationPathResolver(new \ApiPlatform\PathResolver\OperationPathResolver(($this->privates['api_platform.path_segment_name_generator.dash'] ?? ($this->privates['api_platform.path_segment_name_generator.dash'] = new \ApiPlatform\Operation\DashPathSegmentNameGenerator()))));
    }

    /*
     * Gets the private 'api_platform.operation_path_resolver.router' shared service.
     *
     * @return \ApiPlatform\Core\Bridge\Symfony\Routing\RouterOperationPathResolver
     */
    protected function getApiPlatform_OperationPathResolver_RouterService()
    {
        return $this->privates['api_platform.operation_path_resolver.router'] = new \ApiPlatform\Core\Bridge\Symfony\Routing\RouterOperationPathResolver(($this->privates['api_platform.router'] ?? $this->getApiPlatform_RouterService()), ($this->privates['api_platform.operation_path_resolver.custom'] ?? $this->getApiPlatform_OperationPathResolver_CustomService()), ($this->privates['api_platform.subresource_operation_factory.cached'] ?? $this->getApiPlatform_SubresourceOperationFactory_CachedService()));
    }

    /*
     * Gets the private 'api_platform.resource_class_resolver' shared service.
     *
     * @return \ApiPlatform\Api\ResourceClassResolver
     */
    protected function getApiPlatform_ResourceClassResolverService()
    {
        return $this->privates['api_platform.resource_class_resolver'] = new \ApiPlatform\Api\ResourceClassResolver(($this->privates['api_platform.metadata.resource.name_collection_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_NameCollectionFactory_CachedService()));
    }

    /*
     * Gets the private 'api_platform.router' shared service.
     *
     * @return \ApiPlatform\Symfony\Routing\Router
     */
    protected function getApiPlatform_RouterService()
    {
        return $this->privates['api_platform.router'] = new \ApiPlatform\Symfony\Routing\Router(($this->services['router'] ?? $this->getRouterService()), 1);
    }

    /*
     * Gets the private 'api_platform.security.resource_access_checker' shared service.
     *
     * @return \ApiPlatform\Symfony\Security\ResourceAccessChecker
     */
    protected function getApiPlatform_Security_ResourceAccessCheckerService()
    {
        return $this->privates['api_platform.security.resource_access_checker'] = new \ApiPlatform\Symfony\Security\ResourceAccessChecker(($this->privates['security.expression_language'] ?? $this->getSecurity_ExpressionLanguageService()), ($this->privates['security.authentication.trust_resolver'] ?? ($this->privates['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver())), ($this->privates['security.role_hierarchy'] ?? ($this->privates['security.role_hierarchy'] = new \Symfony\Component\Security\Core\Role\RoleHierarchy([]))), ($this->services['security.token_storage'] ?? $this->getSecurity_TokenStorageService()), ($this->services['security.authorization_checker'] ?? $this->getSecurity_AuthorizationCheckerService()), false);
    }

    /*
     * Gets the private 'api_platform.serializer.context_builder.filter' shared service.
     *
     * @return \ApiPlatform\Serializer\SerializerFilterContextBuilder
     */
    protected function getApiPlatform_Serializer_ContextBuilder_FilterService()
    {
        $a = ($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService());

        return $this->privates['api_platform.serializer.context_builder.filter'] = new \ApiPlatform\Serializer\SerializerFilterContextBuilder($a, ($this->privates['api_platform.filter_locator'] ?? ($this->privates['api_platform.filter_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [], []))), new \ApiPlatform\Serializer\SerializerContextBuilder($a));
    }

    /*
     * Gets the private 'api_platform.serializer.mapping.class_metadata_factory' shared service.
     *
     * @return \ApiPlatform\Serializer\Mapping\Factory\ClassMetadataFactory
     */
    protected function getApiPlatform_Serializer_Mapping_ClassMetadataFactoryService()
    {
        return $this->privates['api_platform.serializer.mapping.class_metadata_factory'] = new \ApiPlatform\Serializer\Mapping\Factory\ClassMetadataFactory(new \Symfony\Component\Serializer\Mapping\Factory\CacheClassMetadataFactory(new \Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory(new \Symfony\Component\Serializer\Mapping\Loader\LoaderChain([0 => new \Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()))])), \Symfony\Component\Cache\Adapter\PhpArrayAdapter::create(($this->targetDir.''.'/serialization.php'), ($this->privates['cache.serializer'] ?? $this->getCache_SerializerService()))));
    }

    /*
     * Gets the private 'api_platform.subresource_data_provider' shared service.
     *
     * @return \ApiPlatform\Core\DataProvider\ChainSubresourceDataProvider
     */
    protected function getApiPlatform_SubresourceDataProviderService()
    {
        return $this->privates['api_platform.subresource_data_provider'] = new \ApiPlatform\Core\DataProvider\ChainSubresourceDataProvider(new RewindableGenerator(function () {
            yield 0 => ($this->privates['api_platform.doctrine.orm.default.subresource_data_provider'] ?? $this->load('getApiPlatform_Doctrine_Orm_Default_SubresourceDataProviderService'));
        }, 1));
    }

    /*
     * Gets the private 'api_platform.subresource_operation_factory.cached' shared service.
     *
     * @return \ApiPlatform\Core\Operation\Factory\CachedSubresourceOperationFactory
     */
    protected function getApiPlatform_SubresourceOperationFactory_CachedService()
    {
        return $this->privates['api_platform.subresource_operation_factory.cached'] = new \ApiPlatform\Core\Operation\Factory\CachedSubresourceOperationFactory(($this->privates['api_platform.cache.subresource_operation_factory'] ?? $this->getApiPlatform_Cache_SubresourceOperationFactoryService()), new \ApiPlatform\Core\Operation\Factory\SubresourceOperationFactory(($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService()), ($this->privates['api_platform.metadata.property.name_collection_factory.cached'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_CachedService()), ($this->privates['api_platform.metadata.property.metadata_factory.cached.legacy'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_Cached_LegacyService()), ($this->privates['api_platform.path_segment_name_generator.dash'] ?? ($this->privates['api_platform.path_segment_name_generator.dash'] = new \ApiPlatform\Operation\DashPathSegmentNameGenerator())), ($this->privates['api_platform.identifiers_extractor.cached'] ?? $this->getApiPlatform_IdentifiersExtractor_CachedService())));
    }

    /*
     * Gets the private 'cache.property_access' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_PropertyAccessService()
    {
        return $this->privates['cache.property_access'] = \Symfony\Component\PropertyAccess\PropertyAccessor::createCache('PDogL14uQk', 0, $this->getParameter('container.build_id'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'cache.property_info' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_PropertyInfoService()
    {
        return $this->privates['cache.property_info'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('ENDguRWD2k', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'cache.security_expression_language' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_SecurityExpressionLanguageService()
    {
        return $this->privates['cache.security_expression_language'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('T09qlN3j0f', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'cache.serializer' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_SerializerService()
    {
        return $this->privates['cache.serializer'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('myUrJZMDOZ', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'cache.validator' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_ValidatorService()
    {
        return $this->privates['cache.validator'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('bneFufcG61', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'debug.debug_handlers_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener
     */
    protected function getDebug_DebugHandlersListenerService()
    {
        $a = new \Symfony\Bridge\Monolog\Logger('php');
        $a->pushHandler(($this->privates['monolog.handler.deprecation_filter'] ?? $this->getMonolog_Handler_DeprecationFilterService()));
        $a->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $a->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $this->privates['debug.debug_handlers_listener'] = new \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener(NULL, $a, NULL, 0, false, ($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))), false, NULL);
    }

    /*
     * Gets the private 'doctrine.result_cache_pool' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\FilesystemAdapter
     */
    protected function getDoctrine_ResultCachePoolService()
    {
        $this->privates['doctrine.result_cache_pool'] = $instance = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('9tIRAn1Fjt', 0, ($this->targetDir.''.'/pools'), ($this->privates['cache.default_marshaller'] ?? ($this->privates['cache.default_marshaller'] = new \Symfony\Component\Cache\Marshaller\DefaultMarshaller(NULL))));

        $instance->setLogger(($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));

        return $instance;
    }

    /*
     * Gets the private 'doctrine.system_cache_pool' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getDoctrine_SystemCachePoolService()
    {
        return $this->privates['doctrine.system_cache_pool'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('+dLamkVtwl', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'exception_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ErrorListener
     */
    protected function getExceptionListenerService()
    {
        return $this->privates['exception_listener'] = new \Symfony\Component\HttpKernel\EventListener\ErrorListener('error_controller', ($this->privates['monolog.logger.request'] ?? $this->getMonolog_Logger_RequestService()), false);
    }

    /*
     * Gets the private 'locale_aware_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\LocaleAwareListener
     */
    protected function getLocaleAwareListenerService()
    {
        return $this->privates['locale_aware_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleAwareListener(new RewindableGenerator(function () {
            yield 0 => ($this->privates['slugger'] ?? ($this->privates['slugger'] = new \Symfony\Component\String\Slugger\AsciiSlugger('en')));
            yield 1 => ($this->services['translator'] ?? $this->getTranslatorService());
        }, 2), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /*
     * Gets the private 'locale_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\LocaleListener
     */
    protected function getLocaleListenerService()
    {
        return $this->privates['locale_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleListener(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), 'en', ($this->services['router'] ?? $this->getRouterService()));
    }

    /*
     * Gets the private 'monolog.handler.console' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Handler\ConsoleHandler
     */
    protected function getMonolog_Handler_ConsoleService()
    {
        return $this->privates['monolog.handler.console'] = new \Symfony\Bridge\Monolog\Handler\ConsoleHandler(NULL, true, [], []);
    }

    /*
     * Gets the private 'monolog.handler.deprecation' shared service.
     *
     * @return \Monolog\Handler\StreamHandler
     */
    protected function getMonolog_Handler_DeprecationService()
    {
        $this->privates['monolog.handler.deprecation'] = $instance = new \Monolog\Handler\StreamHandler((\dirname(__DIR__, 3).'/logs/prod/prod.deprecations.log'), 100, true, NULL, false);

        $instance->pushProcessor(($this->privates['monolog.processor.psr_log_message'] ?? ($this->privates['monolog.processor.psr_log_message'] = new \Monolog\Processor\PsrLogMessageProcessor())));

        return $instance;
    }

    /*
     * Gets the private 'monolog.handler.deprecation_filter' shared service.
     *
     * @return \Monolog\Handler\FilterHandler
     */
    protected function getMonolog_Handler_DeprecationFilterService()
    {
        return $this->privates['monolog.handler.deprecation_filter'] = new \Monolog\Handler\FilterHandler(($this->privates['monolog.handler.deprecation'] ?? $this->getMonolog_Handler_DeprecationService()), 100, 200, true);
    }

    /*
     * Gets the private 'monolog.handler.main' shared service.
     *
     * @return \Monolog\Handler\FingersCrossedHandler
     */
    protected function getMonolog_Handler_MainService()
    {
        $a = new \Monolog\Handler\StreamHandler((\dirname(__DIR__, 3).'/logs/prod/prod.log'), 100, true, NULL, false);
        $a->pushProcessor(($this->privates['monolog.processor.psr_log_message'] ?? ($this->privates['monolog.processor.psr_log_message'] = new \Monolog\Processor\PsrLogMessageProcessor())));

        return $this->privates['monolog.handler.main'] = new \Monolog\Handler\FingersCrossedHandler($a, new \Symfony\Bridge\Monolog\Handler\FingersCrossed\HttpCodeActivationStrategy(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), [0 => ['code' => 404, 'urls' => []], 1 => ['code' => 405, 'urls' => []]], new \Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy(400)), 50, true, true, NULL);
    }

    /*
     * Gets the private 'monolog.logger' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_LoggerService()
    {
        $this->privates['monolog.logger'] = $instance = new \Symfony\Bridge\Monolog\Logger('app');

        $instance->useMicrosecondTimestamps(true);
        $instance->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $instance->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $instance;
    }

    /*
     * Gets the private 'monolog.logger.cache' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_CacheService()
    {
        $this->privates['monolog.logger.cache'] = $instance = new \Symfony\Bridge\Monolog\Logger('cache');

        $instance->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $instance->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $instance;
    }

    /*
     * Gets the private 'monolog.logger.request' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_RequestService()
    {
        $this->privates['monolog.logger.request'] = $instance = new \Symfony\Bridge\Monolog\Logger('request');

        $instance->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $instance->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $instance;
    }

    /*
     * Gets the private 'nelmio_cors.cors_listener' shared service.
     *
     * @return \Nelmio\CorsBundle\EventListener\CorsListener
     */
    protected function getNelmioCors_CorsListenerService()
    {
        return $this->privates['nelmio_cors.cors_listener'] = new \Nelmio\CorsBundle\EventListener\CorsListener(new \Nelmio\CorsBundle\Options\Resolver([0 => new \Nelmio\CorsBundle\Options\ConfigProvider($this->parameters['nelmio_cors.map'], $this->getParameter('nelmio_cors.defaults'))]));
    }

    /*
     * Gets the private 'parameter_bag' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag
     */
    protected function getParameterBagService()
    {
        return $this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this);
    }

    /*
     * Gets the private 'property_accessor' shared service.
     *
     * @return \Symfony\Component\PropertyAccess\PropertyAccessor
     */
    protected function getPropertyAccessorService()
    {
        $a = ($this->privates['property_info.reflection_extractor'] ?? ($this->privates['property_info.reflection_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor()));

        return $this->privates['property_accessor'] = new \Symfony\Component\PropertyAccess\PropertyAccessor(3, false, ($this->privates['cache.property_access'] ?? $this->getCache_PropertyAccessService()), true, $a, $a);
    }

    /*
     * Gets the private 'property_info.cache' shared service.
     *
     * @return \Symfony\Component\PropertyInfo\PropertyInfoCacheExtractor
     */
    protected function getPropertyInfo_CacheService()
    {
        return $this->privates['property_info.cache'] = new \Symfony\Component\PropertyInfo\PropertyInfoCacheExtractor(new \Symfony\Component\PropertyInfo\PropertyInfoExtractor(new RewindableGenerator(function () {
            yield 0 => ($this->privates['property_info.serializer_extractor'] ?? $this->load('getPropertyInfo_SerializerExtractorService'));
            yield 1 => ($this->privates['property_info.reflection_extractor'] ?? ($this->privates['property_info.reflection_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor()));
            yield 2 => ($this->privates['doctrine.orm.default_entity_manager.property_info_extractor'] ?? $this->load('getDoctrine_Orm_DefaultEntityManager_PropertyInfoExtractorService'));
        }, 3), new RewindableGenerator(function () {
            yield 0 => ($this->privates['doctrine.orm.default_entity_manager.property_info_extractor'] ?? $this->load('getDoctrine_Orm_DefaultEntityManager_PropertyInfoExtractorService'));
            yield 1 => ($this->privates['property_info.php_doc_extractor'] ?? ($this->privates['property_info.php_doc_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor()));
            yield 2 => ($this->privates['property_info.reflection_extractor'] ?? ($this->privates['property_info.reflection_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor()));
        }, 3), new RewindableGenerator(function () {
            yield 0 => ($this->privates['property_info.php_doc_extractor'] ?? ($this->privates['property_info.php_doc_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor()));
        }, 1), new RewindableGenerator(function () {
            yield 0 => ($this->privates['doctrine.orm.default_entity_manager.property_info_extractor'] ?? $this->load('getDoctrine_Orm_DefaultEntityManager_PropertyInfoExtractorService'));
            yield 1 => ($this->privates['property_info.reflection_extractor'] ?? ($this->privates['property_info.reflection_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor()));
        }, 2), new RewindableGenerator(function () {
            yield 0 => ($this->privates['property_info.reflection_extractor'] ?? ($this->privates['property_info.reflection_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor()));
        }, 1)), ($this->privates['cache.property_info'] ?? $this->getCache_PropertyInfoService()));
    }

    /*
     * Gets the private 'router.expression_language_provider' shared service.
     *
     * @return \Symfony\Component\Routing\Matcher\ExpressionLanguageProvider
     */
    protected function getRouter_ExpressionLanguageProviderService()
    {
        return $this->privates['router.expression_language_provider'] = new \Symfony\Component\Routing\Matcher\ExpressionLanguageProvider(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'env' => ['privates', 'container.getenv', 'getContainer_GetenvService', true],
        ], [
            'env' => 'Closure',
        ]));
    }

    /*
     * Gets the private 'router.request_context' shared service.
     *
     * @return \Symfony\Component\Routing\RequestContext
     */
    protected function getRouter_RequestContextService()
    {
        $this->privates['router.request_context'] = $instance = \Symfony\Component\Routing\RequestContext::fromUri('', 'localhost', 'http', 80, 443);

        $instance->setParameter('_functions', ($this->privates['router.expression_language_provider'] ?? $this->getRouter_ExpressionLanguageProviderService()));

        return $instance;
    }

    /*
     * Gets the private 'router_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\RouterListener
     */
    protected function getRouterListenerService()
    {
        return $this->privates['router_listener'] = new \Symfony\Component\HttpKernel\EventListener\RouterListener(($this->services['router'] ?? $this->getRouterService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()), ($this->privates['monolog.logger.request'] ?? $this->getMonolog_Logger_RequestService()), \dirname(__DIR__, 3), false);
    }

    /*
     * Gets the private 'security.access.decision_manager' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\AccessDecisionManager
     */
    protected function getSecurity_Access_DecisionManagerService()
    {
        return $this->privates['security.access.decision_manager'] = new \Symfony\Component\Security\Core\Authorization\AccessDecisionManager(new RewindableGenerator(function () {
            yield 0 => ($this->privates['security.access.authenticated_voter'] ?? $this->load('getSecurity_Access_AuthenticatedVoterService'));
            yield 1 => ($this->privates['security.access.simple_role_voter'] ?? ($this->privates['security.access.simple_role_voter'] = new \Symfony\Component\Security\Core\Authorization\Voter\RoleVoter()));
            yield 2 => ($this->privates['security.access.expression_voter'] ?? $this->load('getSecurity_Access_ExpressionVoterService'));
        }, 3), 'affirmative', false, true);
    }

    /*
     * Gets the private 'security.csrf.token_storage' shared service.
     *
     * @return \Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage
     */
    protected function getSecurity_Csrf_TokenStorageService()
    {
        return $this->privates['security.csrf.token_storage'] = new \Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage(($this->services['session'] ?? $this->getSessionService()));
    }

    /*
     * Gets the private 'security.expression_language' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\ExpressionLanguage
     */
    protected function getSecurity_ExpressionLanguageService()
    {
        $this->privates['security.expression_language'] = $instance = new \Symfony\Component\Security\Core\Authorization\ExpressionLanguage(($this->privates['cache.security_expression_language'] ?? $this->getCache_SecurityExpressionLanguageService()));

        $instance->registerProvider(new \ApiPlatform\Symfony\Security\Core\Authorization\ExpressionLanguageProvider());

        return $instance;
    }

    /*
     * Gets the private 'security.firewall' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\EventListener\FirewallListener
     */
    protected function getSecurity_FirewallService()
    {
        return $this->privates['security.firewall'] = new \Symfony\Bundle\SecurityBundle\EventListener\FirewallListener(($this->privates['security.firewall.map'] ?? $this->getSecurity_Firewall_MapService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['security.logout_url_generator'] ?? $this->getSecurity_LogoutUrlGeneratorService()));
    }

    /*
     * Gets the private 'security.firewall.map' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallMap
     */
    protected function getSecurity_Firewall_MapService()
    {
        return $this->privates['security.firewall.map'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallMap(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'security.firewall.map.context.auth' => ['privates', 'security.firewall.map.context.auth', 'getSecurity_Firewall_Map_Context_AuthService', true],
            'security.firewall.map.context.dev' => ['privates', 'security.firewall.map.context.dev', 'getSecurity_Firewall_Map_Context_DevService', true],
            'security.firewall.map.context.logged_out' => ['privates', 'security.firewall.map.context.logged_out', 'getSecurity_Firewall_Map_Context_LoggedOutService', true],
            'security.firewall.map.context.main' => ['privates', 'security.firewall.map.context.main', 'getSecurity_Firewall_Map_Context_MainService', true],
        ], [
            'security.firewall.map.context.auth' => '?',
            'security.firewall.map.context.dev' => '?',
            'security.firewall.map.context.logged_out' => '?',
            'security.firewall.map.context.main' => '?',
        ]), new RewindableGenerator(function () {
            yield 'security.firewall.map.context.dev' => ($this->privates['.security.request_matcher.Iy.T22O'] ?? ($this->privates['.security.request_matcher.Iy.T22O'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/(_(profiler|wdt)|css|images|js)/')));
            yield 'security.firewall.map.context.main' => ($this->privates['.security.request_matcher.GzQi41q'] ?? ($this->privates['.security.request_matcher.GzQi41q'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/(?!auth|logged-out)')));
            yield 'security.firewall.map.context.auth' => ($this->privates['.security.request_matcher.bIU2OKZ'] ?? ($this->privates['.security.request_matcher.bIU2OKZ'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/auth')));
            yield 'security.firewall.map.context.logged_out' => ($this->privates['.security.request_matcher.L9qbXS6'] ?? ($this->privates['.security.request_matcher.L9qbXS6'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/logged-out')));
        }, 4));
    }

    /*
     * Gets the private 'security.logout_url_generator' shared service.
     *
     * @return \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator
     */
    protected function getSecurity_LogoutUrlGeneratorService()
    {
        $this->privates['security.logout_url_generator'] = $instance = new \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['router'] ?? $this->getRouterService()), ($this->services['security.token_storage'] ?? $this->getSecurity_TokenStorageService()));

        $instance->registerListener('main', 'saml_logout', 'logout', '_csrf_token', NULL, 'app_context');
        $instance->registerListener('auth', 'native_auth_logout', 'logout', '_csrf_token', NULL, 'app_context');
        $instance->registerListener('logged_out', 'native_auth_logout', 'logout', '_csrf_token', NULL, 'app_context');

        return $instance;
    }

    /*
     * Gets the private 'serializer.name_converter.metadata_aware' shared service.
     *
     * @return \Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter
     */
    protected function getSerializer_NameConverter_MetadataAwareService()
    {
        return $this->privates['serializer.name_converter.metadata_aware'] = new \Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter(($this->privates['api_platform.serializer.mapping.class_metadata_factory'] ?? $this->getApiPlatform_Serializer_Mapping_ClassMetadataFactoryService()));
    }

    /*
     * Gets the private 'session.storage.native' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage
     */
    protected function getSession_Storage_NativeService()
    {
        return $this->privates['session.storage.native'] = new \Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage($this->parameters['session.storage.options'], NULL, new \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag('_sf2_meta', 0));
    }

    /*
     * Gets the private 'session_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\SessionListener
     */
    protected function getSessionListenerService()
    {
        return $this->privates['session_listener'] = new \Symfony\Component\HttpKernel\EventListener\SessionListener(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'initialized_session' => ['services', 'session', NULL, false],
            'logger' => ['privates', 'monolog.logger', 'getMonolog_LoggerService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'session_storage' => ['privates', 'session.storage.native', 'getSession_Storage_NativeService', false],
        ], [
            'initialized_session' => '?',
            'logger' => '?',
            'request_stack' => '?',
            'session' => '?',
            'session_storage' => '?',
        ]), false);
    }

    /*
     * Gets the private 'validator.builder' shared service.
     *
     * @return \Symfony\Component\Validator\ValidatorBuilder
     */
    protected function getValidator_BuilderService()
    {
        $this->privates['validator.builder'] = $instance = \Symfony\Component\Validator\Validation::createValidatorBuilder();

        $a = ($this->privates['property_info.cache'] ?? $this->getPropertyInfo_CacheService());

        $instance->setConstraintValidatorFactory(new \Symfony\Component\Validator\ContainerConstraintValidatorFactory(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator' => ['privates', 'doctrine.orm.validator.unique', 'getDoctrine_Orm_Validator_UniqueService', true],
            'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator' => ['privates', 'security.validator.user_password', 'getSecurity_Validator_UserPasswordService', true],
            'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => ['privates', 'validator.email', 'getValidator_EmailService', true],
            'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => ['privates', 'validator.expression', 'getValidator_ExpressionService', true],
            'Symfony\\Component\\Validator\\Constraints\\NotCompromisedPasswordValidator' => ['privates', 'validator.not_compromised_password', 'getValidator_NotCompromisedPasswordService', true],
            'doctrine.orm.validator.unique' => ['privates', 'doctrine.orm.validator.unique', 'getDoctrine_Orm_Validator_UniqueService', true],
            'security.validator.user_password' => ['privates', 'security.validator.user_password', 'getSecurity_Validator_UserPasswordService', true],
            'validator.expression' => ['privates', 'validator.expression', 'getValidator_ExpressionService', true],
        ], [
            'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator' => '?',
            'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator' => '?',
            'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => '?',
            'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => '?',
            'Symfony\\Component\\Validator\\Constraints\\NotCompromisedPasswordValidator' => '?',
            'doctrine.orm.validator.unique' => '?',
            'security.validator.user_password' => '?',
            'validator.expression' => '?',
        ])));
        if ($this->has('translator')) {
            $instance->setTranslator(($this->services['translator'] ?? $this->getTranslatorService()));
        }
        $instance->setTranslationDomain('validators');
        $instance->enableAnnotationMapping(true);
        $instance->setDoctrineAnnotationReader(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));
        $instance->addMethodMapping('loadValidatorMetadata');
        $instance->setMappingCache(\Symfony\Component\Cache\Adapter\PhpArrayAdapter::create(($this->targetDir.''.'/validation.php'), ($this->privates['cache.validator'] ?? $this->getCache_ValidatorService())));
        $instance->addObjectInitializers([0 => new \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer(($this->services['doctrine'] ?? $this->getDoctrineService()))]);
        $instance->addLoader(new \Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader($a, $a, $a, NULL));
        $instance->addLoader(new \Symfony\Bridge\Doctrine\Validator\DoctrineLoader(($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()), NULL));

        return $instance;
    }

    /*
     * Gets the public 'cache_clearer' alias.
     *
     * @return object The ".container.private.cache_clearer" service.
     */
    protected function getCacheClearerService()
    {
        trigger_deprecation('symfony/framework-bundle', '5.2', 'Accessing the "cache_clearer" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.cache_clearer');
    }

    /*
     * Gets the public 'filesystem' alias.
     *
     * @return object The ".container.private.filesystem" service.
     */
    protected function getFilesystemService()
    {
        trigger_deprecation('symfony/framework-bundle', '5.2', 'Accessing the "filesystem" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.filesystem');
    }

    /*
     * Gets the public 'security.csrf.token_manager' alias.
     *
     * @return object The ".container.private.security.csrf.token_manager" service.
     */
    protected function getSecurity_Csrf_TokenManagerService()
    {
        trigger_deprecation('symfony/framework-bundle', '5.2', 'Accessing the "security.csrf.token_manager" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.security.csrf.token_manager');
    }

    /*
     * Gets the public 'validator' alias.
     *
     * @return object The ".container.private.validator" service.
     */
    protected function getValidatorService()
    {
        trigger_deprecation('symfony/framework-bundle', '5.2', 'Accessing the "validator" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.validator');
    }

    /*
     * Gets the public 'serializer' alias.
     *
     * @return object The ".container.private.serializer" service.
     */
    protected function getSerializerService()
    {
        trigger_deprecation('symfony/framework-bundle', '5.2', 'Accessing the "serializer" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.serializer');
    }

    /*
     * Gets the public 'twig' alias.
     *
     * @return object The ".container.private.twig" service.
     */
    protected function getTwigService()
    {
        trigger_deprecation('symfony/twig-bundle', '5.2', 'Accessing the "twig" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.twig');
    }

    /**
     * @return array|bool|float|int|string|null
     */
    public function getParameter(string $name)
    {
        if (isset($this->buildParameters[$name])) {
            return $this->buildParameters[$name];
        }

        if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \array_key_exists($name, $this->parameters))) {
            throw new InvalidArgumentException(sprintf('The parameter "%s" must be defined.', $name));
        }
        if (isset($this->loadedDynamicParameters[$name])) {
            return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
        }

        return $this->parameters[$name];
    }

    public function hasParameter(string $name): bool
    {
        if (isset($this->buildParameters[$name])) {
            return true;
        }

        return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \array_key_exists($name, $this->parameters);
    }

    public function setParameter(string $name, $value): void
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }

    public function getParameterBag(): ParameterBagInterface
    {
        if (null === $this->parameterBag) {
            $parameters = $this->parameters;
            foreach ($this->loadedDynamicParameters as $name => $loaded) {
                $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
            }
            foreach ($this->buildParameters as $name => $value) {
                $parameters[$name] = $value;
            }
            $this->parameterBag = new FrozenParameterBag($parameters);
        }

        return $this->parameterBag;
    }

    private $loadedDynamicParameters = [
        'kernel.runtime_environment' => false,
        'kernel.build_dir' => false,
        'kernel.cache_dir' => false,
        'graphql.graphql_show_docs' => false,
        'secret' => false,
        'auth_type' => false,
        'kernel.secret' => false,
        'session.save_path' => false,
        'validator.mapping.cache.file' => false,
        'serializer.mapping.cache.file' => false,
        'doctrine.orm.proxy_dir' => false,
        'nelmio_cors.defaults' => false,
        'hslavich_onelogin_saml.settings' => false,
    ];
    private $dynamicParameters = [];

    private function getDynamicParameter(string $name)
    {
        switch ($name) {
            case 'kernel.runtime_environment': $value = $this->getEnv('default:kernel.environment:APP_RUNTIME_ENV'); break;
            case 'kernel.build_dir': $value = $this->targetDir.''; break;
            case 'kernel.cache_dir': $value = $this->targetDir.''; break;
            case 'graphql.graphql_show_docs': $value = $this->getEnv('default::bool:GRAPHQL_SHOW_DOCS'); break;
            case 'secret': $value = $this->getEnv('APP_SECRET'); break;
            case 'auth_type': $value = $this->getEnv('AUTH_TYPE'); break;
            case 'kernel.secret': $value = $this->getEnv('APP_SECRET'); break;
            case 'session.save_path': $value = ($this->targetDir.''.'/sessions'); break;
            case 'validator.mapping.cache.file': $value = ($this->targetDir.''.'/validation.php'); break;
            case 'serializer.mapping.cache.file': $value = ($this->targetDir.''.'/serialization.php'); break;
            case 'doctrine.orm.proxy_dir': $value = ($this->targetDir.''.'/doctrine/orm/Proxies'); break;
            case 'nelmio_cors.defaults': $value = [
                'allow_origin' => [
                    0 => $this->getEnv('CORS_ALLOW_ORIGIN'),
                ],
                'allow_credentials' => false,
                'allow_headers' => [
                    0 => 'content-type',
                    1 => 'authorization',
                ],
                'expose_headers' => [
                    0 => 'Link',
                ],
                'allow_methods' => [
                    0 => 'GET',
                    1 => 'OPTIONS',
                    2 => 'POST',
                    3 => 'PUT',
                    4 => 'PATCH',
                    5 => 'DELETE',
                ],
                'max_age' => 3600,
                'hosts' => [

                ],
                'origin_regex' => true,
                'forced_allow_origin_value' => NULL,
            ]; break;
            case 'hslavich_onelogin_saml.settings': $value = [
                'idp' => [
                    'entityId' => $this->getEnv('SAML_IDP_ENTITY_ID'),
                    'singleSignOnService' => [
                        'url' => $this->getEnv('SAML_ISP_SSO_URL'),
                        'binding' => 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST',
                    ],
                    'singleLogoutService' => [
                        'url' => $this->getEnv('SAML_IDP_LOGOUT_URL'),
                        'binding' => 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect',
                    ],
                    'x509cert' => $this->getEnv('SAML_IDP_X509'),
                ],
                'sp' => [
                    'entityId' => $this->getEnv('SAML_SP_ENTITY_ID'),
                    'assertionConsumerService' => [
                        'url' => $this->getEnv('SAML_SP_ASSERTION_URL'),
                        'binding' => 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST',
                    ],
                    'singleLogoutService' => [
                        'url' => $this->getEnv('SAML_SP_SINGLE_LOGOUT'),
                        'binding' => 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect',
                    ],
                    'privateKey' => $this->getEnv('SAML_SP_PRIVATE_KEY'),
                    'x509cert' => $this->getEnv('SAML_SP_X509'),
                ],
                'baseurl' => $this->getEnv('SAML_SP_BASE_URL'),
                'strict' => true,
                'debug' => true,
                'security' => [
                    'nameIdEncrypted' => false,
                    'authnRequestsSigned' => false,
                    'logoutRequestSigned' => false,
                    'logoutResponseSigned' => false,
                    'wantMessagesSigned' => false,
                    'wantAssertionsSigned' => false,
                    'wantNameIdEncrypted' => false,
                    'requestedAuthnContext' => true,
                    'signMetadata' => false,
                    'wantXMLValidation' => true,
                    'signatureAlgorithm' => 'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256',
                    'digestAlgorithm' => 'http://www.w3.org/2001/04/xmlenc#sha256',
                    'destinationStrictlyMatches' => true,
                ],
                'contactPerson' => [
                    'technical' => [
                        'givenName' => 'Tech User',
                        'emailAddress' => 'techuser@example.com',
                    ],
                    'support' => [
                        'givenName' => 'Support User',
                        'emailAddress' => 'supportuser@example.com',
                    ],
                ],
                'organization' => [
                    'en' => [
                        'name' => 'Example',
                        'displayname' => 'Example',
                        'url' => 'http://example.com',
                    ],
                ],
            ]; break;
            default: throw new InvalidArgumentException(sprintf('The dynamic parameter "%s" must be defined.', $name));
        }
        $this->loadedDynamicParameters[$name] = true;

        return $this->dynamicParameters[$name] = $value;
    }

    protected function getDefaultParameters(): array
    {
        return [
            'kernel.project_dir' => \dirname(__DIR__, 3),
            'kernel.environment' => 'prod',
            'kernel.debug' => false,
            'kernel.logs_dir' => (\dirname(__DIR__, 3).'/logs/prod'),
            'kernel.bundles' => [
                'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle',
                'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle',
                'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle',
                'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle',
                'ApiPlatformBundle' => 'ApiPlatform\\Symfony\\Bundle\\ApiPlatformBundle',
                'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle',
                'NelmioCorsBundle' => 'Nelmio\\CorsBundle\\NelmioCorsBundle',
                'DoctrineMigrationsBundle' => 'Doctrine\\Bundle\\MigrationsBundle\\DoctrineMigrationsBundle',
                'ShivasVersioningBundle' => 'Shivas\\VersioningBundle\\ShivasVersioningBundle',
                'HslavichOneloginSamlBundle' => 'Hslavich\\OneloginSamlBundle\\HslavichOneloginSamlBundle',
            ],
            'kernel.bundles_metadata' => [
                'FrameworkBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/symfony/framework-bundle'),
                    'namespace' => 'Symfony\\Bundle\\FrameworkBundle',
                ],
                'TwigBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/symfony/twig-bundle'),
                    'namespace' => 'Symfony\\Bundle\\TwigBundle',
                ],
                'SecurityBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/symfony/security-bundle'),
                    'namespace' => 'Symfony\\Bundle\\SecurityBundle',
                ],
                'DoctrineBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle'),
                    'namespace' => 'Doctrine\\Bundle\\DoctrineBundle',
                ],
                'ApiPlatformBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/api-platform/core/src/Symfony/Bundle'),
                    'namespace' => 'ApiPlatform\\Symfony\\Bundle',
                ],
                'MonologBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/symfony/monolog-bundle'),
                    'namespace' => 'Symfony\\Bundle\\MonologBundle',
                ],
                'NelmioCorsBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/nelmio/cors-bundle'),
                    'namespace' => 'Nelmio\\CorsBundle',
                ],
                'DoctrineMigrationsBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/doctrine/doctrine-migrations-bundle'),
                    'namespace' => 'Doctrine\\Bundle\\MigrationsBundle',
                ],
                'ShivasVersioningBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/shivas/versioning-bundle/src'),
                    'namespace' => 'Shivas\\VersioningBundle',
                ],
                'HslavichOneloginSamlBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/hslavich/oneloginsaml-bundle'),
                    'namespace' => 'Hslavich\\OneloginSamlBundle',
                ],
            ],
            'kernel.charset' => 'UTF-8',
            'kernel.container_class' => 'App_KernelProdContainer',
            'container.dumper.inline_class_loader' => true,
            'env(DATABASE_URL)' => '',
            'auth.logout.redirect' => true,
            'auth.logout.path' => 'saml/logout',
            'auth.session-expired.redirect' => true,
            'auth.session-expired.path' => 'logged-out',
            'auth.logout' => [
                'path' => 'saml/logout',
                'redirect' => true,
            ],
            'auth.session-expired' => [
                'path' => 'logged-out',
                'redirect' => true,
            ],
            'extensions' => [
                'defaultExt' => [
                    'remoteEntry' => '../extensions/defaultExt/remoteEntry.js',
                    'remoteName' => 'defaultExt',
                    'enabled' => false,
                    'extension_name' => 'Default Extension',
                    'extension_uri' => 'https://suitecrm.com',
                    'description' => 'An example Extension template or for simple instance customisations',
                    'version' => '1.0.0',
                    'author' => 'SalesAgility',
                    'author_uri' => 'https://www.salesagility.com',
                    'license' => 'GPL3',
                ],
            ],
            'ldap.autocreate.extra_fields_map' => NULL,
            'ldap.extra_fields' => [

            ],
            'legacy.api_paths' => [
                'Api/access_token' => 'Api/index.php/access_token',
                'Api/V8' => 'Api/index.php/V8',
                'Api' => 'Api/index.php',
                'service/v4_1' => 'service/v4_1',
            ],
            'legacy.api_path_files' => [
                'Api/access_token' => [
                    'file' => 'index.php',
                    'dir' => 'Api',
                ],
                'Api/V8' => [
                    'file' => 'index.php',
                    'dir' => 'Api',
                ],
                'Api' => [
                    'file' => 'index.php',
                    'dir' => 'Api',
                ],
                'service/v4_1/rest.php' => [
                    'file' => 'rest.php',
                    'dir' => 'service/v4_1',
                ],
                'service/v4_1/soap.php' => [
                    'file' => 'soap.php',
                    'dir' => 'service/v4_1',
                ],
                'service/v4_1' => [
                    'file' => 'rest.php',
                    'dir' => 'service/v4_1',
                ],
                'service/v4/rest.php' => [
                    'file' => 'rest.php',
                    'dir' => 'service/v4',
                ],
                'service/v4/soap.php' => [
                    'file' => 'soap.php',
                    'dir' => 'service/v4',
                ],
                'service/v4' => [
                    'file' => 'rest.php',
                    'dir' => 'service/v4',
                ],
            ],
            'legacy.asset_paths' => [
                0 => 'cache',
                1 => 'include',
                2 => 'themes',
                3 => 'custom',
                4 => 'vendor',
                5 => 'modules',
                6 => 'public',
                7 => 'upload',
            ],
            'legacy.copy_asset_paths' => [
                'vendor/tinymce/tinymce' => 'vendor/tinymce/tinymce',
                'vendor/gymadarasz' => 'vendor/gymadarasz',
            ],
            'legacy.cache_reset_actions' => [
                'users' => [
                    0 => 'edit',
                ],
                'administration' => [
                    0 => 'repair',
                    1 => 'UpgradeWizard',
                    2 => 'ConfigureTabs',
                    3 => 'Locale',
                    4 => 'PasswordManager',
                    5 => 'ThemeSettings',
                    6 => 'Languages',
                ],
                'module-builder' => [
                    0 => 'index',
                ],
                'configurator' => [
                    0 => 'edit',
                ],
                'currencies' => [
                    0 => 'index',
                ],
                'security-groups' => [
                    0 => 'index',
                    1 => 'config',
                ],
                'studio' => [
                    0 => 'wizard',
                ],
            ],
            'legacy.datetime_format_map' => [
                'A' => 'a',
                'a' => 'aaaaaa',
                'D' => 'E',
                'd' => 'dd',
                'F' => 'MMMM',
                'G' => 'H',
                'g' => 'h',
                'H' => 'HH',
                'h' => 'hh',
                'i' => 'mm',
                'M' => 'MMM',
                'm' => 'MM',
                'n' => 'M',
                'P' => 'ZZZZZ',
                's' => 'ss',
                'w' => 'e',
                'Y' => 'yyyy',
                'y' => 'yy',
            ],
            'legacy.entrypoint_files' => [
                'campaign_tracker.php' => [
                    'file' => 'campaign_tracker.php',
                    'dir' => '',
                ],
                'ical_server.php' => [
                    'file' => 'ical_server.php',
                    'dir' => '',
                ],
                'soap.php' => [
                    'file' => 'soap.php',
                    'dir' => '',
                ],
                'vcal_server.php' => [
                    'file' => 'vcal_server.php',
                    'dir' => '',
                ],
            ],
            'legacy.exposed_system_configs' => [
                'default_language' => true,
                'passwordsetting' => [
                    'forgotpasswordON' => true,
                ],
                'languages' => true,
                'disabled_languages' => true,
                'default_module' => true,
                'default_theme' => true,
                'module_name_map' => true,
                'action_name_map' => true,
                'system_name' => true,
                'subpanel_pagination_type' => true,
                'listview_pagination_type' => true,
                'classicview_routing_exclusions' => true,
                'default_decimal_seperator' => true,
                'default_number_grouping_seperator' => true,
                'default_currency_significant_digits' => true,
                'datef' => true,
                'timef' => true,
                'snooze_alert_timer' => true,
                'currency' => true,
                'currencies' => true,
                'list_max_entries_per_page' => true,
                'list_max_entries_per_subpanel' => true,
                'list_max_entries_per_modal' => true,
                'list_max_entries_per_record_thread' => true,
                'record_modal_pagination_type' => true,
                'cache_reset_actions' => true,
                'navigation_tab_limits' => true,
                'listview_column_limits' => true,
                'listview_settings_limits' => true,
                'listview_actions_limits' => true,
                'listview_line_actions_limits' => true,
                'listview_url_query_filter_mapping' => true,
                'module_routing' => true,
                'recordview_actions_limits' => true,
                'subpanelview_actions_limits' => true,
                'ui' => true,
                'extensions' => true,
                'logout' => true,
                'session-expired' => true,
                'site_url' => true,
            ],
            'legacy.exposed_user_preferences' => [
                'global' => [
                    'sort_modules_by_name' => true,
                    'navigation_paradigm' => true,
                    'swap_shortcuts' => true,
                    'subpanel_tabs' => true,
                    'subpanel_pagination_type' => true,
                    'listview_pagination_type' => true,
                    'count_collapsed_subpanels' => true,
                    'user_theme' => true,
                    'module_favicon' => true,
                    'no_opps' => true,
                    'reminder_time' => true,
                    'email_reminder_time' => true,
                    'reminder_checked' => true,
                    'email_reminder_checked' => true,
                    'timezone' => true,
                    'ut' => true,
                    'currency' => true,
                    'default_currency_significant_digits' => true,
                    'num_grp_sep' => true,
                    'dec_sep' => true,
                    'fdow' => true,
                    'datef' => true,
                    'timef' => true,
                    'mail_fromname' => true,
                    'mail_fromaddress' => true,
                    'mail_sendtype' => true,
                    'mail_smtpserver' => true,
                    'mail_smtpport' => true,
                    'mail_smtpuser' => true,
                    'mail_smtppass' => true,
                    'default_locale_name_format' => true,
                    'export_delimiter' => true,
                    'default_export_charset' => true,
                    'use_real_names' => true,
                    'mail_smtpauth_req' => true,
                    'mail_smtpssl' => true,
                    'signature_default' => true,
                    'signature_prepend' => true,
                    'email_link_type' => true,
                    'editor_type' => true,
                    'email_show_counts' => true,
                    'email_editor_option' => true,
                    'default_email_charset' => true,
                    'calendar_publish_key' => true,
                    'record_modal_pagination_type' => true,
                    'subtheme' => true,
                    'syncGCal' => true,
                    'listview_max_height' => true,
                    'list_max_entries_per_page' => true,
                    'subpanel_max_height' => true,
                    'list_max_entries_per_subpanel' => true,
                    'record_modal_max_height' => true,
                    'ui' => true,
                    'snooze_alert_timer' => true,
                ],
            ],
            'legacy.frontend_excluded_modules' => [
                0 => 'EmailText',
                1 => 'TeamMemberships',
                2 => 'TeamSets',
                3 => 'TeamSetModule',
            ],
            'massupdate' => [
                'excludedFields' => [
                    0 => 'date_modified',
                    1 => 'date_entered',
                    2 => 'created_by',
                    3 => 'modified_user_id',
                    4 => 'deleted',
                    5 => 'modified_by_name',
                    6 => 'assigned_user_id',
                ],
                'activeByDefaultRelateModules' => [
                    0 => 'Accounts',
                    1 => 'Contacts',
                    2 => 'Users',
                    3 => 'Employee',
                    4 => 'Releases',
                ],
                'activeByDefaultFields' => [
                    0 => 'reports_to_name',
                ],
                'activeByDefaultTypes' => [
                    0 => 'parent',
                    1 => 'bool',
                    2 => 'enum',
                    3 => 'dynamicenum',
                    4 => 'multienum',
                    5 => 'radioenum',
                    6 => 'datetimecombo',
                    7 => 'datetime',
                    8 => 'date',
                ],
                'includedTypes' => [
                    0 => 'relate',
                    1 => 'parent',
                    2 => 'int',
                    3 => 'bool',
                    4 => 'enum',
                    5 => 'dynamicenum',
                    6 => 'multienum',
                    7 => 'radioenum',
                    8 => 'datetimecombo',
                    9 => 'datetime',
                    10 => 'date',
                ],
            ],
            'legacy.menu_item_map' => [
                'default' => [
                    'List' => [
                        'icon' => 'view',
                    ],
                    'View' => [
                        'icon' => 'view',
                    ],
                    'Add' => [
                        'icon' => 'plus',
                        'actionLabelKey' => 'LBL_NEW',
                    ],
                    'Create' => [
                        'icon' => 'plus',
                        'actionLabelKey' => 'LBL_NEW',
                    ],
                    'Import' => [
                        'icon' => 'download',
                        'actionLabelKey' => 'LBL_IMPORT',
                    ],
                    'Security_Groups' => [
                        'icon' => 'view',
                    ],
                    'Schedule_Call' => [
                        'icon' => 'plus',
                    ],
                    'Schedule_Meetings' => [
                        'icon' => 'plus',
                    ],
                    'Schedule_Meeting' => [
                        'icon' => 'plus',
                    ],
                ],
                'contacts' => [
                    'Create_Contact_Vcard' => [
                        'icon' => 'plus',
                    ],
                ],
                'calls' => [
                    'Calls' => [
                        'icon' => 'plus',
                    ],
                ],
                'calendar' => [
                    'Calendar' => [
                        'icon' => 'plus',
                    ],
                    'Today' => [
                        'icon' => 'calendar',
                    ],
                ],
                'workflow' => [
                    'View_Process_Audit' => [
                        'icon' => 'view',
                    ],
                ],
                'workflow-processed' => [
                    'View_Process_Audit' => [
                        'icon' => 'view',
                    ],
                ],
                'mail-merge' => [
                    'Documents' => [
                        'icon' => 'view',
                    ],
                ],
                'email-templates' => [
                    'View_Email_Templates' => [
                        'icon' => 'view',
                    ],
                    'View_Create_Email_Templates' => [
                        'icon' => 'plus',
                    ],
                ],
                'campaigns' => [
                    'View_Create_Email_Templates' => [
                        'icon' => 'plus',
                    ],
                    'View_Email_Templates' => [
                        'icon' => 'view',
                    ],
                    'Setup_Email' => [
                        'icon' => 'email',
                    ],
                    'View_Diagnostics' => [
                        'icon' => 'view',
                    ],
                    'Create_Person_Form' => [
                        'icon' => 'person',
                    ],
                ],
                'leads' => [
                    'Create_Lead_Vcard' => [
                        'icon' => 'plus',
                    ],
                ],
                'inbound-email' => [
                    'Setup_Email' => [
                        'icon' => 'email',
                    ],
                    'CreatePersonal' => [
                        'icon' => 'plus',
                    ],
                    'CreateGroup' => [
                        'icon' => 'plus',
                    ],
                    'CreateBounce' => [
                        'icon' => 'plus',
                    ],
                ],
                'external-oauth-provider' => [
                    'CreatePersonal' => [
                        'icon' => 'plus',
                    ],
                    'CreateGroup' => [
                        'icon' => 'plus',
                    ],
                ],
                'external-oauth-connection' => [
                    'CreatePersonal' => [
                        'icon' => 'plus',
                    ],
                    'CreateGroup' => [
                        'icon' => 'plus',
                    ],
                ],
                'outbound-email-accounts' => [
                    'CreatePersonal' => [
                        'icon' => 'plus',
                    ],
                    'CreateGroup' => [
                        'icon' => 'plus',
                    ],
                ],
                'schedulers' => [
                    'Schedulers' => [
                        'icon' => 'view',
                    ],
                ],
                'address-cache' => [
                    'Createjjwg_Address_Cache' => [
                        'icon' => 'plus',
                    ],
                    'jjwg_Address_Cache' => [
                        'icon' => 'view',
                    ],
                ],
                'maps' => [
                    'List_Maps' => [
                        'icon' => 'view',
                    ],
                    'Quick_Radius_Map' => [
                        'icon' => 'view',
                    ],
                ],
                'security-groups' => [
                    'Create_Security_Group' => [
                        'icon' => 'plus',
                    ],
                    'Security_Groups' => [
                        'icon' => 'view',
                    ],
                    'Security_Suite_Settings' => [
                        'icon' => 'padlock',
                    ],
                    'Role_Management' => [
                        'icon' => 'view',
                    ],
                ],
                'acl-roles' => [
                    'Role_Management' => [
                        'icon' => 'view',
                    ],
                    'Security_Groups' => [
                        'icon' => 'view',
                        'actionLabelKey' => 'LBL_SECURITYGROUPS',
                    ],
                    'List_By_User' => [
                        'icon' => 'view',
                        'actionLabelKey' => 'LIST_ROLES_BY_USER',
                    ],
                ],
                'connectors' => [
                    'icon_Connectors' => [
                        'icon' => 'view',
                    ],
                    'icon_ConnectorConfig_16' => [
                        'icon' => 'view',
                    ],
                    'icon_ConnectorEnable_16' => [
                        'icon' => 'view',
                    ],
                    'icon_ConnectorMap_16' => [
                        'icon' => 'view',
                    ],
                ],
                'configurator' => [
                    'Administration' => [
                        'icon' => 'view',
                    ],
                    'Leads' => [
                        'icon' => 'view',
                    ],
                ],
                'help' => [
                    'Administration' => [
                        'icon' => 'view',
                    ],
                    'Accounts' => [
                        'icon' => 'view',
                    ],
                    'Opportunities' => [
                        'icon' => 'view',
                    ],
                    'Cases' => [
                        'icon' => 'view',
                    ],
                    'Notes' => [
                        'icon' => 'view',
                    ],
                    'Calls' => [
                        'icon' => 'view',
                    ],
                    'Emails' => [
                        'icon' => 'view',
                    ],
                    'Meetings' => [
                        'icon' => 'view',
                    ],
                    'Tasks' => [
                        'icon' => 'view',
                    ],
                ],
                'project' => [
                    'Resource_Chart' => [
                        'icon' => 'piechart',
                    ],
                    'View_Project_Tasks' => [
                        'icon' => 'view',
                    ],
                ],
                'project-task' => [
                    'View_Project_Tasks' => [
                        'icon' => 'view',
                    ],
                ],
                'roles' => [
                    'Role_Management' => [
                        'icon' => 'view',
                    ],
                ],
                'users' => [
                    'Create_Group_User' => [
                        'icon' => 'plus',
                    ],
                    'Create_Security_Group' => [
                        'icon' => 'plus',
                    ],
                    'Security_Groups' => [
                        'icon' => 'view',
                        'actionLabelKey' => 'LBL_SECURITYGROUPS',
                    ],
                    'Role_Management' => [
                        'icon' => 'view',
                    ],
                    'Security_Suite_Settings' => [
                        'icon' => 'view',
                    ],
                ],
            ],
            'legacy.system_config_key_map' => [
                'datef' => 'date_format',
                'timef' => 'time_format',
            ],
            'legacy.user_preferences_key_map' => [
                'datef' => 'date_format',
                'timef' => 'time_format',
            ],
            'module.base_actions' => [
                'default' => [
                    'actions' => [
                        'index' => [
                            'key' => 'index',
                            'labelKey' => 'LBL_LISTVIEW',
                            'acl' => [
                                0 => 'list',
                            ],
                        ],
                        'list' => [
                            'key' => 'index',
                            'labelKey' => 'LBL_LISTVIEW',
                            'acl' => [
                                0 => 'list',
                            ],
                        ],
                        'view' => [
                            'key' => 'view',
                            'labelKey' => 'LBL_DETAILVIEW',
                            'acl' => [
                                0 => 'view',
                            ],
                        ],
                        'record' => [
                            'key' => 'view',
                            'labelKey' => 'LBL_DETAILVIEW',
                            'acl' => [
                                0 => 'view',
                            ],
                        ],
                        'create' => [
                            'key' => 'create',
                            'labelKey' => 'LBL_NEW',
                            'acl' => [
                                0 => 'edit',
                            ],
                        ],
                        'edit' => [
                            'key' => 'edit',
                            'labelKey' => 'LBL_EDIT',
                            'acl' => [
                                0 => 'edit',
                            ],
                        ],
                        'save' => [
                            'key' => 'save',
                            'labelKey' => 'LBL_SAVE_BUTTON_LABEL',
                            'acl' => [
                                0 => 'edit',
                            ],
                        ],
                        'saveNew' => [
                            'key' => 'saveNew',
                            'labelKey' => 'LBL_SAVE_BUTTON_LABEL',
                            'acl' => [
                                0 => 'edit',
                            ],
                        ],
                        'delete' => [
                            'key' => 'delete',
                            'labelKey' => 'LBL_DELETE',
                            'asyncProcess' => true,
                            'acl' => [
                                0 => 'delete',
                            ],
                        ],
                        'duplicate' => [
                            'key' => 'duplicate',
                            'labelKey' => 'LBL_DUPLICATE_BUTTON',
                            'asyncProcess' => true,
                            'acl' => [
                                0 => 'export',
                                1 => 'edit',
                            ],
                        ],
                        'audit' => [
                            'key' => 'audit',
                            'labelKey' => 'LNK_VIEW_CHANGE_LOG',
                            'asyncProcess' => true,
                            'availability' => [
                                0 => 'audited',
                                1 => 'acls',
                            ],
                        ],
                        'merge-records' => [
                            'key' => 'merge-records',
                            'labelKey' => 'LBL_DUP_MERGE',
                            'asyncProcess' => true,
                            'availability' => [
                                0 => 'duplicate-merge',
                                1 => 'acls',
                            ],
                            'acl' => [
                                0 => 'edit',
                                1 => 'delete',
                            ],
                        ],
                        'export' => [
                            'key' => 'export',
                            'labelKey' => 'LBL_EXPORT',
                            'acl' => [
                                0 => 'export',
                            ],
                        ],
                        'massupdate' => [
                            'key' => 'massupdate',
                            'labelKey' => 'LBL_MASS_UPDATE',
                            'availability' => [
                                0 => 'acls',
                                1 => 'massupdate',
                            ],
                            'acl' => [
                                0 => 'massupdate',
                            ],
                        ],
                    ],
                ],
            ],
            'legacy.action_resolver' => [
                'merge-records' => [
                    'index' => 'action_module',
                    'Step1' => 'action_module',
                ],
                'import' => [
                    'index' => 'import_module',
                    'step1' => 'import_module',
                    'Last' => 'import_module',
                ],
            ],
            'module.listview.actions_limits' => [
                'XSmall' => 3,
                'Small' => 3,
                'Medium' => 3,
                'Large' => 3,
                'XLarge' => 4,
            ],
            'module.listview.bulk_action' => [
                'default' => [
                    'actions' => [
                        'delete' => [
                            'key' => 'delete',
                            'labelKey' => 'LBL_DELETE',
                            'params' => [
                                'min' => 1,
                                'displayConfirmation' => true,
                                'confirmationLabel' => 'NTC_DELETE_CONFIRMATION_MULTIPLE',
                            ],
                            'acl' => [
                                0 => 'delete',
                            ],
                        ],
                        'export' => [
                            'key' => 'export',
                            'labelKey' => 'LBL_EXPORT',
                            'params' => [
                                'min' => 1,
                            ],
                            'acl' => [
                                0 => 'export',
                            ],
                        ],
                        'merge' => [
                            'key' => 'merge',
                            'labelKey' => 'LBL_MERGE_DUPLICATES',
                            'params' => [
                                'min' => 2,
                                'max' => 5,
                            ],
                            'acl' => [
                                0 => 'edit',
                                1 => 'delete',
                            ],
                        ],
                        'massupdate' => [
                            'key' => 'massupdate',
                            'labelKey' => 'LBL_MASS_UPDATE',
                            'params' => [
                                'allowAll' => false,
                                'min' => 2,
                                'max' => 200,
                                'recordPanel' => [
                                    'title' => 'LBL_MASS_UPDATE',
                                    'mode' => 'massupdate',
                                    'actions' => [
                                        0 => [
                                            'key' => 'cancel',
                                            'labelKey' => 'LBL_CANCEL',
                                            'modes' => [
                                                0 => 'massupdate',
                                            ],
                                        ],
                                        1 => [
                                            'key' => 'bulk-action',
                                            'labelKey' => 'LBL_SUBMIT_BUTTON_LABEL',
                                            'modes' => [
                                                0 => 'massupdate',
                                            ],
                                            'klass' => [
                                                0 => 'btn',
                                                1 => 'btn-danger',
                                                2 => 'btn-sm',
                                            ],
                                            'params' => [
                                                'allowAll' => false,
                                                'min' => 2,
                                                'max' => 200,
                                                'bulkAction' => 'massupdate',
                                                'displayConfirmation' => true,
                                                'confirmationLabel' => 'LBL_BULK_ACTION_MASS_UPDATE_CONFIRMATION',
                                            ],
                                        ],
                                    ],
                                ],
                            ],
                            'acl' => [
                                0 => 'massupdate',
                            ],
                            'availability' => [
                                0 => 'acls',
                                1 => 'massupdate',
                            ],
                        ],
                    ],
                ],
                'modules' => [
                    'employees' => [
                        'exclude' => [
                            0 => 'delete',
                            1 => 'merge',
                        ],
                    ],
                    'inbound-emails' => [
                        'exclude' => [
                            0 => 'merge',
                            1 => 'massupdate',
                            2 => 'export',
                        ],
                    ],
                    'outbound-email-accounts' => [
                        'exclude' => [
                            0 => 'merge',
                            1 => 'massupdate',
                            2 => 'export',
                        ],
                    ],
                    'external-oauth-connection' => [
                        'exclude' => [
                            0 => 'merge',
                            1 => 'massupdate',
                            2 => 'export',
                        ],
                    ],
                    'external-oauth-provider' => [
                        'exclude' => [
                            0 => 'merge',
                            1 => 'massupdate',
                            2 => 'export',
                        ],
                    ],
                ],
            ],
            'module.listview.column_limits' => [
                'without_sidebar' => [
                    'XSmall' => 2,
                    'Small' => 3,
                    'Medium' => 5,
                    'Large' => 7,
                    'XLarge' => 8,
                ],
                'with_sidebar' => [
                    'XSmall' => 2,
                    'Small' => 3,
                    'Medium' => 4,
                    'Large' => 6,
                    'XLarge' => 7,
                ],
            ],
            'module.listview.line_action' => [
                'default' => [
                    'actions' => [
                        'create' => [
                            'key' => 'create',
                            'related_modules' => [
                                'calls' => [
                                    'name' => 'create-calls',
                                    'module' => 'calls',
                                    'icon' => 'phone',
                                    'labelKey' => 'LBL_SCHEDULE_CALL',
                                    'params' => [
                                        'create' => [
                                            'module' => 'calls',
                                            'returnAction' => 'DetailView',
                                        ],
                                    ],
                                ],
                                'meetings' => [
                                    'name' => 'create-meetings',
                                    'module' => 'meetings',
                                    'icon' => 'calendar',
                                    'labelKey' => 'LBL_SCHEDULE_MEETING',
                                    'params' => [
                                        'create' => [
                                            'module' => 'meetings',
                                            'returnAction' => 'DetailView',
                                        ],
                                    ],
                                ],
                                'tasks' => [
                                    'name' => 'create-tasks',
                                    'module' => 'tasks',
                                    'icon' => 'list',
                                    'labelKey' => 'LBL_CREATE_TASK',
                                    'params' => [
                                        'create' => [
                                            'module' => 'tasks',
                                            'returnAction' => 'DetailView',
                                        ],
                                    ],
                                ],
                                'emails' => [
                                    'name' => 'create-emails',
                                    'module' => 'emails',
                                    'icon' => 'email',
                                    'action' => 'compose',
                                    'labelKey' => 'LBL_COMPOSE_EMAIL_BUTTON_LABEL',
                                    'params' => [
                                        'create' => [
                                            'module' => 'emails',
                                            'returnAction' => 'index',
                                        ],
                                    ],
                                ],
                            ],
                            'acl' => [
                                0 => 'edit',
                            ],
                        ],
                    ],
                ],
            ],
            'module.listview.line_actions_limits' => [
                'without_sidebar' => [
                    'XSmall' => 5,
                    'Small' => 5,
                    'Medium' => 5,
                    'Large' => 7,
                    'XLarge' => 8,
                ],
                'with_sidebar' => [
                    'XSmall' => 5,
                    'Small' => 5,
                    'Medium' => 5,
                    'Large' => 6,
                    'XLarge' => 7,
                ],
            ],
            'module.listview.settings_limits' => [
                'XSmall' => 3,
                'Small' => 3,
                'Medium' => 5,
                'Large' => 5,
                'XLarge' => 5,
            ],
            'module.listview.sidebar_widgets' => [
                'default' => [
                    'widgets' => [

                    ],
                ],
                'modules' => NULL,
            ],
            'module.listview.table_action' => [
                'default' => [
                    'actions' => [
                        'select-columns' => [
                            'key' => 'select-columns',
                            'icon' => 'column_chooser',
                            'titleKey' => 'LBL_COLUMNS',
                            'params' => [
                                'expanded' => true,
                            ],
                            'modes' => [
                                0 => 'list',
                            ],
                            'klass' => [
                                0 => 'column-chooser-button',
                            ],
                        ],
                    ],
                ],
                'modules' => NULL,
            ],
            'module.listview.url_query_filter_mapping' => [
                '{field}_range_choice' => [
                    'not_equal' => [
                        'range_{field}' => 'target',
                    ],
                    'between' => [
                        'start_range_{field}' => 'start',
                        'end_range_{field}' => 'end',
                    ],
                    'greater_than' => [
                        'range_{field}' => 'target',
                    ],
                    'less_than' => [
                        'range_{field}' => 'target',
                    ],
                    'last_7_days' => [
                        '{field}_range_choice' => 'operator',
                    ],
                    'next_7_days' => [
                        '{field}_range_choice' => 'operator',
                    ],
                    'last_30_days' => [
                        '{field}_range_choice' => 'operator',
                    ],
                    'next_30_days' => [
                        '{field}_range_choice' => 'operator',
                    ],
                    'last_month' => [
                        '{field}_range_choice' => 'operator',
                    ],
                    'this_month' => [
                        '{field}_range_choice' => 'operator',
                    ],
                    'next_month' => [
                        '{field}_range_choice' => 'operator',
                    ],
                    'last_year' => [
                        '{field}_range_choice' => 'operator',
                    ],
                    'this_year' => [
                        '{field}_range_choice' => 'operator',
                    ],
                    'next_year' => [
                        '{field}_range_choice' => 'operator',
                    ],
                ],
                '{field}_filter_type' => [
                    'equal' => [
                        '{field}_filter_value' => 'target',
                    ],
                    'not_equal' => [
                        '{field}_filter_value' => 'target',
                    ],
                    'between' => [
                        '{field}_filter_start' => 'start',
                        '{field}_filter_end' => 'end',
                    ],
                    'greater_than' => [
                        '{field}_filter_start' => 'target',
                    ],
                    'less_than' => [
                        '{field}_filter_end' => 'target',
                    ],
                    'last_7_days' => [
                        '{field}_filter_type' => 'operator',
                    ],
                    'next_7_days' => [
                        '{field}_filter_type' => 'operator',
                    ],
                    'last_30_days' => [
                        '{field}_filter_type' => 'operator',
                    ],
                    'next_30_days' => [
                        '{field}_filter_type' => 'operator',
                    ],
                    'last_month' => [
                        '{field}_filter_type' => 'operator',
                    ],
                    'this_month' => [
                        '{field}_filter_type' => 'operator',
                    ],
                    'next_month' => [
                        '{field}_filter_type' => 'operator',
                    ],
                    'last_year' => [
                        '{field}_filter_type' => 'operator',
                    ],
                    'this_year' => [
                        '{field}_filter_type' => 'operator',
                    ],
                    'next_year' => [
                        '{field}_filter_type' => 'operator',
                    ],
                ],
            ],
            'legacy.module_routing' => [
                'home' => [
                    'index' => false,
                    'list' => false,
                    'record' => false,
                ],
                'saved-search' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'calls-reschedule' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'calls' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'tasks' => [
                    'index' => true,
                    'list' => true,
                    'record' => true,
                ],
                'meetings' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'notes' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'leads' => [
                    'index' => true,
                    'list' => true,
                    'record' => true,
                ],
                'contacts' => [
                    'index' => true,
                    'list' => true,
                    'record' => true,
                ],
                'accounts' => [
                    'index' => true,
                    'list' => true,
                    'record' => true,
                ],
                'opportunities' => [
                    'index' => true,
                    'list' => true,
                    'record' => true,
                ],
                'email-templates' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'campaigns' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'prospects' => [
                    'index' => true,
                    'list' => true,
                    'record' => true,
                ],
                'prospect-lists' => [
                    'index' => true,
                    'list' => true,
                    'record' => true,
                ],
                'documents' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'cases' => [
                    'index' => true,
                    'list' => true,
                    'record' => true,
                ],
                'project' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'project-task' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'bugs' => [
                    'index' => true,
                    'list' => true,
                    'record' => true,
                ],
                'business-hours' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'roles' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'users' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'employees' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'template-section-line' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'surveys' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'survey-responses' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'survey-question-responses' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'survey-questions' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'survey-question-options' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'project-templates' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'task-templates' => [
                    'index' => true,
                    'list' => true,
                    'record' => true,
                ],
                'knowledge-base-categories' => [
                    'index' => true,
                    'list' => true,
                    'record' => true,
                ],
                'knowledge-base' => [
                    'index' => true,
                    'list' => true,
                    'record' => true,
                ],
                'events' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'event-locations' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'contracts' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'invoices' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'pdf-templates' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'product-categories' => [
                    'index' => true,
                    'list' => true,
                    'record' => true,
                ],
                'products' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'quotes' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'products-quotes' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'maps' => [
                    'index' => false,
                    'list' => false,
                    'record' => false,
                ],
                'markers' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'areas' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'address-cache' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'case-events' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'case-updates' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'reports' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'scheduled-reports' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'workflow' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'workflow-processed' => [
                    'index' => false,
                    'list' => false,
                    'record' => false,
                ],
                'security-groups' => [
                    'index' => false,
                    'list' => false,
                    'record' => false,
                ],
                'acl-roles' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'schedulers' => [
                    'index' => false,
                    'list' => false,
                    'record' => false,
                ],
                'oauth-keys' => [
                    'index' => false,
                    'list' => false,
                    'record' => false,
                ],
                'outbound-email-accounts' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'inbound-email' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'external-oauth-provider' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'external-oauth-connection' => [
                    'index' => true,
                    'list' => true,
                    'record' => false,
                ],
                'emails' => [
                    'index' => false,
                    'list' => false,
                    'record' => false,
                ],
                'calendar' => [
                    'index' => false,
                    'list' => false,
                    'record' => false,
                ],
            ],
            'module.recordview.actions' => [
                'default' => [
                    'actions' => [
                        'edit' => [
                            'key' => 'edit',
                            'labelKey' => 'LBL_EDIT',
                            'params' => [
                                'expanded' => true,
                            ],
                            'modes' => [
                                0 => 'detail',
                            ],
                            'acl' => [
                                0 => 'edit',
                            ],
                        ],
                        'save' => [
                            'key' => 'save',
                            'labelKey' => 'LBL_SAVE_BUTTON_LABEL',
                            'params' => [
                                'expanded' => true,
                            ],
                            'modes' => [
                                0 => 'edit',
                            ],
                            'acl' => [
                                0 => 'edit',
                            ],
                        ],
                        'saveNew' => [
                            'key' => 'saveNew',
                            'labelKey' => 'LBL_SAVE_BUTTON_LABEL',
                            'params' => [
                                'expanded' => true,
                            ],
                            'modes' => [
                                0 => 'create',
                            ],
                            'acl' => [
                                0 => 'edit',
                            ],
                        ],
                        'cancel' => [
                            'key' => 'cancel',
                            'labelKey' => 'LBL_CANCEL',
                            'params' => [
                                'expanded' => true,
                            ],
                            'modes' => [
                                0 => 'edit',
                            ],
                        ],
                        'cancelCreate' => [
                            'key' => 'cancelCreate',
                            'labelKey' => 'LBL_CANCEL',
                            'params' => [
                                'expanded' => true,
                            ],
                            'modes' => [
                                0 => 'create',
                            ],
                        ],
                        'delete' => [
                            'key' => 'delete',
                            'labelKey' => 'LBL_DELETE',
                            'asyncProcess' => true,
                            'params' => [
                                'displayConfirmation' => true,
                                'confirmationLabel' => 'NTC_DELETE_CONFIRMATION',
                            ],
                            'modes' => [
                                0 => 'detail',
                            ],
                            'acl' => [
                                0 => 'delete',
                            ],
                        ],
                        'duplicate' => [
                            'key' => 'duplicate',
                            'labelKey' => 'LBL_DUPLICATE_BUTTON',
                            'asyncProcess' => true,
                            'params' => NULL,
                            'modes' => [
                                0 => 'detail',
                            ],
                            'acl' => [
                                0 => 'export',
                                1 => 'edit',
                            ],
                        ],
                        'audit' => [
                            'key' => 'audit',
                            'labelKey' => 'LNK_VIEW_CHANGE_LOG',
                            'asyncProcess' => true,
                            'params' => NULL,
                            'modes' => [
                                0 => 'detail',
                                1 => 'edit',
                            ],
                            'availability' => [
                                0 => 'audited',
                                1 => 'acls',
                            ],
                        ],
                        'duplicate-merge' => [
                            'key' => 'duplicate-merge',
                            'labelKey' => 'LBL_DUP_MERGE',
                            'asyncProcess' => true,
                            'params' => NULL,
                            'modes' => [
                                0 => 'detail',
                                1 => 'edit',
                            ],
                            'availability' => [
                                0 => 'duplicate-merge',
                                1 => 'acls',
                            ],
                            'acl' => [
                                0 => 'edit',
                                1 => 'delete',
                            ],
                        ],
                    ],
                ],
                'modules' => [
                    'employees' => [
                        'exclude' => [
                            0 => 'delete',
                        ],
                    ],
                ],
            ],
            'module.recordview.actions_limits' => [
                'XSmall' => 3,
                'Small' => 3,
                'Medium' => 3,
                'Large' => 3,
                'XLarge' => 3,
            ],
            'module.recordview.sidebar_widgets' => [
                'default' => [
                    'widgets' => [

                    ],
                ],
                'modules' => NULL,
            ],
            'module.recordview.bottom_widgets' => [
                'default' => [
                    'widgets' => [

                    ],
                ],
                'modules' => NULL,
            ],
            'module.recordview.top_widgets' => [
                'default' => [
                    'widget' => [

                    ],
                ],
                'modules' => NULL,
            ],
            'module.subpanelview.actions_limits' => [
                'XSmall' => 2,
                'Small' => 2,
                'Medium' => 2,
                'Large' => 2,
                'XLarge' => 2,
            ],
            'module.subpanel.line_actions' => [
                'default' => [
                    'actions' => [
                        'edit' => [
                            'key' => 'edit',
                            'labelKey' => 'LBL_EDIT_RECORD',
                            'action' => 'edit',
                            'icon' => 'edit',
                            'asyncProcess' => true,
                            'routing' => true,
                            'params' => NULL,
                            'modes' => [
                                0 => 'list',
                            ],
                            'acl' => [
                                0 => 'edit',
                            ],
                        ],
                        'unlink' => [
                            'key' => 'unlink',
                            'labelKey' => 'LBL_UNLINK_RECORD',
                            'action' => 'unlink',
                            'icon' => 'unlink',
                            'asyncProcess' => true,
                            'routing' => false,
                            'params' => [
                                'displayConfirmation' => true,
                                'confirmationLabel' => 'LBL_UNLINK_RELATIONSHIP_CONFIRM',
                            ],
                            'modes' => [
                                0 => 'list',
                            ],
                            'acl' => [
                                0 => 'edit',
                            ],
                        ],
                    ],
                ],
            ],
            'module.subpanel.top_actions' => [
                'default' => [
                    'actions' => [
                        'create' => [
                            'key' => 'create',
                            'labelKey' => 'LBL_QUICK_CREATE',
                            'action' => 'create',
                            'params' => NULL,
                            'modes' => [
                                0 => 'list',
                            ],
                            'acl' => [
                                0 => 'edit',
                            ],
                        ],
                        'link' => [
                            'key' => 'select',
                            'labelKey' => 'LBL_LINK',
                            'action' => 'select',
                            'params' => NULL,
                            'modes' => [
                                0 => 'list',
                            ],
                            'acl' => NULL,
                        ],
                        'edit' => [
                            'key' => 'edit',
                            'labelKey' => 'LBL_EDIT',
                            'action' => 'edit',
                            'asyncProcess' => true,
                            'params' => NULL,
                            'modes' => [
                                0 => 'list',
                            ],
                            'acl' => [
                                0 => 'edit',
                            ],
                        ],
                        'show-filter' => [
                            'key' => 'show-filter',
                            'icon' => 'filter',
                            'labelKey' => 'LBL_FILTERS',
                            'action' => 'show-filter',
                            'params' => [
                                'expanded' => true,
                            ],
                            'modes' => [
                                0 => 'list',
                            ],
                            'acl' => NULL,
                        ],
                        'clear-filter' => [
                            'key' => 'clear-filter',
                            'labelKey' => 'LBL_CLEAR_FILTER',
                            'action' => 'clear-filter',
                            'params' => [
                                'expanded' => true,
                            ],
                            'modes' => [
                                0 => 'list',
                            ],
                            'acl' => NULL,
                        ],
                    ],
                ],
            ],
            'module.subpanel.top_buttons' => [
                'SubPanelTopSelectButton' => [
                    'key' => 'select',
                    'labelKey' => 'LBL_LINK',
                    'action' => 'select',
                    'modes' => [
                        0 => 'list',
                    ],
                    'acl' => [
                        0 => 'edit',
                    ],
                ],
                'SubPanelTopButtonQuickCreate' => [
                    'key' => 'create',
                    'labelKey' => 'LBL_QUICK_CREATE',
                    'action' => 'create',
                    'modes' => [
                        0 => 'list',
                    ],
                    'acl' => [
                        0 => 'edit',
                    ],
                ],
                'SubPanelTopFilterButton' => [
                    'key' => 'show-filter',
                    'icon' => 'filter',
                    'labelKey' => 'LBL_FILTER',
                    'action' => 'show-filter',
                    'params' => [
                        'expanded' => true,
                    ],
                    'modes' => [
                        0 => 'list',
                    ],
                    'acl' => NULL,
                ],
                'SubPanelFilterClearButton' => [
                    'key' => 'clear-filter',
                    'labelKey' => 'LBL_CLEAR_FILTER',
                    'action' => 'clear-filter',
                    'params' => [
                        'expanded' => true,
                    ],
                    'modes' => [
                        0 => 'list',
                    ],
                    'acl' => NULL,
                ],
                'SubPanelTopCreateButton' => [
                    'key' => 'create',
                    'labelKey' => 'LBL_QUICK_CREATE',
                    'action' => 'create',
                    'modes' => [
                        0 => 'list',
                    ],
                    'acl' => [
                        0 => 'edit',
                    ],
                ],
                'SubPanelTopCreateTaskButton' => [
                    'key' => 'create',
                    'labelKey' => 'LNK_NEW_TASK',
                    'action' => 'create',
                    'modes' => [
                        0 => 'list',
                    ],
                    'acl' => [
                        0 => 'edit',
                    ],
                    'module' => 'tasks',
                ],
                'SubPanelTopScheduleMeetingButton' => [
                    'key' => 'create',
                    'labelKey' => 'LNK_NEW_MEETING',
                    'action' => 'create',
                    'modes' => [
                        0 => 'list',
                    ],
                    'acl' => [
                        0 => 'edit',
                    ],
                    'module' => 'meetings',
                ],
                'SubPanelTopScheduleCallButton' => [
                    'key' => 'create',
                    'labelKey' => 'LNK_NEW_CALL',
                    'action' => 'create',
                    'modes' => [
                        0 => 'list',
                    ],
                    'acl' => [
                        0 => 'edit',
                    ],
                    'module' => 'calls',
                ],
                'SubPanelTopComposeEmailButton' => [
                    'key' => 'create',
                    'labelKey' => 'LNK_NEW_EMAIL',
                    'action' => 'create',
                    'modes' => [
                        0 => 'list',
                    ],
                    'acl' => [
                        0 => 'edit',
                    ],
                    'module' => 'emails',
                    'moduleAction' => [
                        0 => 'composeView',
                    ],
                ],
                'SubPanelTopCreateNoteButton' => [
                    'key' => 'create',
                    'labelKey' => 'LNK_NEW_NOTE',
                    'action' => 'create',
                    'modes' => [
                        0 => 'list',
                    ],
                    'acl' => [
                        0 => 'edit',
                    ],
                    'module' => 'notes',
                ],
                'SubPanelTopArchiveEmailButton' => [
                    'key' => 'create',
                    'labelKey' => 'LBL_TRACK_EMAIL_BUTTON_LABEL',
                    'action' => 'create',
                    'modes' => [
                        0 => 'list',
                    ],
                    'acl' => [
                        0 => 'edit',
                    ],
                    'module' => 'emails',
                ],
                'SubPanelTopCreateLeadNameButton' => [
                    'key' => 'create',
                    'labelKey' => 'LBL_QUICK_CREATE',
                    'action' => 'create',
                    'modes' => [
                        0 => 'list',
                    ],
                    'acl' => [
                        0 => 'edit',
                    ],
                    'module' => 'leads',
                ],
            ],
            'navbar.administration_override' => [
                0 => 'configurator',
                1 => 'connectors',
                2 => 'currencies',
                3 => 'emailman',
                4 => 'module-builder',
                5 => 'studio',
                6 => 'sugar-feed',
            ],
            'record.fields.currency_fields_type_map' => [
                'default' => [
                    'currency' => [
                        'display' => 'inline',
                        'showLabel' => [
                            'edit' => [
                                0 => '{currency}',
                                1 => '{currency_id}',
                            ],
                            'filter' => [
                                0 => '*',
                            ],
                        ],
                        'definition' => [
                            '{currency}' => [
                                'logic' => [
                                    'currency' => [
                                        'key' => 'update-currency',
                                        'modes' => [
                                            0 => 'edit',
                                            1 => 'create',
                                            2 => 'massupdate',
                                            3 => 'filter',
                                        ],
                                        'params' => [
                                            'fieldDependencies' => [
                                                0 => '{currency_id}',
                                            ],
                                        ],
                                    ],
                                ],
                            ],
                            '{currency_id}' => [
                                'modes' => [
                                    0 => 'edit',
                                    1 => 'create',
                                    2 => 'massupdate',
                                    3 => 'filter',
                                ],
                                'type' => 'enum',
                                'options' => '__no_options__',
                            ],
                            '{base_currency}' => [
                                'display' => 'none',
                                'logic' => [
                                    'currency' => [
                                        'key' => 'update-base-currency',
                                        'modes' => [
                                            0 => 'edit',
                                            1 => 'create',
                                            2 => 'massupdate',
                                            3 => 'filter',
                                        ],
                                        'params' => [
                                            'fieldDependencies' => [
                                                0 => '{currency}',
                                            ],
                                        ],
                                    ],
                                ],
                            ],
                        ],
                    ],
                ],
            ],
            'record.fields.legacy_to_frontend_fields_map' => [
                'datetime_map' => [
                    'from' => [
                        'type' => 'datetimecombo',
                    ],
                    'to' => [
                        'type' => 'datetime',
                    ],
                ],
                'wysiwyg_map' => [
                    'from' => [
                        'type' => 'wysiwyg',
                    ],
                    'to' => [
                        'type' => 'html',
                    ],
                ],
                'html_readonly_map' => [
                    'matchAll' => true,
                    'from' => [
                        'type' => 'html',
                        'source' => 'non-db',
                    ],
                    'to' => [
                        'display' => 'readonly',
                    ],
                ],
                'textblock_readonly_map' => [
                    'matchAll' => true,
                    'from' => [
                        'type' => 'textblock',
                    ],
                    'to' => [
                        'type' => 'html',
                        'display' => 'readonly',
                    ],
                ],
            ],
            'record.fields.grouped_fields_type_map' => [
                'fullname' => [
                    'groupFields' => [
                        0 => 'salutation',
                        1 => 'first_name',
                        2 => 'last_name',
                    ],
                    'layout' => [
                        0 => 'salutation',
                        1 => 'first_name',
                        2 => 'last_name',
                    ],
                    'display' => 'inline',
                    'showLabel' => [
                        'edit' => [
                            0 => 'first_name',
                            1 => 'last_name',
                        ],
                        'filter' => [
                            0 => '*',
                        ],
                    ],
                ],
                'address' => [
                    'layout' => [
                        0 => 'street',
                        1 => 'postalcode',
                        2 => 'city',
                        3 => 'state',
                        4 => 'country',
                    ],
                    'display' => 'vertical',
                    'showLabel' => [
                        'edit' => [
                            0 => '*',
                        ],
                        'filter' => [
                            0 => '*',
                        ],
                    ],
                ],
                'parent' => [
                    'name' => '{name}-group',
                    'display' => 'inline',
                    'groupFields' => [
                        0 => '{name}',
                        1 => '{type_name}',
                        2 => '{id_name}',
                    ],
                    'layout' => [
                        0 => '{name}',
                        1 => '{type_name}',
                    ],
                    'showLabel' => [
                        'edit' => [
                            0 => '*',
                        ],
                        'filter' => [
                            0 => '*',
                        ],
                    ],
                    'replaceAttributes' => [
                        0 => 'name',
                        1 => 'type_name',
                        2 => 'id_name',
                    ],
                    'definition' => [
                        '{name}' => [
                            'type' => 'relate',
                            'rname' => 'name',
                            'module' => 'Accounts',
                            'link' => 'flex',
                            'logic' => [
                                'parent' => [
                                    'key' => 'update-flex-relate-module',
                                    'modes' => [
                                        0 => 'edit',
                                        1 => 'create',
                                        2 => 'massupdate',
                                        3 => 'filter',
                                    ],
                                    'params' => [
                                        'fieldDependencies' => [
                                            0 => '{type_name}',
                                        ],
                                    ],
                                ],
                            ],
                        ],
                        '{type_name}' => [
                            'type' => 'enum',
                            'modes' => [
                                0 => 'edit',
                                1 => 'create',
                                2 => 'massupdate',
                                3 => 'filter',
                                4 => 'detail',
                            ],
                        ],
                    ],
                ],
            ],
            'record.fields.view_metadata_field_alias_map' => [
                'type' => [
                    'parent' => [
                        'alias' => '{name}-group',
                    ],
                ],
            ],
            'saml.autocreate.attributes_map' => NULL,
            'system.admin_only_module_actions' => [
                'administration' => [
                    '*' => true,
                ],
                'users' => [
                    'list' => true,
                    'index' => true,
                ],
                'sugar-feed' => [
                    'adminsettings' => true,
                ],
                'address-cache' => [
                    '*' => true,
                ],
                'maps' => [
                    'geocoded_counts' => true,
                    'geocoding_test' => true,
                    'config' => true,
                ],
                'external-oauth-connection' => [
                    '*' => true,
                ],
            ],
            'system.settings' => [
                'setup_wizard_route' => 'users/Wizard',
            ],
            'upgrades' => [
                'toKeep' => [
                    0 => 'cache',
                    1 => 'extensions',
                    2 => 'public/extensions',
                    3 => 'public/legacy/codeception.dist.yml',
                    4 => 'public/legacy/public',
                    5 => 'public/legacy/tests',
                    6 => 'public/legacy/modules',
                    7 => 'public/legacy/custom',
                    8 => 'public/legacy/cache',
                    9 => 'public/legacy/upload',
                    10 => 'public/legacy/Api/V8/OAuth2/private.key',
                    11 => 'public/legacy/Api/V8/OAuth2/public.key',
                    12 => 'public/legacy/config.php',
                    13 => 'public/legacy/config_override.php',
                    14 => 'public/legacy/config_si.php',
                    15 => 'public/legacy/suitecrm.log',
                    16 => 'public/legacy/install.log',
                    17 => 'logs',
                    18 => '.env.local',
                    19 => '.env.local.php',
                    20 => '.env.prod.local',
                    21 => '.env.prod.local.php',
                    22 => '.env.dev.local',
                    23 => '.env.dev.local.php',
                    24 => 'tmp',
                ],
                'toKeepIgnore' => [
                    0 => 'public/legacy/modules/Accounts',
                    1 => 'public/legacy/modules/ACL',
                    2 => 'public/legacy/modules/ACLActions',
                    3 => 'public/legacy/modules/ACLRoles',
                    4 => 'public/legacy/modules/Activities',
                    5 => 'public/legacy/modules/Administration',
                    6 => 'public/legacy/modules/Alerts',
                    7 => 'public/legacy/modules/AM_ProjectTemplates',
                    8 => 'public/legacy/modules/AM_TaskTemplates',
                    9 => 'public/legacy/modules/AOBH_BusinessHours',
                    10 => 'public/legacy/modules/AOD_Index',
                    11 => 'public/legacy/modules/AOD_IndexEvent',
                    12 => 'public/legacy/modules/AOK_KnowledgeBase',
                    13 => 'public/legacy/modules/AOK_Knowledge_Base_Categories',
                    14 => 'public/legacy/modules/AOP_Case_Events',
                    15 => 'public/legacy/modules/AOP_Case_Updates',
                    16 => 'public/legacy/modules/AOR_Charts',
                    17 => 'public/legacy/modules/AOR_Conditions',
                    18 => 'public/legacy/modules/AOR_Fields',
                    19 => 'public/legacy/modules/AOR_Reports',
                    20 => 'public/legacy/modules/AOR_Scheduled_Reports',
                    21 => 'public/legacy/modules/AOS_Contracts',
                    22 => 'public/legacy/modules/AOS_Invoices',
                    23 => 'public/legacy/modules/AOS_Line_Item_Groups',
                    24 => 'public/legacy/modules/AOS_PDF_Templates',
                    25 => 'public/legacy/modules/AOS_Product_Categories',
                    26 => 'public/legacy/modules/AOS_Products',
                    27 => 'public/legacy/modules/AOS_Products_Quotes',
                    28 => 'public/legacy/modules/AOS_Quotes',
                    29 => 'public/legacy/modules/AOW_Actions',
                    30 => 'public/legacy/modules/AOW_Conditions',
                    31 => 'public/legacy/modules/AOW_Processed',
                    32 => 'public/legacy/modules/AOW_WorkFlow',
                    33 => 'public/legacy/modules/Audit',
                    34 => 'public/legacy/modules/BeanDictionary.php',
                    35 => 'public/legacy/modules/Bugs',
                    36 => 'public/legacy/modules/Calendar',
                    37 => 'public/legacy/modules/Calls',
                    38 => 'public/legacy/modules/Calls_Reschedule',
                    39 => 'public/legacy/modules/CampaignLog',
                    40 => 'public/legacy/modules/Campaigns',
                    41 => 'public/legacy/modules/CampaignTrackers',
                    42 => 'public/legacy/modules/Cases',
                    43 => 'public/legacy/modules/Charts',
                    44 => 'public/legacy/modules/Configurator',
                    45 => 'public/legacy/modules/Connectors',
                    46 => 'public/legacy/modules/Contacts',
                    47 => 'public/legacy/modules/Currencies',
                    48 => 'public/legacy/modules/Delegates',
                    49 => 'public/legacy/modules/DocumentRevisions',
                    50 => 'public/legacy/modules/Documents',
                    51 => 'public/legacy/modules/DynamicFields',
                    52 => 'public/legacy/modules/EAPM',
                    53 => 'public/legacy/modules/EmailAddresses',
                    54 => 'public/legacy/modules/EmailMan',
                    55 => 'public/legacy/modules/EmailMarketing',
                    56 => 'public/legacy/modules/Emails',
                    57 => 'public/legacy/modules/EmailTemplates',
                    58 => 'public/legacy/modules/EmailText',
                    59 => 'public/legacy/modules/Employees',
                    60 => 'public/legacy/modules/Favorites',
                    61 => 'public/legacy/modules/FP_Event_Locations',
                    62 => 'public/legacy/modules/FP_events',
                    63 => 'public/legacy/modules/Groups',
                    64 => 'public/legacy/modules/Help',
                    65 => 'public/legacy/modules/History',
                    66 => 'public/legacy/modules/Home',
                    67 => 'public/legacy/modules/iCals',
                    68 => 'public/legacy/modules/Import',
                    69 => 'public/legacy/modules/InboundEmail',
                    70 => 'public/legacy/modules/jjwg_Address_Cache',
                    71 => 'public/legacy/modules/jjwg_Areas',
                    72 => 'public/legacy/modules/jjwg_Maps',
                    73 => 'public/legacy/modules/jjwg_Markers',
                    74 => 'public/legacy/modules/LabelEditor',
                    75 => 'public/legacy/modules/Leads',
                    76 => 'public/legacy/modules/MailMerge',
                    77 => 'public/legacy/modules/Meetings',
                    78 => 'public/legacy/modules/MergeRecords',
                    79 => 'public/legacy/modules/ModuleBuilder',
                    80 => 'public/legacy/modules/MySettings',
                    81 => 'public/legacy/modules/Notes',
                    82 => 'public/legacy/modules/OAuth2Clients',
                    83 => 'public/legacy/modules/OAuth2Tokens',
                    84 => 'public/legacy/modules/OAuthKeys',
                    85 => 'public/legacy/modules/OAuthTokens',
                    86 => 'public/legacy/modules/Opportunities',
                    87 => 'public/legacy/modules/OptimisticLock',
                    88 => 'public/legacy/modules/OutboundEmailAccounts',
                    89 => 'public/legacy/modules/Project',
                    90 => 'public/legacy/modules/ProjectTask',
                    91 => 'public/legacy/modules/ProspectLists',
                    92 => 'public/legacy/modules/Prospects',
                    93 => 'public/legacy/modules/Relationships',
                    94 => 'public/legacy/modules/Releases',
                    95 => 'public/legacy/modules/Reminders',
                    96 => 'public/legacy/modules/Reminders_Invitees',
                    97 => 'public/legacy/modules/ResourceCalendar',
                    98 => 'public/legacy/modules/Roles',
                    99 => 'public/legacy/modules/SavedSearch',
                    100 => 'public/legacy/modules/Schedulers',
                    101 => 'public/legacy/modules/SchedulersJobs',
                    102 => 'public/legacy/modules/SecurityGroups',
                    103 => 'public/legacy/modules/Spots',
                    104 => 'public/legacy/modules/Studio',
                    105 => 'public/legacy/modules/SugarFeed',
                    106 => 'public/legacy/modules/SurveyQuestionOptions',
                    107 => 'public/legacy/modules/SurveyQuestionResponses',
                    108 => 'public/legacy/modules/SurveyQuestions',
                    109 => 'public/legacy/modules/SurveyResponses',
                    110 => 'public/legacy/modules/Surveys',
                    111 => 'public/legacy/modules/TableDictionary.php',
                    112 => 'public/legacy/modules/Tasks',
                    113 => 'public/legacy/modules/TemplateSectionLine',
                    114 => 'public/legacy/modules/Trackers',
                    115 => 'public/legacy/modules/UpgradeWizard',
                    116 => 'public/legacy/modules/UserPreferences',
                    117 => 'public/legacy/modules/Users',
                    118 => 'public/legacy/modules/vCals',
                ],
                'toExpand' => [
                    0 => 'public',
                    1 => 'public/legacy',
                    2 => 'public/legacy/modules',
                    3 => 'public/legacy/Api',
                    4 => 'public/legacy/Api/V8',
                    5 => 'public/legacy/Api/V8/OAuth2',
                ],
            ],
            'themes.image_paths' => [
                0 => 'legacy/themes/default/images',
                1 => 'legacy/custom/themes/default/images',
                2 => 'dist/themes/default/images',
                3 => 'legacy/themes/<theme>/images',
                4 => 'legacy/custom/themes/<theme>/images',
                5 => 'dist/themes/<theme>/images',
                6 => 'dist/themes/<theme>/images/modules',
            ],
            'themes.image_supported_types' => [
                0 => 'svg',
                1 => 'png',
                2 => 'jpg',
                3 => 'jpeg',
                4 => 'gif',
            ],
            'themes.navigation_tab_limits' => [
                'XSmall' => 5,
                'Small' => 4,
                'Medium' => 6,
                'Large' => 10,
                'XLarge' => 12,
            ],
            'notifications' => [
                'module' => 'alerts',
                'class' => 'notifications',
                'maxListHeight' => 450,
                'direction' => 'desc',
                'loadMorePosition' => 'bottom',
                'filters' => [
                    'orderBy' => 'snooze',
                    'sortOrder' => 'desc',
                ],
                'autoRefreshFrequency' => 1,
                'autoRefreshDeviationMin' => -15,
                'autoRefreshDeviationMax' => 15,
                'showNoDataMessage' => true,
                'noDataLabel' => 'LBL_NOTIFICATIONS_NONE',
                'create' => NULL,
                'item' => [
                    'collapsible' => false,
                    'collapseLimit' => 200,
                    'itemClass' => 'notifications-item',
                    'buttonGroupClass' => 'd-flex flex-row-reverse align-items-end notifications-actions',
                    'containerClass' => 'flex-row align-items-start py-2 justify-content-start containerClass',
                    'dynamicClass' => [
                        0 => 'is_read',
                    ],
                    'flexDirection' => 'flex-row',
                    'fields' => [
                        'url_redirect' => [
                            'name' => 'url_redirect',
                            'type' => 'varchar',
                        ],
                        'date_start' => [
                            'name' => 'date_start',
                            'dynamicLabelKey' => 'LBL_NOTIFICATION_ITEM_DATE',
                            'type' => 'datetime',
                        ],
                        'is_read' => [
                            'name' => 'is_read',
                            'type' => 'bool',
                        ],
                    ],
                    'layout' => [
                        'body' => [
                            'class' => 'itemContentClass',
                            'rows' => [
                                0 => [
                                    'cols' => [
                                        0 => [
                                            'field' => [
                                                'name' => 'target_module_type',
                                                'type' => 'icon',
                                            ],
                                            'labelDisplay' => 'none',
                                            'hideIfEmpty' => false,
                                            'class' => 'font-weight-bold',
                                        ],
                                    ],
                                ],
                                1 => [
                                    'class' => 'd-flex flex-column flex-grow-1 pl-2 pr-2',
                                    'align' => 'start',
                                    'cols' => [
                                        0 => [
                                            'field' => [
                                                'name' => 'target_module_label',
                                            ],
                                            'labelDisplay' => 'none',
                                            'labelClass' => 'm-0',
                                            'display' => 'readonly',
                                            'hideIfEmpty' => true,
                                            'class' => 'small text-main text-uppercase',
                                        ],
                                        1 => [
                                            'field' => [
                                                'name' => 'name',
                                                'metadata' => [
                                                    'link' => true,
                                                    'linkRoute' => '{{fields.url_redirect.value}}',
                                                ],
                                            ],
                                            'labelDisplay' => 'none',
                                            'labelClass' => 'm-0',
                                            'display' => 'readonly',
                                            'hideIfEmpty' => false,
                                            'class' => 'text-bigger-1',
                                        ],
                                        2 => [
                                            'field' => [
                                                'name' => 'snooze',
                                                'dynamicLabelKey' => 'LBL_NOTIFICATION_ITEM_DATE_ENTERED',
                                                'type' => 'datetime',
                                            ],
                                            'labelClass' => 'm-0',
                                            'labelDisplay' => 'inline',
                                            'display' => 'none',
                                            'hideIfEmpty' => false,
                                            'class' => 'small',
                                        ],
                                        3 => [
                                            'field' => [
                                                'name' => 'date_start',
                                                'dynamicLabelKey' => 'LBL_NOTIFICATION_ITEM_DATE',
                                                'type' => 'datetime',
                                            ],
                                            'labelClass' => 'm-0',
                                            'labelDisplay' => 'inline',
                                            'display' => 'none',
                                            'hideIfEmpty' => true,
                                            'class' => 'small',
                                        ],
                                    ],
                                ],
                                2 => [
                                    'class' => 'd-flex',
                                    'align' => 'start',
                                    'justify' => 'start',
                                    'cols' => [
                                        0 => [
                                            'actionSlot' => 'true',
                                            'class' => 'notification-item-buttons',
                                        ],
                                    ],
                                ],
                            ],
                        ],
                        'actions' => [
                            0 => [
                                'key' => 'dismiss-alert',
                                'icon' => 'cross',
                                'titleKey' => 'LBL_DISMISS',
                                'asyncProcess' => true,
                                'params' => [
                                    'inlineConfirmation' => true,
                                    'confirmationLabel' => 'LBL_DISMISS_INLINE_CONFIRM',
                                ],
                                'klass' => [
                                    0 => 'btn fill-complementary fill-hover-complementary-light border-0 btn-sm p-0 m-0',
                                ],
                                'modes' => [
                                    0 => 'detail',
                                    1 => 'edit',
                                ],
                                'acl' => [

                                ],
                            ],
                            1 => [
                                'key' => 'snooze',
                                'icon' => 'clock',
                                'titleKey' => 'LBL_SNOOZE',
                                'asyncProcess' => true,
                                'params' => [
                                    'inlineConfirmation' => true,
                                    'confirmationDynamicLabel' => 'LBL_SNOOZE_INLINE_CONFIRM',
                                ],
                                'klass' => [
                                    0 => 'btn stroke-complementary stroke-hover-complementary-light fill-complementary clock-icon border-0 btn-sm p-0 m-0 mr-2',
                                ],
                                'modes' => [
                                    0 => 'detail',
                                    1 => 'edit',
                                ],
                                'acl' => [

                                ],
                            ],
                        ],
                    ],
                ],
                'pageSize' => 10,
                'listActionsClass' => 'd-flex align-items-center justify-content-end notification-list-actions pr-2 pt-1',
                'listActionsButtonClass' => 'line-actions-button btn btn-link small',
                'listActionsButtonGroupClass' => 'd-flex justify-content-end',
                'listActions' => [
                    0 => [
                        'key' => 'dismiss-all-alerts',
                        'label' => 'LBL_DISMISS_ALL',
                        'labelKey' => 'LBL_DISMISS_ALL',
                        'asyncProcess' => true,
                        'params' => [
                            'inlineConfirmation' => true,
                            'confirmationLabel' => 'LBL_DISMISS_ALL_INLINE_CONFIRM',
                            'module' => 'alerts',
                        ],
                        'klass' => [
                            0 => '',
                        ],
                        'modes' => [
                            0 => 'detail',
                            1 => 'list',
                        ],
                        'acl' => [

                        ],
                    ],
                    1 => [
                        'key' => 'mark-as-read',
                        'label' => 'LBL_DISMISS_ALL',
                        'labelKey' => 'LBL_DISMISS_ALL',
                        'asyncProcess' => true,
                        'params' => [
                            'displayConfirmation' => true,
                            'confirmationLabel' => 'NTC_DELETE_CONFIRMATION',
                            'module' => 'alerts',
                        ],
                        'klass' => [
                            0 => '',
                        ],
                        'modes' => [

                        ],
                        'acl' => [

                        ],
                    ],
                ],
            ],
            'notifications_reload_actions' => [
                'meetings' => [
                    0 => 'create',
                    1 => 'edit',
                ],
                'calls' => [
                    0 => 'create',
                    1 => 'edit',
                ],
            ],
            'quick_actions' => [
                'max_number' => 7,
                'use_navigation_modules' => true,
                'actions' => NULL,
            ],
            'ui' => [
                'alert_timeout' => 3,
                'user_preferences_save_delay' => 500,
                'loading_display_delay' => 900,
                'table_loading_display_delay' => 800,
                'modal_buttons_collapse_breakpoint' => 4,
                'list_max_entries_per_record_thread' => 10,
                'tinymce' => [
                    'edit' => [
                        'base_url' => './dist/tinymce',
                        'suffix' => '.min',
                        'modelEvents' => 'change',
                        'ignoreEvents' => 'onKeyDown,onKeyPress,onKeyUp,onSelectionChange',
                        'height' => 500,
                        'deprecation_warnings' => false,
                        'menubar' => false,
                        'plugins' => [
                            0 => 'advlist autolink lists link image charmap print preview anchor',
                            1 => 'searchreplace visualblocks code fullscreen',
                            2 => 'insertdatetime media table paste code help wordcount',
                        ],
                        'toolbar' => 'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify |  bullist numlist outdent indent | removeformat | help',
                        'toolbar_mode' => 'floating',
                        'mobile' => [
                            'theme' => 'mobile',
                        ],
                    ],
                    'detail' => [
                        'base_url' => './dist/tinymce',
                        'suffix' => '.min',
                        'deprecation_warnings' => false,
                        'readonly' => true,
                        'toolbar' => false,
                        'menubar' => false,
                        'statusbar' => false,
                        'inline' => true,
                    ],
                ],
                'navigation_max_module_recently_viewed' => 5,
                'navigation_max_module_favorites' => 5,
                'subpanel_max_height' => 620,
                'listview_max_height' => 0,
                'record_modal_max_height' => 620,
                'inline_confirmation_loading_delay' => 300,
                'displayed_quick_filters' => [
                    'XSmall' => 0,
                    'Small' => 4,
                    'Medium' => 2,
                    'Large' => 3,
                    'XLarge' => 5,
                ],
                'quick_filters_breakdown_threshold' => [
                    'XSmall' => 0,
                    'Small' => 4,
                    'Medium' => 2,
                    'Large' => 3,
                    'XLarge' => 5,
                ],
                'enable_quick_filters' => [
                    'XSmall' => false,
                    'Small' => true,
                    'Medium' => true,
                    'Large' => true,
                    'XLarge' => true,
                ],
                'quick_filters_breakdown_screen_sizes' => [
                    'XSmall' => true,
                    'Small' => true,
                    'Medium' => false,
                    'Large' => false,
                    'XLarge' => false,
                ],
                'widget_swap_screen_sizes' => [
                    'XSmall' => true,
                    'Small' => true,
                    'Medium' => false,
                    'Large' => false,
                    'XLarge' => false,
                ],
            ],
            'legacy.dir' => (\dirname(__DIR__, 3).'/public/legacy'),
            'packages.upgrade.dir' => (\dirname(__DIR__, 3).'/tmp/package/upgrade'),
            'legacy.path' => '/legacy',
            'legacy.session_name' => 'LEGACYSESSID',
            'default_session_name' => 'PHPSESSID',
            'event_dispatcher.event_aliases' => [
                'Symfony\\Component\\Console\\Event\\ConsoleCommandEvent' => 'console.command',
                'Symfony\\Component\\Console\\Event\\ConsoleErrorEvent' => 'console.error',
                'Symfony\\Component\\Console\\Event\\ConsoleSignalEvent' => 'console.signal',
                'Symfony\\Component\\Console\\Event\\ConsoleTerminateEvent' => 'console.terminate',
                'Symfony\\Component\\HttpKernel\\Event\\ControllerArgumentsEvent' => 'kernel.controller_arguments',
                'Symfony\\Component\\HttpKernel\\Event\\ControllerEvent' => 'kernel.controller',
                'Symfony\\Component\\HttpKernel\\Event\\ResponseEvent' => 'kernel.response',
                'Symfony\\Component\\HttpKernel\\Event\\FinishRequestEvent' => 'kernel.finish_request',
                'Symfony\\Component\\HttpKernel\\Event\\RequestEvent' => 'kernel.request',
                'Symfony\\Component\\HttpKernel\\Event\\ViewEvent' => 'kernel.view',
                'Symfony\\Component\\HttpKernel\\Event\\ExceptionEvent' => 'kernel.exception',
                'Symfony\\Component\\HttpKernel\\Event\\TerminateEvent' => 'kernel.terminate',
                'Symfony\\Component\\Security\\Core\\Event\\AuthenticationSuccessEvent' => 'security.authentication.success',
                'Symfony\\Component\\Security\\Core\\Event\\AuthenticationFailureEvent' => 'security.authentication.failure',
                'Symfony\\Component\\Security\\Http\\Event\\InteractiveLoginEvent' => 'security.interactive_login',
                'Symfony\\Component\\Security\\Http\\Event\\SwitchUserEvent' => 'security.switch_user',
            ],
            'fragment.renderer.hinclude.global_template' => NULL,
            'fragment.path' => '/_fragment',
            'kernel.http_method_override' => true,
            'kernel.trusted_hosts' => [

            ],
            'kernel.default_locale' => 'en',
            'kernel.error_controller' => 'error_controller',
            'debug.file_link_format' => NULL,
            'session.metadata.storage_key' => '_sf2_meta',
            'session.storage.options' => [
                'cache_limiter' => '0',
                'cookie_secure' => 'auto',
                'cookie_httponly' => true,
                'cookie_samesite' => 'lax',
                'gc_probability' => 1,
            ],
            'session.metadata.update_threshold' => 0,
            'asset.request_context.base_path' => NULL,
            'asset.request_context.secure' => NULL,
            'validator.translation_domain' => 'validators',
            'translator.logging' => false,
            'translator.default_path' => (\dirname(__DIR__, 3).'/translations'),
            'data_collector.templates' => [

            ],
            'debug.error_handler.throw_at' => 0,
            'router.request_context.host' => 'localhost',
            'router.request_context.scheme' => 'http',
            'router.request_context.base_url' => '',
            'router.resource' => 'kernel::loadRoutes',
            'request_listener.http_port' => 80,
            'request_listener.https_port' => 443,
            'twig.form.resources' => [
                0 => 'form_div_layout.html.twig',
            ],
            'twig.default_path' => (\dirname(__DIR__, 3).'/templates'),
            'security.role_hierarchy.roles' => [

            ],
            'security.access.denied_url' => NULL,
            'security.authentication.manager.erase_credentials' => true,
            'security.authentication.session_strategy.strategy' => 'migrate',
            'security.access.always_authenticate_before_granting' => false,
            'security.authentication.hide_user_not_found' => true,
            'security.firewalls' => [
                0 => 'dev',
                1 => 'main',
                2 => 'auth',
                3 => 'logged_out',
            ],
            'doctrine.dbal.logger.chain.class' => 'Doctrine\\DBAL\\Logging\\LoggerChain',
            'doctrine.dbal.logger.profiling.class' => 'Doctrine\\DBAL\\Logging\\DebugStack',
            'doctrine.dbal.logger.class' => 'Symfony\\Bridge\\Doctrine\\Logger\\DbalLogger',
            'doctrine.dbal.configuration.class' => 'Doctrine\\DBAL\\Configuration',
            'doctrine.data_collector.class' => 'Doctrine\\Bundle\\DoctrineBundle\\DataCollector\\DoctrineDataCollector',
            'doctrine.dbal.connection.event_manager.class' => 'Symfony\\Bridge\\Doctrine\\ContainerAwareEventManager',
            'doctrine.dbal.connection_factory.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ConnectionFactory',
            'doctrine.dbal.events.mysql_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\MysqlSessionInit',
            'doctrine.dbal.events.oracle_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\OracleSessionInit',
            'doctrine.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Registry',
            'doctrine.entity_managers' => [
                'default' => 'doctrine.orm.default_entity_manager',
            ],
            'doctrine.default_entity_manager' => 'default',
            'doctrine.dbal.connection_factory.types' => [

            ],
            'doctrine.connections' => [
                'default' => 'doctrine.dbal.default_connection',
            ],
            'doctrine.default_connection' => 'default',
            'doctrine.orm.configuration.class' => 'Doctrine\\ORM\\Configuration',
            'doctrine.orm.entity_manager.class' => 'Doctrine\\ORM\\EntityManager',
            'doctrine.orm.manager_configurator.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ManagerConfigurator',
            'doctrine.orm.cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine.orm.cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine.orm.cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine.orm.cache.memcache_host' => 'localhost',
            'doctrine.orm.cache.memcache_port' => 11211,
            'doctrine.orm.cache.memcache_instance.class' => 'Memcache',
            'doctrine.orm.cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine.orm.cache.memcached_host' => 'localhost',
            'doctrine.orm.cache.memcached_port' => 11211,
            'doctrine.orm.cache.memcached_instance.class' => 'Memcached',
            'doctrine.orm.cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine.orm.cache.redis_host' => 'localhost',
            'doctrine.orm.cache.redis_port' => 6379,
            'doctrine.orm.cache.redis_instance.class' => 'Redis',
            'doctrine.orm.cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine.orm.cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine.orm.cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine.orm.metadata.driver_chain.class' => 'Doctrine\\Persistence\\Mapping\\Driver\\MappingDriverChain',
            'doctrine.orm.metadata.annotation.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver',
            'doctrine.orm.metadata.xml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver',
            'doctrine.orm.metadata.yml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver',
            'doctrine.orm.metadata.php.class' => 'Doctrine\\ORM\\Mapping\\Driver\\PHPDriver',
            'doctrine.orm.metadata.staticphp.class' => 'Doctrine\\ORM\\Mapping\\Driver\\StaticPHPDriver',
            'doctrine.orm.metadata.attribute.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AttributeDriver',
            'doctrine.orm.proxy_cache_warmer.class' => 'Symfony\\Bridge\\Doctrine\\CacheWarmer\\ProxyCacheWarmer',
            'form.type_guesser.doctrine.class' => 'Symfony\\Bridge\\Doctrine\\Form\\DoctrineOrmTypeGuesser',
            'doctrine.orm.validator.unique.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator',
            'doctrine.orm.validator_initializer.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\DoctrineInitializer',
            'doctrine.orm.security.user.provider.class' => 'Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider',
            'doctrine.orm.listeners.resolve_target_entity.class' => 'Doctrine\\ORM\\Tools\\ResolveTargetEntityListener',
            'doctrine.orm.listeners.attach_entity_listeners.class' => 'Doctrine\\ORM\\Tools\\AttachEntityListenersListener',
            'doctrine.orm.naming_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultNamingStrategy',
            'doctrine.orm.naming_strategy.underscore.class' => 'Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy',
            'doctrine.orm.quote_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy',
            'doctrine.orm.quote_strategy.ansi.class' => 'Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy',
            'doctrine.orm.entity_listener_resolver.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Mapping\\ContainerEntityListenerResolver',
            'doctrine.orm.second_level_cache.default_cache_factory.class' => 'Doctrine\\ORM\\Cache\\DefaultCacheFactory',
            'doctrine.orm.second_level_cache.default_region.class' => 'Doctrine\\ORM\\Cache\\Region\\DefaultRegion',
            'doctrine.orm.second_level_cache.filelock_region.class' => 'Doctrine\\ORM\\Cache\\Region\\FileLockRegion',
            'doctrine.orm.second_level_cache.logger_chain.class' => 'Doctrine\\ORM\\Cache\\Logging\\CacheLoggerChain',
            'doctrine.orm.second_level_cache.logger_statistics.class' => 'Doctrine\\ORM\\Cache\\Logging\\StatisticsCacheLogger',
            'doctrine.orm.second_level_cache.cache_configuration.class' => 'Doctrine\\ORM\\Cache\\CacheConfiguration',
            'doctrine.orm.second_level_cache.regions_configuration.class' => 'Doctrine\\ORM\\Cache\\RegionsConfiguration',
            'doctrine.orm.auto_generate_proxy_classes' => false,
            'doctrine.orm.proxy_namespace' => 'Proxies',
            'api_platform.metadata_backward_compatibility_layer' => true,
            'api_platform.enable_entrypoint' => true,
            'api_platform.enable_docs' => true,
            'api_platform.title' => '',
            'api_platform.description' => '',
            'api_platform.version' => '0.0.0',
            'api_platform.show_webby' => true,
            'api_platform.url_generation_strategy' => 1,
            'api_platform.exception_to_status' => [
                'Symfony\\Component\\Serializer\\Exception\\ExceptionInterface' => 400,
                'ApiPlatform\\Exception\\InvalidArgumentException' => 400,
                'ApiPlatform\\Exception\\FilterValidationException' => 400,
                'Doctrine\\ORM\\OptimisticLockException' => 409,
            ],
            'api_platform.formats' => [
                'jsonld' => [
                    0 => 'application/ld+json',
                ],
                'json' => [
                    0 => 'application/json',
                ],
                'html' => [
                    0 => 'text/html',
                ],
            ],
            'api_platform.patch_formats' => [
                'json' => [
                    0 => 'application/merge-patch+json',
                ],
                'graphql' => [
                    0 => 'application/graphql',
                ],
            ],
            'api_platform.error_formats' => [
                'jsonproblem' => [
                    0 => 'application/problem+json',
                ],
                'jsonld' => [
                    0 => 'application/ld+json',
                ],
            ],
            'api_platform.allow_plain_identifiers' => false,
            'api_platform.eager_loading.enabled' => true,
            'api_platform.eager_loading.max_joins' => 30,
            'api_platform.eager_loading.fetch_partial' => false,
            'api_platform.eager_loading.force_eager' => true,
            'api_platform.collection.exists_parameter_name' => 'exists',
            'api_platform.collection.order' => 'ASC',
            'api_platform.collection.order_parameter_name' => 'order',
            'api_platform.collection.order_nulls_comparison' => NULL,
            'api_platform.collection.pagination.enabled' => true,
            'api_platform.collection.pagination.partial' => false,
            'api_platform.collection.pagination.client_enabled' => false,
            'api_platform.collection.pagination.client_items_per_page' => false,
            'api_platform.collection.pagination.client_partial' => false,
            'api_platform.collection.pagination.items_per_page' => 30,
            'api_platform.collection.pagination.maximum_items_per_page' => NULL,
            'api_platform.collection.pagination.page_parameter_name' => 'page',
            'api_platform.collection.pagination.enabled_parameter_name' => 'pagination',
            'api_platform.collection.pagination.items_per_page_parameter_name' => 'itemsPerPage',
            'api_platform.collection.pagination.partial_parameter_name' => 'partial',
            'api_platform.collection.pagination' => [
                'enabled' => true,
                'partial' => false,
                'client_enabled' => false,
                'client_items_per_page' => false,
                'client_partial' => false,
                'items_per_page' => 30,
                'maximum_items_per_page' => NULL,
                'page_parameter_name' => 'page',
                'enabled_parameter_name' => 'pagination',
                'items_per_page_parameter_name' => 'itemsPerPage',
                'partial_parameter_name' => 'partial',
            ],
            'api_platform.http_cache.etag' => true,
            'api_platform.http_cache.max_age' => NULL,
            'api_platform.http_cache.shared_max_age' => NULL,
            'api_platform.http_cache.vary' => [
                0 => 'Accept',
            ],
            'api_platform.http_cache.public' => NULL,
            'api_platform.http_cache.invalidation.max_header_length' => 7500,
            'api_platform.http_cache.invalidation.xkey.glue' => ' ',
            'api_platform.asset_package' => NULL,
            'api_platform.defaults' => [
                'attributes' => [

                ],
            ],
            'api_platform.resource_class_directories' => [
                0 => (\dirname(__DIR__, 3).'/core'),
            ],
            'api_platform.oauth.enabled' => true,
            'api_platform.oauth.clientId' => 'scrmfe',
            'api_platform.oauth.clientSecret' => 'scrmfe',
            'api_platform.oauth.type' => 'oauth2',
            'api_platform.oauth.flow' => 'password',
            'api_platform.oauth.tokenUrl' => '/oauth/v2/token',
            'api_platform.oauth.authorizationUrl' => '/oauth/v2/auth',
            'api_platform.oauth.refreshUrl' => '',
            'api_platform.oauth.scopes' => [

            ],
            'api_platform.oauth.pkce' => false,
            'api_platform.openapi.termsOfService' => NULL,
            'api_platform.openapi.contact.name' => NULL,
            'api_platform.openapi.contact.url' => NULL,
            'api_platform.openapi.contact.email' => NULL,
            'api_platform.openapi.license.name' => NULL,
            'api_platform.openapi.license.url' => NULL,
            'api_platform.swagger.versions' => [
                0 => 3,
            ],
            'api_platform.enable_swagger_ui' => true,
            'api_platform.enable_re_doc' => false,
            'api_platform.swagger.api_keys' => [

            ],
            'api_platform.swagger_ui.extra_configuration' => [

            ],
            'api_platform.graphql.enabled' => true,
            'api_platform.graphql.graphiql.enabled' => false,
            'api_platform.graphql.graphql_playground.enabled' => true,
            'api_platform.graphql.collection.pagination' => [
                'enabled' => true,
            ],
            'api_platform.graphql.default_ide' => 'graphql-playground',
            'api_platform.graphql.nesting_separator' => '_',
            'api_platform.validator.serialize_payload_fields' => [

            ],
            'api_platform.validator.query_parameter_validation' => true,
            'api_platform.elasticsearch.enabled' => false,
            'monolog.use_microseconds' => true,
            'monolog.swift_mailer.handlers' => [

            ],
            'monolog.handlers_to_channels' => [
                'monolog.handler.deprecation_filter' => [
                    'type' => 'inclusive',
                    'elements' => [
                        0 => 'php',
                    ],
                ],
                'monolog.handler.console' => [
                    'type' => 'exclusive',
                    'elements' => [
                        0 => 'event',
                        1 => 'doctrine',
                        2 => 'upgrade',
                    ],
                ],
                'monolog.handler.main' => [
                    'type' => 'exclusive',
                    'elements' => [
                        0 => 'upgrade',
                    ],
                ],
                'monolog.handler.auth' => [
                    'type' => 'inclusive',
                    'elements' => [
                        0 => 'auth',
                    ],
                ],
                'monolog.handler.install' => [
                    'type' => 'inclusive',
                    'elements' => [
                        0 => 'install',
                    ],
                ],
                'monolog.handler.upgrade' => [
                    'type' => 'inclusive',
                    'elements' => [
                        0 => 'upgrade',
                    ],
                ],
            ],
            'nelmio_cors.map' => [
                '^/' => [

                ],
            ],
            'nelmio_cors.cors_listener.class' => 'Nelmio\\CorsBundle\\EventListener\\CorsListener',
            'nelmio_cors.options_resolver.class' => 'Nelmio\\CorsBundle\\Options\\Resolver',
            'nelmio_cors.options_provider.config.class' => 'Nelmio\\CorsBundle\\Options\\ConfigProvider',
            'doctrine.migrations.preferred_em' => NULL,
            'doctrine.migrations.preferred_connection' => NULL,
            'console.command.ids' => [

            ],
        ];
    }

    protected function throw($message)
    {
        throw new RuntimeException($message);
    }
}
