<?php

namespace ContainerGRi2xj9;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_EventDispatcher_AuthService extends App_KernelProdContainer
{
    /*
     * Gets the private 'security.event_dispatcher.auth' shared service.
     *
     * @return \Symfony\Component\EventDispatcher\EventDispatcher
     */
    public static function do($container, $lazyLoad = true)
    {
        $container->privates['security.event_dispatcher.auth'] = $instance = new \Symfony\Component\EventDispatcher\EventDispatcher();

        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.auth.user_provider'] ?? $container->load('getSecurity_Listener_Auth_UserProviderService'));
        }, 1 => 'checkPassport'], 2048);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.session.auth'] ?? $container->load('getSecurity_Listener_Session_AuthService'));
        }, 1 => 'onSuccessfulLogin'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [0 => function () use ($container) {
            return ($container->privates['security.logout.listener.default.auth'] ?? $container->load('getSecurity_Logout_Listener_Default_AuthService'));
        }, 1 => 'onLogout'], 64);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [0 => function () use ($container) {
            return ($container->privates['security.logout.listener.session.auth'] ?? ($container->privates['security.logout.listener.session.auth'] = new \Symfony\Component\Security\Http\EventListener\SessionLogoutListener()));
        }, 1 => 'onLogout'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.login_throttling.auth'] ?? $container->load('getSecurity_Listener_LoginThrottling_AuthService'));
        }, 1 => 'checkPassport'], 2080);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.login_throttling.auth'] ?? $container->load('getSecurity_Listener_LoginThrottling_AuthService'));
        }, 1 => 'onSuccessfulLogin'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.user_checker.auth'] ?? $container->load('getSecurity_Listener_UserChecker_AuthService'));
        }, 1 => 'preCheckCredentials'], 256);
        $instance->addListener('security.authentication.success', [0 => function () use ($container) {
            return ($container->privates['security.listener.user_checker.auth'] ?? $container->load('getSecurity_Listener_UserChecker_AuthService'));
        }, 1 => 'postCheckCredentials'], 256);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.user_provider'] ?? $container->load('getSecurity_Listener_UserProviderService'));
        }, 1 => 'checkPassport'], 1024);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [0 => function () use ($container) {
            return ($container->privates['Hslavich\\OneloginSamlBundle\\EventListener\\Security\\SamlLogoutListener'] ?? $container->load('getSamlLogoutListenerService'));
        }, 1 => '__invoke'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () use ($container) {
            return ($container->privates['App\\Security\\Ldap\\AppCheckLdapCredentialsListener'] ?? ($container->privates['App\\Security\\Ldap\\AppCheckLdapCredentialsListener'] = new \App\Security\Ldap\AppCheckLdapCredentialsListener($container)));
        }, 1 => 'onCheckPassport'], 144);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [0 => function () use ($container) {
            return ($container->privates['App\\Security\\LoginSuccessEventListener'] ?? $container->load('getLoginSuccessEventListenerService'));
        }, 1 => 'onLoginSuccess'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.check_authenticator_credentials'] ?? $container->load('getSecurity_Listener_CheckAuthenticatorCredentialsService'));
        }, 1 => 'checkPassport'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.password_migrating'] ?? $container->load('getSecurity_Listener_PasswordMigratingService'));
        }, 1 => 'onLoginSuccess'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.csrf_protection'] ?? $container->load('getSecurity_Listener_CsrfProtectionService'));
        }, 1 => 'checkPassport'], 512);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [0 => function () use ($container) {
            return ($container->privates['security.logout.listener.csrf_token_clearing'] ?? $container->load('getSecurity_Logout_Listener_CsrfTokenClearingService'));
        }, 1 => 'onLogout'], 0);

        return $instance;
    }
}
