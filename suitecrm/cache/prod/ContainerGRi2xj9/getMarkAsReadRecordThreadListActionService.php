<?php

namespace ContainerGRi2xj9;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMarkAsReadRecordThreadListActionService extends App_KernelProdContainer
{
    /*
     * Gets the private 'App\Process\Service\RecordThreadListActions\MarkAsReadRecordThreadListAction' shared autowired service.
     *
     * @return \App\Process\Service\RecordThreadListActions\MarkAsReadRecordThreadListAction
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 3).'/core/backend/Process/Service/ProcessHandlerInterface.php';
        include_once \dirname(__DIR__, 3).'/core/backend/Process/Service/RecordThreadListActions/MarkAsReadRecordThreadListAction.php';
        include_once \dirname(__DIR__, 3).'/core/backend/Data/Service/RecordMarkAsReadServiceInterface.php';
        include_once \dirname(__DIR__, 3).'/core/backend/Data/LegacyHandler/RecordMarkAsReadHandler.php';

        $a = ($container->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ?? ($container->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] = new \App\Engine\LegacyHandler\LegacyScopeState()));
        $b = ($container->services['session'] ?? $container->getSessionService());
        $c = ($container->privates['App\\Module\\LegacyHandler\\ModuleNameMapperHandler'] ?? $container->getModuleNameMapperHandlerService());

        return $container->privates['App\\Process\\Service\\RecordThreadListActions\\MarkAsReadRecordThreadListAction'] = new \App\Process\Service\RecordThreadListActions\MarkAsReadRecordThreadListAction(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', $a, $b, new \App\Data\LegacyHandler\RecordMarkAsReadHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', $a, $b, $c), ($container->privates['App\\Data\\LegacyHandler\\PresetDataHandlers\\AlertsDataHandler'] ?? $container->load('getAlertsDataHandlerService')), $c);
    }
}
