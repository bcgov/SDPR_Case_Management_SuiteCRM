<?php

namespace ContainerGRi2xj9;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApp_LoginRateLimiterService extends App_KernelProdContainer
{
    /*
     * Gets the private 'app.login_rate_limiter' shared service.
     *
     * @return \Symfony\Component\Security\Http\RateLimiter\DefaultLoginRateLimiter
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/RateLimiter/RequestRateLimiterInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/RateLimiter/AbstractRequestRateLimiter.php';
        include_once \dirname(__DIR__, 3).'/vendor/symfony/security-http/RateLimiter/DefaultLoginRateLimiter.php';
        include_once \dirname(__DIR__, 3).'/vendor/symfony/rate-limiter/RateLimiterFactory.php';
        include_once \dirname(__DIR__, 3).'/vendor/symfony/rate-limiter/Storage/StorageInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/symfony/rate-limiter/Storage/CacheStorage.php';
        include_once \dirname(__DIR__, 3).'/vendor/symfony/lock/LockFactory.php';
        include_once \dirname(__DIR__, 3).'/vendor/symfony/lock/PersistingStoreInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/symfony/lock/Store/StoreFactory.php';

        $a = ($container->services['cache.rate_limiter'] ?? $container->load('getCache_RateLimiterService'));
        $b = new \Symfony\Component\Lock\LockFactory(\Symfony\Component\Lock\Store\StoreFactory::createStore($container->getEnv('LOCK_DSN')));

        $c = new \Symfony\Bridge\Monolog\Logger('lock');
        $c->pushHandler(($container->privates['monolog.handler.console'] ?? $container->getMonolog_Handler_ConsoleService()));
        $c->pushHandler(($container->privates['monolog.handler.main'] ?? $container->getMonolog_Handler_MainService()));

        $b->setLogger($c);

        return $container->privates['app.login_rate_limiter'] = new \Symfony\Component\Security\Http\RateLimiter\DefaultLoginRateLimiter(new \Symfony\Component\RateLimiter\RateLimiterFactory(['policy' => 'sliding_window', 'limit' => 50, 'interval' => '30 minutes', 'id' => 'ip_login'], new \Symfony\Component\RateLimiter\Storage\CacheStorage($a), $b), new \Symfony\Component\RateLimiter\RateLimiterFactory(['policy' => 'token_bucket', 'limit' => 5, 'rate' => ['interval' => '30 minutes', 'amount' => 1], 'id' => 'username_ip_login'], new \Symfony\Component\RateLimiter\Storage\CacheStorage($a), $b));
    }
}
