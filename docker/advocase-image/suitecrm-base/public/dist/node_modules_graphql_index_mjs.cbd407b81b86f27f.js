(self.webpackChunkshell=self.webpackChunkshell||[]).push([["node_modules_graphql_index_mjs"],{9671:(Rs,Ft,ft)=>{function kt(O,W,K,x,ze,Oe,ke){try{var Se=O[Oe](ke),Ae=Se.value}catch(mn){return void K(mn)}Se.done?W(Ae):Promise.resolve(Ae).then(x,ze)}function hn(O){return function(){var W=this,K=arguments;return new Promise(function(x,ze){var Oe=O.apply(W,K);function ke(Ae){kt(Oe,x,ze,ke,Se,"next",Ae)}function Se(Ae){kt(Oe,x,ze,ke,Se,"throw",Ae)}ke(void 0)})}}ft.d(Ft,{Z:()=>hn})},5326:(Rs,Ft,ft)=>{ft.r(Ft),ft.d(Ft,{BREAK:()=>We,BreakingChangeType:()=>Q,DEFAULT_DEPRECATION_REASON:()=>Fn,DangerousChangeType:()=>De,DirectiveLocation:()=>D,ExecutableDefinitionsRule:()=>tr,FieldsOnCorrectTypeRule:()=>nr,FragmentsOnCompositeTypesRule:()=>ir,GRAPHQL_MAX_INT:()=>Yt,GRAPHQL_MIN_INT:()=>Jt,GraphQLBoolean:()=>oe,GraphQLDeprecatedDirective:()=>Ht,GraphQLDirective:()=>_e,GraphQLEnumType:()=>Ue,GraphQLError:()=>h,GraphQLFloat:()=>Xi,GraphQLID:()=>wn,GraphQLIncludeDirective:()=>Rn,GraphQLInputObjectType:()=>it,GraphQLInt:()=>Ji,GraphQLInterfaceType:()=>tt,GraphQLList:()=>Z,GraphQLNonNull:()=>w,GraphQLObjectType:()=>fe,GraphQLScalarType:()=>Ie,GraphQLSchema:()=>rt,GraphQLSkipDirective:()=>Ln,GraphQLSpecifiedByDirective:()=>kn,GraphQLString:()=>G,GraphQLUnionType:()=>nt,Kind:()=>u,KnownArgumentNamesRule:()=>rr,KnownDirectivesRule:()=>Kn,KnownFragmentNamesRule:()=>or,KnownTypeNamesRule:()=>Zn,Lexer:()=>Nn,Location:()=>Ii,LoneAnonymousOperationRule:()=>cr,LoneSchemaDefinitionRule:()=>ur,NoDeprecatedCustomRule:()=>ka,NoFragmentCyclesRule:()=>lr,NoSchemaIntrospectionCustomRule:()=>$a,NoUndefinedVariablesRule:()=>fr,NoUnusedFragmentsRule:()=>pr,NoUnusedVariablesRule:()=>dr,OperationTypeNode:()=>H,OverlappingFieldsCanBeMergedRule:()=>mr,PossibleFragmentSpreadsRule:()=>vr,PossibleTypeExtensionsRule:()=>Nr,ProvidedRequiredArgumentsRule:()=>gr,ScalarLeafsRule:()=>_r,SchemaMetaFieldDef:()=>gt,SingleFieldSubscriptionsRule:()=>Rr,Source:()=>xt,Token:()=>Tn,TokenKind:()=>m,TypeInfo:()=>Yn,TypeKind:()=>V,TypeMetaFieldDef:()=>It,TypeNameMetaFieldDef:()=>_t,UniqueArgumentDefinitionNamesRule:()=>Lr,UniqueArgumentNamesRule:()=>oi,UniqueDirectiveNamesRule:()=>Fr,UniqueDirectivesPerLocationRule:()=>ai,UniqueEnumValueNamesRule:()=>kr,UniqueFieldDefinitionNamesRule:()=>$r,UniqueFragmentNamesRule:()=>Vr,UniqueInputFieldNamesRule:()=>ci,UniqueOperationNamesRule:()=>xr,UniqueOperationTypesRule:()=>Cr,UniqueTypeNamesRule:()=>Ur,UniqueVariableNamesRule:()=>Mr,ValidationContext:()=>qr,ValuesOfCorrectTypeRule:()=>jr,VariablesAreInputTypesRule:()=>Pr,VariablesInAllowedPositionRule:()=>Gr,__Directive:()=>xn,__DirectiveLocation:()=>Cn,__EnumValue:()=>Mn,__Field:()=>Un,__InputValue:()=>Nt,__Schema:()=>Wt,__Type:()=>pe,__TypeKind:()=>jn,assertAbstractType:()=>Io,assertCompositeType:()=>go,assertDirective:()=>Ao,assertEnumType:()=>ho,assertEnumValueName:()=>Ui,assertInputObjectType:()=>mo,assertInputType:()=>yo,assertInterfaceType:()=>ji,assertLeafType:()=>No,assertListType:()=>To,assertName:()=>re,assertNamedType:()=>bo,assertNonNullType:()=>Eo,assertNullableType:()=>Pi,assertObjectType:()=>Mi,assertOutputType:()=>vo,assertScalarType:()=>fo,assertSchema:()=>Pn,assertType:()=>lo,assertUnionType:()=>po,assertValidName:()=>rc,assertValidSchema:()=>Bn,assertWrappingType:()=>_o,astFromValue:()=>je,buildASTSchema:()=>fs,buildClientSchema:()=>Ua,buildSchema:()=>ja,coerceInputValue:()=>Dr,concatAST:()=>tc,createSourceEventStream:()=>os,defaultFieldResolver:()=>li,defaultTypeResolver:()=>ns,doTypesOverlap:()=>An,execute:()=>on,executeSync:()=>zr,extendSchema:()=>Ma,findBreakingChanges:()=>sc,findDangerousChanges:()=>oc,formatError:()=>Fs,getArgumentValues:()=>rn,getDirectiveValues:()=>St,getEnterLeaveForKind:()=>Ze,getIntrospectionQuery:()=>as,getLocation:()=>Oe,getNamedType:()=>ee,getNullableType:()=>Dn,getOperationAST:()=>Va,getOperationRootType:()=>xa,getVariableValues:()=>Sr,getVisitFn:()=>ao,graphql:()=>Sa,graphqlSync:()=>Aa,introspectionFromSchema:()=>Ca,introspectionTypes:()=>bt,isAbstractType:()=>ge,isCompositeType:()=>Ne,isConstValueNode:()=>zn,isDefinitionNode:()=>jo,isDirective:()=>zt,isEnumType:()=>Y,isEqualType:()=>qt,isExecutableDefinitionNode:()=>Xn,isInputObjectType:()=>U,isInputType:()=>ne,isInterfaceType:()=>k,isIntrospectionType:()=>Qe,isLeafType:()=>ve,isListType:()=>M,isNamedType:()=>Et,isNonNullType:()=>S,isNullableType:()=>bn,isObjectType:()=>F,isOutputType:()=>xe,isRequiredArgument:()=>Ce,isRequiredInputField:()=>Qt,isScalarType:()=>se,isSchema:()=>Hi,isSelectionNode:()=>Po,isSpecifiedDirective:()=>$n,isSpecifiedScalarType:()=>Xt,isType:()=>mt,isTypeDefinitionNode:()=>st,isTypeExtensionNode:()=>Kt,isTypeNode:()=>Go,isTypeSubTypeOf:()=>Be,isTypeSystemDefinitionNode:()=>Hn,isTypeSystemExtensionNode:()=>Wn,isUnionType:()=>X,isValidNameError:()=>Ns,isValueNode:()=>er,isWrappingType:()=>Tt,lexicographicSortSchema:()=>Pa,locatedError:()=>at,parse:()=>Ct,parseConstValue:()=>Ks,parseType:()=>Zs,parseValue:()=>ki,print:()=>C,printError:()=>Ls,printIntrospectionSchema:()=>Ba,printLocation:()=>ke,printSchema:()=>Ga,printSourceLocation:()=>Se,printType:()=>hs,resolveObjMapThunk:()=>Sn,resolveReadonlyArrayThunk:()=>On,responsePathAsArray:()=>ae,separateOperations:()=>nc,specifiedDirectives:()=>Me,specifiedRules:()=>Br,specifiedScalarTypes:()=>yt,stripIgnoredCharacters:()=>ic,subscribe:()=>Ra,syntaxError:()=>J,typeFromAST:()=>ie,validate:()=>Yr,validateSchema:()=>Gn,valueFromAST:()=>be,valueFromASTUntyped:()=>Gt,version:()=>kt,versionInfo:()=>hn,visit:()=>Ke,visitInParallel:()=>_n,visitWithTypeInfo:()=>Jn});const kt="16.8.1",hn=Object.freeze({major:16,minor:8,patch:1,preReleaseTag:null});function O(e,t){if(!e)throw new Error(t)}function W(e){return"function"==typeof e?.then}function K(e){return"object"==typeof e&&null!==e}function x(e,t){if(!e)throw new Error(t??"Unexpected invariant triggered.")}const ze=/\r\n|[\n\r]/g;function Oe(e,t){let n=0,i=1;for(const r of e.body.matchAll(ze)){if("number"==typeof r.index||x(!1),r.index>=t)break;n=r.index+r[0].length,i+=1}return{line:i,column:t+1-n}}function ke(e){return Se(e.source,Oe(e.source,e.start))}function Se(e,t){const n=e.locationOffset.column-1,i="".padStart(n)+e.body,r=t.line-1,o=t.line+(e.locationOffset.line-1),c=t.column+(1===t.line?n:0),l=`${e.name}:${o}:${c}\n`,f=i.split(/\r\n|[\n\r]/g),p=f[r];if(p.length>120){const d=Math.floor(c/80),y=c%80,N=[];for(let L=0;L<p.length;L+=80)N.push(p.slice(L,L+80));return l+Ae([[`${o} |`,N[0]],...N.slice(1,d+1).map(L=>["|",L]),["|","^".padStart(y)],["|",N[d+1]]])}return l+Ae([[o-1+" |",f[r-1]],[`${o} |`,p],["|","^".padStart(c)],[`${o+1} |`,f[r+1]]])}function Ae(e){const t=e.filter(([i,r])=>void 0!==r),n=Math.max(...t.map(([i])=>i.length));return t.map(([i,r])=>i.padStart(n)+(r?" "+r:"")).join("\n")}class h extends Error{constructor(t,...n){var i,r,s;const{nodes:o,source:a,positions:c,path:l,originalError:f,extensions:p}=function mn(e){const t=e[0];return null==t||"kind"in t||"length"in t?{nodes:t,source:e[1],positions:e[2],path:e[3],originalError:e[4],extensions:e[5]}:t}(n);super(t),this.name="GraphQLError",this.path=l??void 0,this.originalError=f??void 0,this.nodes=gi(Array.isArray(o)?o:o?[o]:void 0);const d=gi(null===(i=this.nodes)||void 0===i?void 0:i.map(N=>N.loc).filter(N=>null!=N));this.source=a??(null==d||null===(r=d[0])||void 0===r?void 0:r.source),this.positions=c??d?.map(N=>N.start),this.locations=c&&a?c.map(N=>Oe(a,N)):d?.map(N=>Oe(N.source,N.start));const y=K(f?.extensions)?f?.extensions:void 0;this.extensions=null!==(s=p??y)&&void 0!==s?s:Object.create(null),Object.defineProperties(this,{message:{writable:!0,enumerable:!0},name:{enumerable:!1},nodes:{enumerable:!1},source:{enumerable:!1},positions:{enumerable:!1},originalError:{enumerable:!1}}),null!=f&&f.stack?Object.defineProperty(this,"stack",{value:f.stack,writable:!0,configurable:!0}):Error.captureStackTrace?Error.captureStackTrace(this,h):Object.defineProperty(this,"stack",{value:Error().stack,writable:!0,configurable:!0})}get[Symbol.toStringTag](){return"GraphQLError"}toString(){let t=this.message;if(this.nodes)for(const n of this.nodes)n.loc&&(t+="\n\n"+ke(n.loc));else if(this.source&&this.locations)for(const n of this.locations)t+="\n\n"+Se(this.source,n);return t}toJSON(){const t={message:this.message};return null!=this.locations&&(t.locations=this.locations),null!=this.path&&(t.path=this.path),null!=this.extensions&&Object.keys(this.extensions).length>0&&(t.extensions=this.extensions),t}}function gi(e){return void 0===e||0===e.length?void 0:e}function Ls(e){return e.toString()}function Fs(e){return e.toJSON()}function J(e,t,n){return new h(`Syntax Error: ${n}`,{source:e,positions:[t]})}class Ii{constructor(t,n,i){this.start=t.start,this.end=n.end,this.startToken=t,this.endToken=n,this.source=i}get[Symbol.toStringTag](){return"Location"}toJSON(){return{start:this.start,end:this.end}}}class Tn{constructor(t,n,i,r,s,o){this.kind=t,this.start=n,this.end=i,this.line=r,this.column=s,this.value=o,this.prev=null,this.next=null}get[Symbol.toStringTag](){return"Token"}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}}const _i={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},ks=new Set(Object.keys(_i));function En(e){const t=e?.kind;return"string"==typeof t&&ks.has(t)}var H=function(e){return e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription",e}(H||{}),D=function(e){return e.QUERY="QUERY",e.MUTATION="MUTATION",e.SUBSCRIPTION="SUBSCRIPTION",e.FIELD="FIELD",e.FRAGMENT_DEFINITION="FRAGMENT_DEFINITION",e.FRAGMENT_SPREAD="FRAGMENT_SPREAD",e.INLINE_FRAGMENT="INLINE_FRAGMENT",e.VARIABLE_DEFINITION="VARIABLE_DEFINITION",e.SCHEMA="SCHEMA",e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.FIELD_DEFINITION="FIELD_DEFINITION",e.ARGUMENT_DEFINITION="ARGUMENT_DEFINITION",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.ENUM_VALUE="ENUM_VALUE",e.INPUT_OBJECT="INPUT_OBJECT",e.INPUT_FIELD_DEFINITION="INPUT_FIELD_DEFINITION",e}(D||{}),u=function(e){return e.NAME="Name",e.DOCUMENT="Document",e.OPERATION_DEFINITION="OperationDefinition",e.VARIABLE_DEFINITION="VariableDefinition",e.SELECTION_SET="SelectionSet",e.FIELD="Field",e.ARGUMENT="Argument",e.FRAGMENT_SPREAD="FragmentSpread",e.INLINE_FRAGMENT="InlineFragment",e.FRAGMENT_DEFINITION="FragmentDefinition",e.VARIABLE="Variable",e.INT="IntValue",e.FLOAT="FloatValue",e.STRING="StringValue",e.BOOLEAN="BooleanValue",e.NULL="NullValue",e.ENUM="EnumValue",e.LIST="ListValue",e.OBJECT="ObjectValue",e.OBJECT_FIELD="ObjectField",e.DIRECTIVE="Directive",e.NAMED_TYPE="NamedType",e.LIST_TYPE="ListType",e.NON_NULL_TYPE="NonNullType",e.SCHEMA_DEFINITION="SchemaDefinition",e.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",e.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",e.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",e.FIELD_DEFINITION="FieldDefinition",e.INPUT_VALUE_DEFINITION="InputValueDefinition",e.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",e.UNION_TYPE_DEFINITION="UnionTypeDefinition",e.ENUM_TYPE_DEFINITION="EnumTypeDefinition",e.ENUM_VALUE_DEFINITION="EnumValueDefinition",e.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",e.DIRECTIVE_DEFINITION="DirectiveDefinition",e.SCHEMA_EXTENSION="SchemaExtension",e.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",e.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",e.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",e.UNION_TYPE_EXTENSION="UnionTypeExtension",e.ENUM_TYPE_EXTENSION="EnumTypeExtension",e.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension",e}(u||{});function yn(e){return 9===e||32===e}function pt(e){return e>=48&&e<=57}function bi(e){return e>=97&&e<=122||e>=65&&e<=90}function vn(e){return bi(e)||95===e}function Di(e){return bi(e)||pt(e)||95===e}function $s(e){var t;let n=Number.MAX_SAFE_INTEGER,i=null,r=-1;for(let o=0;o<e.length;++o){var s;const a=e[o],c=Vs(a);c!==a.length&&(i=null!==(s=i)&&void 0!==s?s:o,r=o,0!==o&&c<n&&(n=c))}return e.map((o,a)=>0===a?o:o.slice(n)).slice(null!==(t=i)&&void 0!==t?t:0,r+1)}function Vs(e){let t=0;for(;t<e.length&&yn(e.charCodeAt(t));)++t;return t}function xs(e){if(""===e)return!0;let t=!0,n=!1,i=!0,r=!1;for(let s=0;s<e.length;++s)switch(e.codePointAt(s)){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 11:case 12:case 14:case 15:case 13:return!1;case 10:if(t&&!r)return!1;r=!0,t=!0,n=!1;break;case 9:case 32:n||(n=t);break;default:i&&(i=n),t=!1}return!(t||i&&r)}function Oi(e,t){const n=e.replace(/"""/g,'\\"""'),i=n.split(/\r\n|[\n\r]/g),r=1===i.length,s=i.length>1&&i.slice(1).every(y=>0===y.length||yn(y.charCodeAt(0))),o=n.endsWith('\\"""'),a=e.endsWith('"')&&!o,c=e.endsWith("\\"),l=a||c,f=!(null!=t&&t.minimize)&&(!r||e.length>70||l||s||o);let p="";const d=r&&yn(e.charCodeAt(0));return(f&&!d||s)&&(p+="\n"),p+=n,(f||l)&&(p+="\n"),'"""'+p+'"""'}var m=function(e){return e.SOF="<SOF>",e.EOF="<EOF>",e.BANG="!",e.DOLLAR="$",e.AMP="&",e.PAREN_L="(",e.PAREN_R=")",e.SPREAD="...",e.COLON=":",e.EQUALS="=",e.AT="@",e.BRACKET_L="[",e.BRACKET_R="]",e.BRACE_L="{",e.PIPE="|",e.BRACE_R="}",e.NAME="Name",e.INT="Int",e.FLOAT="Float",e.STRING="String",e.BLOCK_STRING="BlockString",e.COMMENT="Comment",e}(m||{});class Nn{constructor(t){const n=new Tn(m.SOF,0,0,0,0);this.source=t,this.lastToken=n,this.token=n,this.line=1,this.lineStart=0}get[Symbol.toStringTag](){return"Lexer"}advance(){return this.lastToken=this.token,this.token=this.lookahead()}lookahead(){let t=this.token;if(t.kind!==m.EOF)do{if(t.next)t=t.next;else{const n=Cs(this,t.end);t.next=n,n.prev=t,t=n}}while(t.kind===m.COMMENT);return t}}function Si(e){return e===m.BANG||e===m.DOLLAR||e===m.AMP||e===m.PAREN_L||e===m.PAREN_R||e===m.SPREAD||e===m.COLON||e===m.EQUALS||e===m.AT||e===m.BRACKET_L||e===m.BRACKET_R||e===m.BRACE_L||e===m.PIPE||e===m.BRACE_R}function He(e){return e>=0&&e<=55295||e>=57344&&e<=1114111}function $t(e,t){return Ai(e.charCodeAt(t))&&wi(e.charCodeAt(t+1))}function Ai(e){return e>=55296&&e<=56319}function wi(e){return e>=56320&&e<=57343}function Ge(e,t){const n=e.source.body.codePointAt(t);if(void 0===n)return m.EOF;if(n>=32&&n<=126){const i=String.fromCodePoint(n);return'"'===i?"'\"'":`"${i}"`}return"U+"+n.toString(16).toUpperCase().padStart(4,"0")}function q(e,t,n,i,r){return new Tn(t,n,i,e.line,1+n-e.lineStart,r)}function Cs(e,t){const n=e.source.body,i=n.length;let r=t;for(;r<i;){const s=n.charCodeAt(r);switch(s){case 65279:case 9:case 32:case 44:++r;continue;case 10:++r,++e.line,e.lineStart=r;continue;case 13:10===n.charCodeAt(r+1)?r+=2:++r,++e.line,e.lineStart=r;continue;case 35:return Us(e,r);case 33:return q(e,m.BANG,r,r+1);case 36:return q(e,m.DOLLAR,r,r+1);case 38:return q(e,m.AMP,r,r+1);case 40:return q(e,m.PAREN_L,r,r+1);case 41:return q(e,m.PAREN_R,r,r+1);case 46:if(46===n.charCodeAt(r+1)&&46===n.charCodeAt(r+2))return q(e,m.SPREAD,r,r+3);break;case 58:return q(e,m.COLON,r,r+1);case 61:return q(e,m.EQUALS,r,r+1);case 64:return q(e,m.AT,r,r+1);case 91:return q(e,m.BRACKET_L,r,r+1);case 93:return q(e,m.BRACKET_R,r,r+1);case 123:return q(e,m.BRACE_L,r,r+1);case 124:return q(e,m.PIPE,r,r+1);case 125:return q(e,m.BRACE_R,r,r+1);case 34:return 34===n.charCodeAt(r+1)&&34===n.charCodeAt(r+2)?Qs(e,r):js(e,r)}if(pt(s)||45===s)return Ms(e,r,s);if(vn(s))return qs(e,r);throw J(e.source,r,39===s?"Unexpected single quote character ('), did you mean to use a double quote (\")?":He(s)||$t(n,r)?`Unexpected character: ${Ge(e,r)}.`:`Invalid character: ${Ge(e,r)}.`)}return q(e,m.EOF,i,i)}function Us(e,t){const n=e.source.body,i=n.length;let r=t+1;for(;r<i;){const s=n.charCodeAt(r);if(10===s||13===s)break;if(He(s))++r;else{if(!$t(n,r))break;r+=2}}return q(e,m.COMMENT,t,r,n.slice(t+1,r))}function Ms(e,t,n){const i=e.source.body;let r=t,s=n,o=!1;if(45===s&&(s=i.charCodeAt(++r)),48===s){if(s=i.charCodeAt(++r),pt(s))throw J(e.source,r,`Invalid number, unexpected digit after 0: ${Ge(e,r)}.`)}else r=gn(e,r,s),s=i.charCodeAt(r);if(46===s&&(o=!0,s=i.charCodeAt(++r),r=gn(e,r,s),s=i.charCodeAt(r)),(69===s||101===s)&&(o=!0,s=i.charCodeAt(++r),(43===s||45===s)&&(s=i.charCodeAt(++r)),r=gn(e,r,s),s=i.charCodeAt(r)),46===s||vn(s))throw J(e.source,r,`Invalid number, expected digit but got: ${Ge(e,r)}.`);return q(e,o?m.FLOAT:m.INT,t,r,i.slice(t,r))}function gn(e,t,n){if(!pt(n))throw J(e.source,t,`Invalid number, expected digit but got: ${Ge(e,t)}.`);const i=e.source.body;let r=t+1;for(;pt(i.charCodeAt(r));)++r;return r}function js(e,t){const n=e.source.body,i=n.length;let r=t+1,s=r,o="";for(;r<i;){const a=n.charCodeAt(r);if(34===a)return o+=n.slice(s,r),q(e,m.STRING,t,r+1,o);if(92!==a){if(10===a||13===a)break;if(He(a))++r;else{if(!$t(n,r))throw J(e.source,r,`Invalid character within String: ${Ge(e,r)}.`);r+=2}}else{o+=n.slice(s,r);const c=117===n.charCodeAt(r+1)?123===n.charCodeAt(r+2)?Ps(e,r):Gs(e,r):Bs(e,r);o+=c.value,r+=c.size,s=r}}throw J(e.source,r,"Unterminated string.")}function Ps(e,t){const n=e.source.body;let i=0,r=3;for(;r<12;){const s=n.charCodeAt(t+r++);if(125===s){if(r<5||!He(i))break;return{value:String.fromCodePoint(i),size:r}}if(i=i<<4|dt(s),i<0)break}throw J(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+r)}".`)}function Gs(e,t){const n=e.source.body,i=Ri(n,t+2);if(He(i))return{value:String.fromCodePoint(i),size:6};if(Ai(i)&&92===n.charCodeAt(t+6)&&117===n.charCodeAt(t+7)){const r=Ri(n,t+8);if(wi(r))return{value:String.fromCodePoint(i,r),size:12}}throw J(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+6)}".`)}function Ri(e,t){return dt(e.charCodeAt(t))<<12|dt(e.charCodeAt(t+1))<<8|dt(e.charCodeAt(t+2))<<4|dt(e.charCodeAt(t+3))}function dt(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function Bs(e,t){const n=e.source.body;switch(n.charCodeAt(t+1)){case 34:return{value:'"',size:2};case 92:return{value:"\\",size:2};case 47:return{value:"/",size:2};case 98:return{value:"\b",size:2};case 102:return{value:"\f",size:2};case 110:return{value:"\n",size:2};case 114:return{value:"\r",size:2};case 116:return{value:"\t",size:2}}throw J(e.source,t,`Invalid character escape sequence: "${n.slice(t,t+2)}".`)}function Qs(e,t){const n=e.source.body,i=n.length;let r=e.lineStart,s=t+3,o=s,a="";const c=[];for(;s<i;){const l=n.charCodeAt(s);if(34===l&&34===n.charCodeAt(s+1)&&34===n.charCodeAt(s+2)){a+=n.slice(o,s),c.push(a);const f=q(e,m.BLOCK_STRING,t,s+3,$s(c).join("\n"));return e.line+=c.length-1,e.lineStart=r,f}if(92!==l||34!==n.charCodeAt(s+1)||34!==n.charCodeAt(s+2)||34!==n.charCodeAt(s+3))if(10!==l&&13!==l)if(He(l))++s;else{if(!$t(n,s))throw J(e.source,s,`Invalid character within String: ${Ge(e,s)}.`);s+=2}else a+=n.slice(o,s),c.push(a),13===l&&10===n.charCodeAt(s+1)?s+=2:++s,a="",o=s,r=s;else a+=n.slice(o,s),o=s+1,s+=4}throw J(e.source,s,"Unterminated string.")}function qs(e,t){const n=e.source.body,i=n.length;let r=t+1;for(;r<i&&Di(n.charCodeAt(r));)++r;return q(e,m.NAME,t,r,n.slice(t,r))}const Ys=10,Li=2;function T(e){return Vt(e,[])}function Vt(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return function Js(e,t){if(null===e)return"null";if(t.includes(e))return"[Circular]";const n=[...t,e];if(function Xs(e){return"function"==typeof e.toJSON}(e)){const i=e.toJSON();if(i!==e)return"string"==typeof i?i:Vt(i,n)}else if(Array.isArray(e))return function Hs(e,t){if(0===e.length)return"[]";if(t.length>Li)return"[Array]";const n=Math.min(Ys,e.length),i=e.length-n,r=[];for(let s=0;s<n;++s)r.push(Vt(e[s],t));return 1===i?r.push("... 1 more item"):i>1&&r.push(`... ${i} more items`),"["+r.join(", ")+"]"}(e,n);return function zs(e,t){const n=Object.entries(e);return 0===n.length?"{}":t.length>Li?"["+function Ws(e){const t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===t&&"function"==typeof e.constructor){const n=e.constructor.name;if("string"==typeof n&&""!==n)return n}return t}(e)+"]":"{ "+n.map(([r,s])=>r+": "+Vt(s,t)).join(", ")+" }"}(e,n)}(e,t);default:return String(e)}}const he=globalThis.process&&"production"===globalThis.process.env.NODE_ENV?function(t,n){return t instanceof n}:function(t,n){if(t instanceof n)return!0;if("object"==typeof t&&null!==t){var i;const r=n.prototype[Symbol.toStringTag];if(r===(Symbol.toStringTag in t?t[Symbol.toStringTag]:null===(i=t.constructor)||void 0===i?void 0:i.name)){const o=T(t);throw new Error(`Cannot use ${r} "${o}" from another module or realm.\n\nEnsure that there is only one instance of "graphql" in the node_modules\ndirectory. If different versions of "graphql" are the dependencies of other\nrelied on modules, use "resolutions" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate "graphql" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`)}}return!1};class xt{constructor(t,n="GraphQL request",i={line:1,column:1}){"string"==typeof t||O(!1,`Body must be a string. Received: ${T(t)}.`),this.body=t,this.name=n,this.locationOffset=i,this.locationOffset.line>0||O(!1,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||O(!1,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}}function Fi(e){return he(e,xt)}function Ct(e,t){return new Ut(e,t).parseDocument()}function ki(e,t){const n=new Ut(e,t);n.expectToken(m.SOF);const i=n.parseValueLiteral(!1);return n.expectToken(m.EOF),i}function Ks(e,t){const n=new Ut(e,t);n.expectToken(m.SOF);const i=n.parseConstValueLiteral();return n.expectToken(m.EOF),i}function Zs(e,t){const n=new Ut(e,t);n.expectToken(m.SOF);const i=n.parseTypeReference();return n.expectToken(m.EOF),i}class Ut{constructor(t,n={}){const i=Fi(t)?t:new xt(t);this._lexer=new Nn(i),this._options=n,this._tokenCounter=0}parseName(){const t=this.expectToken(m.NAME);return this.node(t,{kind:u.NAME,value:t.value})}parseDocument(){return this.node(this._lexer.token,{kind:u.DOCUMENT,definitions:this.many(m.SOF,this.parseDefinition,m.EOF)})}parseDefinition(){if(this.peek(m.BRACE_L))return this.parseOperationDefinition();const t=this.peekDescription(),n=t?this._lexer.lookahead():this._lexer.token;if(n.kind===m.NAME){switch(n.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}if(t)throw J(this._lexer.source,this._lexer.token.start,"Unexpected description, descriptions are supported only on type definitions.");switch(n.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"extend":return this.parseTypeSystemExtension()}}throw this.unexpected(n)}parseOperationDefinition(){const t=this._lexer.token;if(this.peek(m.BRACE_L))return this.node(t,{kind:u.OPERATION_DEFINITION,operation:H.QUERY,name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet()});const n=this.parseOperationType();let i;return this.peek(m.NAME)&&(i=this.parseName()),this.node(t,{kind:u.OPERATION_DEFINITION,operation:n,name:i,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseOperationType(){const t=this.expectToken(m.NAME);switch(t.value){case"query":return H.QUERY;case"mutation":return H.MUTATION;case"subscription":return H.SUBSCRIPTION}throw this.unexpected(t)}parseVariableDefinitions(){return this.optionalMany(m.PAREN_L,this.parseVariableDefinition,m.PAREN_R)}parseVariableDefinition(){return this.node(this._lexer.token,{kind:u.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(m.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(m.EQUALS)?this.parseConstValueLiteral():void 0,directives:this.parseConstDirectives()})}parseVariable(){const t=this._lexer.token;return this.expectToken(m.DOLLAR),this.node(t,{kind:u.VARIABLE,name:this.parseName()})}parseSelectionSet(){return this.node(this._lexer.token,{kind:u.SELECTION_SET,selections:this.many(m.BRACE_L,this.parseSelection,m.BRACE_R)})}parseSelection(){return this.peek(m.SPREAD)?this.parseFragment():this.parseField()}parseField(){const t=this._lexer.token,n=this.parseName();let i,r;return this.expectOptionalToken(m.COLON)?(i=n,r=this.parseName()):r=n,this.node(t,{kind:u.FIELD,alias:i,name:r,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(m.BRACE_L)?this.parseSelectionSet():void 0})}parseArguments(t){return this.optionalMany(m.PAREN_L,t?this.parseConstArgument:this.parseArgument,m.PAREN_R)}parseArgument(t=!1){const n=this._lexer.token,i=this.parseName();return this.expectToken(m.COLON),this.node(n,{kind:u.ARGUMENT,name:i,value:this.parseValueLiteral(t)})}parseConstArgument(){return this.parseArgument(!0)}parseFragment(){const t=this._lexer.token;this.expectToken(m.SPREAD);const n=this.expectOptionalKeyword("on");return!n&&this.peek(m.NAME)?this.node(t,{kind:u.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1)}):this.node(t,{kind:u.INLINE_FRAGMENT,typeCondition:n?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentDefinition(){const t=this._lexer.token;return this.expectKeyword("fragment"),this.node(t,!0===this._options.allowLegacyFragmentVariables?{kind:u.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()}:{kind:u.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentName(){if("on"===this._lexer.token.value)throw this.unexpected();return this.parseName()}parseValueLiteral(t){const n=this._lexer.token;switch(n.kind){case m.BRACKET_L:return this.parseList(t);case m.BRACE_L:return this.parseObject(t);case m.INT:return this.advanceLexer(),this.node(n,{kind:u.INT,value:n.value});case m.FLOAT:return this.advanceLexer(),this.node(n,{kind:u.FLOAT,value:n.value});case m.STRING:case m.BLOCK_STRING:return this.parseStringLiteral();case m.NAME:switch(this.advanceLexer(),n.value){case"true":return this.node(n,{kind:u.BOOLEAN,value:!0});case"false":return this.node(n,{kind:u.BOOLEAN,value:!1});case"null":return this.node(n,{kind:u.NULL});default:return this.node(n,{kind:u.ENUM,value:n.value})}case m.DOLLAR:if(t){if(this.expectToken(m.DOLLAR),this._lexer.token.kind===m.NAME)throw J(this._lexer.source,n.start,`Unexpected variable "$${this._lexer.token.value}" in constant value.`);throw this.unexpected(n)}return this.parseVariable();default:throw this.unexpected()}}parseConstValueLiteral(){return this.parseValueLiteral(!0)}parseStringLiteral(){const t=this._lexer.token;return this.advanceLexer(),this.node(t,{kind:u.STRING,value:t.value,block:t.kind===m.BLOCK_STRING})}parseList(t){return this.node(this._lexer.token,{kind:u.LIST,values:this.any(m.BRACKET_L,()=>this.parseValueLiteral(t),m.BRACKET_R)})}parseObject(t){return this.node(this._lexer.token,{kind:u.OBJECT,fields:this.any(m.BRACE_L,()=>this.parseObjectField(t),m.BRACE_R)})}parseObjectField(t){const n=this._lexer.token,i=this.parseName();return this.expectToken(m.COLON),this.node(n,{kind:u.OBJECT_FIELD,name:i,value:this.parseValueLiteral(t)})}parseDirectives(t){const n=[];for(;this.peek(m.AT);)n.push(this.parseDirective(t));return n}parseConstDirectives(){return this.parseDirectives(!0)}parseDirective(t){const n=this._lexer.token;return this.expectToken(m.AT),this.node(n,{kind:u.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(t)})}parseTypeReference(){const t=this._lexer.token;let n;if(this.expectOptionalToken(m.BRACKET_L)){const i=this.parseTypeReference();this.expectToken(m.BRACKET_R),n=this.node(t,{kind:u.LIST_TYPE,type:i})}else n=this.parseNamedType();return this.expectOptionalToken(m.BANG)?this.node(t,{kind:u.NON_NULL_TYPE,type:n}):n}parseNamedType(){return this.node(this._lexer.token,{kind:u.NAMED_TYPE,name:this.parseName()})}peekDescription(){return this.peek(m.STRING)||this.peek(m.BLOCK_STRING)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("schema");const i=this.parseConstDirectives(),r=this.many(m.BRACE_L,this.parseOperationTypeDefinition,m.BRACE_R);return this.node(t,{kind:u.SCHEMA_DEFINITION,description:n,directives:i,operationTypes:r})}parseOperationTypeDefinition(){const t=this._lexer.token,n=this.parseOperationType();this.expectToken(m.COLON);const i=this.parseNamedType();return this.node(t,{kind:u.OPERATION_TYPE_DEFINITION,operation:n,type:i})}parseScalarTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("scalar");const i=this.parseName(),r=this.parseConstDirectives();return this.node(t,{kind:u.SCALAR_TYPE_DEFINITION,description:n,name:i,directives:r})}parseObjectTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("type");const i=this.parseName(),r=this.parseImplementsInterfaces(),s=this.parseConstDirectives(),o=this.parseFieldsDefinition();return this.node(t,{kind:u.OBJECT_TYPE_DEFINITION,description:n,name:i,interfaces:r,directives:s,fields:o})}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(m.AMP,this.parseNamedType):[]}parseFieldsDefinition(){return this.optionalMany(m.BRACE_L,this.parseFieldDefinition,m.BRACE_R)}parseFieldDefinition(){const t=this._lexer.token,n=this.parseDescription(),i=this.parseName(),r=this.parseArgumentDefs();this.expectToken(m.COLON);const s=this.parseTypeReference(),o=this.parseConstDirectives();return this.node(t,{kind:u.FIELD_DEFINITION,description:n,name:i,arguments:r,type:s,directives:o})}parseArgumentDefs(){return this.optionalMany(m.PAREN_L,this.parseInputValueDef,m.PAREN_R)}parseInputValueDef(){const t=this._lexer.token,n=this.parseDescription(),i=this.parseName();this.expectToken(m.COLON);const r=this.parseTypeReference();let s;this.expectOptionalToken(m.EQUALS)&&(s=this.parseConstValueLiteral());const o=this.parseConstDirectives();return this.node(t,{kind:u.INPUT_VALUE_DEFINITION,description:n,name:i,type:r,defaultValue:s,directives:o})}parseInterfaceTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("interface");const i=this.parseName(),r=this.parseImplementsInterfaces(),s=this.parseConstDirectives(),o=this.parseFieldsDefinition();return this.node(t,{kind:u.INTERFACE_TYPE_DEFINITION,description:n,name:i,interfaces:r,directives:s,fields:o})}parseUnionTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("union");const i=this.parseName(),r=this.parseConstDirectives(),s=this.parseUnionMemberTypes();return this.node(t,{kind:u.UNION_TYPE_DEFINITION,description:n,name:i,directives:r,types:s})}parseUnionMemberTypes(){return this.expectOptionalToken(m.EQUALS)?this.delimitedMany(m.PIPE,this.parseNamedType):[]}parseEnumTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("enum");const i=this.parseName(),r=this.parseConstDirectives(),s=this.parseEnumValuesDefinition();return this.node(t,{kind:u.ENUM_TYPE_DEFINITION,description:n,name:i,directives:r,values:s})}parseEnumValuesDefinition(){return this.optionalMany(m.BRACE_L,this.parseEnumValueDefinition,m.BRACE_R)}parseEnumValueDefinition(){const t=this._lexer.token,n=this.parseDescription(),i=this.parseEnumValueName(),r=this.parseConstDirectives();return this.node(t,{kind:u.ENUM_VALUE_DEFINITION,description:n,name:i,directives:r})}parseEnumValueName(){if("true"===this._lexer.token.value||"false"===this._lexer.token.value||"null"===this._lexer.token.value)throw J(this._lexer.source,this._lexer.token.start,`${Mt(this._lexer.token)} is reserved and cannot be used for an enum value.`);return this.parseName()}parseInputObjectTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("input");const i=this.parseName(),r=this.parseConstDirectives(),s=this.parseInputFieldsDefinition();return this.node(t,{kind:u.INPUT_OBJECT_TYPE_DEFINITION,description:n,name:i,directives:r,fields:s})}parseInputFieldsDefinition(){return this.optionalMany(m.BRACE_L,this.parseInputValueDef,m.BRACE_R)}parseTypeSystemExtension(){const t=this._lexer.lookahead();if(t.kind===m.NAME)switch(t.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(t)}parseSchemaExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");const n=this.parseConstDirectives(),i=this.optionalMany(m.BRACE_L,this.parseOperationTypeDefinition,m.BRACE_R);if(0===n.length&&0===i.length)throw this.unexpected();return this.node(t,{kind:u.SCHEMA_EXTENSION,directives:n,operationTypes:i})}parseScalarTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");const n=this.parseName(),i=this.parseConstDirectives();if(0===i.length)throw this.unexpected();return this.node(t,{kind:u.SCALAR_TYPE_EXTENSION,name:n,directives:i})}parseObjectTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");const n=this.parseName(),i=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),s=this.parseFieldsDefinition();if(0===i.length&&0===r.length&&0===s.length)throw this.unexpected();return this.node(t,{kind:u.OBJECT_TYPE_EXTENSION,name:n,interfaces:i,directives:r,fields:s})}parseInterfaceTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");const n=this.parseName(),i=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),s=this.parseFieldsDefinition();if(0===i.length&&0===r.length&&0===s.length)throw this.unexpected();return this.node(t,{kind:u.INTERFACE_TYPE_EXTENSION,name:n,interfaces:i,directives:r,fields:s})}parseUnionTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");const n=this.parseName(),i=this.parseConstDirectives(),r=this.parseUnionMemberTypes();if(0===i.length&&0===r.length)throw this.unexpected();return this.node(t,{kind:u.UNION_TYPE_EXTENSION,name:n,directives:i,types:r})}parseEnumTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");const n=this.parseName(),i=this.parseConstDirectives(),r=this.parseEnumValuesDefinition();if(0===i.length&&0===r.length)throw this.unexpected();return this.node(t,{kind:u.ENUM_TYPE_EXTENSION,name:n,directives:i,values:r})}parseInputObjectTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");const n=this.parseName(),i=this.parseConstDirectives(),r=this.parseInputFieldsDefinition();if(0===i.length&&0===r.length)throw this.unexpected();return this.node(t,{kind:u.INPUT_OBJECT_TYPE_EXTENSION,name:n,directives:i,fields:r})}parseDirectiveDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("directive"),this.expectToken(m.AT);const i=this.parseName(),r=this.parseArgumentDefs(),s=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");const o=this.parseDirectiveLocations();return this.node(t,{kind:u.DIRECTIVE_DEFINITION,description:n,name:i,arguments:r,repeatable:s,locations:o})}parseDirectiveLocations(){return this.delimitedMany(m.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){const t=this._lexer.token,n=this.parseName();if(Object.prototype.hasOwnProperty.call(D,n.value))return n;throw this.unexpected(t)}node(t,n){return!0!==this._options.noLocation&&(n.loc=new Ii(t,this._lexer.lastToken,this._lexer.source)),n}peek(t){return this._lexer.token.kind===t}expectToken(t){const n=this._lexer.token;if(n.kind===t)return this.advanceLexer(),n;throw J(this._lexer.source,n.start,`Expected ${$i(t)}, found ${Mt(n)}.`)}expectOptionalToken(t){return this._lexer.token.kind===t&&(this.advanceLexer(),!0)}expectKeyword(t){const n=this._lexer.token;if(n.kind!==m.NAME||n.value!==t)throw J(this._lexer.source,n.start,`Expected "${t}", found ${Mt(n)}.`);this.advanceLexer()}expectOptionalKeyword(t){const n=this._lexer.token;return n.kind===m.NAME&&n.value===t&&(this.advanceLexer(),!0)}unexpected(t){const n=t??this._lexer.token;return J(this._lexer.source,n.start,`Unexpected ${Mt(n)}.`)}any(t,n,i){this.expectToken(t);const r=[];for(;!this.expectOptionalToken(i);)r.push(n.call(this));return r}optionalMany(t,n,i){if(this.expectOptionalToken(t)){const r=[];do{r.push(n.call(this))}while(!this.expectOptionalToken(i));return r}return[]}many(t,n,i){this.expectToken(t);const r=[];do{r.push(n.call(this))}while(!this.expectOptionalToken(i));return r}delimitedMany(t,n){this.expectOptionalToken(t);const i=[];do{i.push(n.call(this))}while(this.expectOptionalToken(t));return i}advanceLexer(){const{maxTokens:t}=this._options,n=this._lexer.advance();if(void 0!==t&&n.kind!==m.EOF&&(++this._tokenCounter,this._tokenCounter>t))throw J(this._lexer.source,n.start,`Document contains more that ${t} tokens. Parsing aborted.`)}}function Mt(e){const t=e.value;return $i(e.kind)+(null!=t?` "${t}"`:"")}function $i(e){return Si(e)?`"${e}"`:e}const eo=5;function we(e,t){const[n,i]=t?[e,t]:[void 0,e];let r=" Did you mean ";n&&(r+=n+" ");const s=i.map(c=>`"${c}"`);switch(s.length){case 0:return"";case 1:return r+s[0]+"?";case 2:return r+s[0]+" or "+s[1]+"?"}const o=s.slice(0,eo),a=o.pop();return r+o.join(", ")+", or "+a+"?"}function Vi(e){return e}function Re(e,t){const n=Object.create(null);for(const i of e)n[t(i)]=i;return n}function $e(e,t,n){const i=Object.create(null);for(const r of e)i[t(r)]=n(r);return i}function Le(e,t){const n=Object.create(null);for(const i of Object.keys(e))n[i]=t(e[i],i);return n}function ht(e,t){let n=0,i=0;for(;n<e.length&&i<t.length;){let r=e.charCodeAt(n),s=t.charCodeAt(i);if(jt(r)&&jt(s)){let o=0;do{++n,o=10*o+r-In,r=e.charCodeAt(n)}while(jt(r)&&o>0);let a=0;do{++i,a=10*a+s-In,s=t.charCodeAt(i)}while(jt(s)&&a>0);if(o<a)return-1;if(o>a)return 1}else{if(r<s)return-1;if(r>s)return 1;++n,++i}}return e.length-t.length}const In=48,to=57;function jt(e){return!isNaN(e)&&In<=e&&e<=to}function Ve(e,t){const n=Object.create(null),i=new no(e),r=Math.floor(.4*e.length)+1;for(const s of t){const o=i.measure(s,r);void 0!==o&&(n[s]=o)}return Object.keys(n).sort((s,o)=>{const a=n[s]-n[o];return 0!==a?a:ht(s,o)})}class no{constructor(t){this._input=t,this._inputLowerCase=t.toLowerCase(),this._inputArray=xi(this._inputLowerCase),this._rows=[new Array(t.length+1).fill(0),new Array(t.length+1).fill(0),new Array(t.length+1).fill(0)]}measure(t,n){if(this._input===t)return 0;const i=t.toLowerCase();if(this._inputLowerCase===i)return 1;let r=xi(i),s=this._inputArray;if(r.length<s.length){const f=r;r=s,s=f}const o=r.length,a=s.length;if(o-a>n)return;const c=this._rows;for(let f=0;f<=a;f++)c[0][f]=f;for(let f=1;f<=o;f++){const p=c[(f-1)%3],d=c[f%3];let y=d[0]=f;for(let N=1;N<=a;N++){let $=Math.min(p[N]+1,d[N-1]+1,p[N-1]+(r[f-1]===s[N-1]?0:1));f>1&&N>1&&r[f-1]===s[N-2]&&r[f-2]===s[N-1]&&($=Math.min($,c[(f-2)%3][N-2]+1)),$<y&&(y=$),d[N]=$}if(y>n)return}const l=c[o%3][a];return l<=n?l:void 0}}function xi(e){const t=e.length,n=new Array(t);for(let i=0;i<t;++i)n[i]=e.charCodeAt(i);return n}function le(e){if(null==e)return Object.create(null);if(null===Object.getPrototypeOf(e))return e;const t=Object.create(null);for(const[n,i]of Object.entries(e))t[n]=i;return t}const ro=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function so(e){return oo[e.charCodeAt(0)]}const oo=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"],We=Object.freeze({});function Ke(e,t,n=_i){const i=new Map;for(const B of Object.values(u))i.set(B,Ze(t,B));let r,f,p,s=Array.isArray(e),o=[e],a=-1,c=[],l=e;const d=[],y=[];do{a++;const B=a===o.length,Ee=B&&0!==c.length;if(B){if(f=0===y.length?void 0:d[d.length-1],l=p,p=y.pop(),Ee)if(s){l=l.slice();let ce=0;for(const[Xe,Pe]of c){const ct=Xe-ce;null===Pe?(l.splice(ct,1),ce++):l[ct]=Pe}}else{l=Object.defineProperties({},Object.getOwnPropertyDescriptors(l));for(const[ce,Xe]of c)l[ce]=Xe}a=r.index,o=r.keys,c=r.edits,s=r.inArray,r=r.prev}else if(p){if(f=s?a:o[a],l=p[f],null==l)continue;d.push(f)}let te;if(!Array.isArray(l)){var N,L;En(l)||O(!1,`Invalid AST Node: ${T(l)}.`);const ce=B?null===(N=i.get(l.kind))||void 0===N?void 0:N.leave:null===(L=i.get(l.kind))||void 0===L?void 0:L.enter;if(te=ce?.call(t,l,f,p,d,y),te===We)break;if(!1===te){if(!B){d.pop();continue}}else if(void 0!==te&&(c.push([f,te]),!B)){if(!En(te)){d.pop();continue}l=te}}var $;void 0===te&&Ee&&c.push([f,l]),B?d.pop():(r={inArray:s,index:a,keys:o,edits:c,prev:r},s=Array.isArray(l),o=s?l:null!==($=n[l.kind])&&void 0!==$?$:[],a=-1,c=[],p&&y.push(p),p=l)}while(void 0!==r);return 0!==c.length?c[c.length-1][1]:e}function _n(e){const t=new Array(e.length).fill(null),n=Object.create(null);for(const i of Object.values(u)){let r=!1;const s=new Array(e.length).fill(void 0),o=new Array(e.length).fill(void 0);for(let c=0;c<e.length;++c){const{enter:l,leave:f}=Ze(e[c],i);r||(r=null!=l||null!=f),s[c]=l,o[c]=f}r&&(n[i]={enter(...c){const l=c[0];for(let p=0;p<e.length;p++)if(null===t[p]){var f;const d=null===(f=s[p])||void 0===f?void 0:f.apply(e[p],c);if(!1===d)t[p]=l;else if(d===We)t[p]=We;else if(void 0!==d)return d}},leave(...c){const l=c[0];for(let p=0;p<e.length;p++)if(null===t[p]){var f;const d=null===(f=o[p])||void 0===f?void 0:f.apply(e[p],c);if(d===We)t[p]=We;else if(void 0!==d&&!1!==d)return d}else t[p]===l&&(t[p]=null)}})}return n}function Ze(e,t){const n=e[t];return"object"==typeof n?n:"function"==typeof n?{enter:n,leave:void 0}:{enter:e.enter,leave:e.leave}}function ao(e,t,n){const{enter:i,leave:r}=Ze(e,t);return n?r:i}function C(e){return Ke(e,uo)}const uo={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>I(e.definitions,"\n\n")},OperationDefinition:{leave(e){const t=R("(",I(e.variableDefinitions,", "),")"),n=I([e.operation,I([e.name,t]),I(e.directives," ")]," ");return("query"===n?"":n+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:t,defaultValue:n,directives:i})=>e+": "+t+R(" = ",n)+R(" ",I(i," "))},SelectionSet:{leave:({selections:e})=>me(e)},Field:{leave({alias:e,name:t,arguments:n,directives:i,selectionSet:r}){const s=R("",e,": ")+t;let o=s+R("(",I(n,", "),")");return o.length>80&&(o=s+R("(\n",Pt(I(n,"\n")),"\n)")),I([o,I(i," "),r]," ")}},Argument:{leave:({name:e,value:t})=>e+": "+t},FragmentSpread:{leave:({name:e,directives:t})=>"..."+e+R(" ",I(t," "))},InlineFragment:{leave:({typeCondition:e,directives:t,selectionSet:n})=>I(["...",R("on ",e),I(t," "),n]," ")},FragmentDefinition:{leave:({name:e,typeCondition:t,variableDefinitions:n,directives:i,selectionSet:r})=>`fragment ${e}${R("(",I(n,", "),")")} on ${t} ${R("",I(i," ")," ")}`+r},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:t})=>t?Oi(e):function io(e){return`"${e.replace(ro,so)}"`}(e)},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+I(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{"+I(e,", ")+"}"},ObjectField:{leave:({name:e,value:t})=>e+": "+t},Directive:{leave:({name:e,arguments:t})=>"@"+e+R("(",I(t,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:t,operationTypes:n})=>R("",e,"\n")+I(["schema",I(t," "),me(n)]," ")},OperationTypeDefinition:{leave:({operation:e,type:t})=>e+": "+t},ScalarTypeDefinition:{leave:({description:e,name:t,directives:n})=>R("",e,"\n")+I(["scalar",t,I(n," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:i,fields:r})=>R("",e,"\n")+I(["type",t,R("implements ",I(n," & ")),I(i," "),me(r)]," ")},FieldDefinition:{leave:({description:e,name:t,arguments:n,type:i,directives:r})=>R("",e,"\n")+t+(Ci(n)?R("(\n",Pt(I(n,"\n")),"\n)"):R("(",I(n,", "),")"))+": "+i+R(" ",I(r," "))},InputValueDefinition:{leave:({description:e,name:t,type:n,defaultValue:i,directives:r})=>R("",e,"\n")+I([t+": "+n,R("= ",i),I(r," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:i,fields:r})=>R("",e,"\n")+I(["interface",t,R("implements ",I(n," & ")),I(i," "),me(r)]," ")},UnionTypeDefinition:{leave:({description:e,name:t,directives:n,types:i})=>R("",e,"\n")+I(["union",t,I(n," "),R("= ",I(i," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:t,directives:n,values:i})=>R("",e,"\n")+I(["enum",t,I(n," "),me(i)]," ")},EnumValueDefinition:{leave:({description:e,name:t,directives:n})=>R("",e,"\n")+I([t,I(n," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:t,directives:n,fields:i})=>R("",e,"\n")+I(["input",t,I(n," "),me(i)]," ")},DirectiveDefinition:{leave:({description:e,name:t,arguments:n,repeatable:i,locations:r})=>R("",e,"\n")+"directive @"+t+(Ci(n)?R("(\n",Pt(I(n,"\n")),"\n)"):R("(",I(n,", "),")"))+(i?" repeatable":"")+" on "+I(r," | ")},SchemaExtension:{leave:({directives:e,operationTypes:t})=>I(["extend schema",I(e," "),me(t)]," ")},ScalarTypeExtension:{leave:({name:e,directives:t})=>I(["extend scalar",e,I(t," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:i})=>I(["extend type",e,R("implements ",I(t," & ")),I(n," "),me(i)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:i})=>I(["extend interface",e,R("implements ",I(t," & ")),I(n," "),me(i)]," ")},UnionTypeExtension:{leave:({name:e,directives:t,types:n})=>I(["extend union",e,I(t," "),R("= ",I(n," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:t,values:n})=>I(["extend enum",e,I(t," "),me(n)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:t,fields:n})=>I(["extend input",e,I(t," "),me(n)]," ")}};function I(e,t=""){var n;return null!==(n=e?.filter(i=>i).join(t))&&void 0!==n?n:""}function me(e){return R("{\n",Pt(I(e,"\n")),"\n}")}function R(e,t,n=""){return null!=t&&""!==t?e+t+n:""}function Pt(e){return R("  ",e.replace(/\n/g,"\n  "))}function Ci(e){var t;return null!==(t=e?.some(n=>n.includes("\n")))&&void 0!==t&&t}function Gt(e,t){switch(e.kind){case u.NULL:return null;case u.INT:return parseInt(e.value,10);case u.FLOAT:return parseFloat(e.value);case u.STRING:case u.ENUM:case u.BOOLEAN:return e.value;case u.LIST:return e.values.map(n=>Gt(n,t));case u.OBJECT:return $e(e.fields,n=>n.name.value,n=>Gt(n.value,t));case u.VARIABLE:return t?.[e.name.value]}}function re(e){if(null!=e||O(!1,"Must provide name."),"string"==typeof e||O(!1,"Expected name to be a string."),0===e.length)throw new h("Expected name to be a non-empty string.");for(let t=1;t<e.length;++t)if(!Di(e.charCodeAt(t)))throw new h(`Names must only contain [_a-zA-Z0-9] but "${e}" does not.`);if(!vn(e.charCodeAt(0)))throw new h(`Names must start with [_a-zA-Z] but "${e}" does not.`);return e}function Ui(e){if("true"===e||"false"===e||"null"===e)throw new h(`Enum values cannot be named: ${e}`);return re(e)}function mt(e){return se(e)||F(e)||k(e)||X(e)||Y(e)||U(e)||M(e)||S(e)}function lo(e){if(!mt(e))throw new Error(`Expected ${T(e)} to be a GraphQL type.`);return e}function se(e){return he(e,Ie)}function fo(e){if(!se(e))throw new Error(`Expected ${T(e)} to be a GraphQL Scalar type.`);return e}function F(e){return he(e,fe)}function Mi(e){if(!F(e))throw new Error(`Expected ${T(e)} to be a GraphQL Object type.`);return e}function k(e){return he(e,tt)}function ji(e){if(!k(e))throw new Error(`Expected ${T(e)} to be a GraphQL Interface type.`);return e}function X(e){return he(e,nt)}function po(e){if(!X(e))throw new Error(`Expected ${T(e)} to be a GraphQL Union type.`);return e}function Y(e){return he(e,Ue)}function ho(e){if(!Y(e))throw new Error(`Expected ${T(e)} to be a GraphQL Enum type.`);return e}function U(e){return he(e,it)}function mo(e){if(!U(e))throw new Error(`Expected ${T(e)} to be a GraphQL Input Object type.`);return e}function M(e){return he(e,Z)}function To(e){if(!M(e))throw new Error(`Expected ${T(e)} to be a GraphQL List type.`);return e}function S(e){return he(e,w)}function Eo(e){if(!S(e))throw new Error(`Expected ${T(e)} to be a GraphQL Non-Null type.`);return e}function ne(e){return se(e)||Y(e)||U(e)||Tt(e)&&ne(e.ofType)}function yo(e){if(!ne(e))throw new Error(`Expected ${T(e)} to be a GraphQL input type.`);return e}function xe(e){return se(e)||F(e)||k(e)||X(e)||Y(e)||Tt(e)&&xe(e.ofType)}function vo(e){if(!xe(e))throw new Error(`Expected ${T(e)} to be a GraphQL output type.`);return e}function ve(e){return se(e)||Y(e)}function No(e){if(!ve(e))throw new Error(`Expected ${T(e)} to be a GraphQL leaf type.`);return e}function Ne(e){return F(e)||k(e)||X(e)}function go(e){if(!Ne(e))throw new Error(`Expected ${T(e)} to be a GraphQL composite type.`);return e}function ge(e){return k(e)||X(e)}function Io(e){if(!ge(e))throw new Error(`Expected ${T(e)} to be a GraphQL abstract type.`);return e}class Z{constructor(t){mt(t)||O(!1,`Expected ${T(t)} to be a GraphQL type.`),this.ofType=t}get[Symbol.toStringTag](){return"GraphQLList"}toString(){return"["+String(this.ofType)+"]"}toJSON(){return this.toString()}}class w{constructor(t){bn(t)||O(!1,`Expected ${T(t)} to be a GraphQL nullable type.`),this.ofType=t}get[Symbol.toStringTag](){return"GraphQLNonNull"}toString(){return String(this.ofType)+"!"}toJSON(){return this.toString()}}function Tt(e){return M(e)||S(e)}function _o(e){if(!Tt(e))throw new Error(`Expected ${T(e)} to be a GraphQL wrapping type.`);return e}function bn(e){return mt(e)&&!S(e)}function Pi(e){if(!bn(e))throw new Error(`Expected ${T(e)} to be a GraphQL nullable type.`);return e}function Dn(e){if(e)return S(e)?e.ofType:e}function Et(e){return se(e)||F(e)||k(e)||X(e)||Y(e)||U(e)}function bo(e){if(!Et(e))throw new Error(`Expected ${T(e)} to be a GraphQL named type.`);return e}function ee(e){if(e){let t=e;for(;Tt(t);)t=t.ofType;return t}}function On(e){return"function"==typeof e?e():e}function Sn(e){return"function"==typeof e?e():e}class Ie{constructor(t){var n,i,r,s;const o=null!==(n=t.parseValue)&&void 0!==n?n:Vi;this.name=re(t.name),this.description=t.description,this.specifiedByURL=t.specifiedByURL,this.serialize=null!==(i=t.serialize)&&void 0!==i?i:Vi,this.parseValue=o,this.parseLiteral=null!==(r=t.parseLiteral)&&void 0!==r?r:(a,c)=>o(Gt(a,c)),this.extensions=le(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=null!==(s=t.extensionASTNodes)&&void 0!==s?s:[],null==t.specifiedByURL||"string"==typeof t.specifiedByURL||O(!1,`${this.name} must provide "specifiedByURL" as a string, but got: ${T(t.specifiedByURL)}.`),null==t.serialize||"function"==typeof t.serialize||O(!1,`${this.name} must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.`),t.parseLiteral&&("function"==typeof t.parseValue&&"function"==typeof t.parseLiteral||O(!1,`${this.name} must provide both "parseValue" and "parseLiteral" functions.`))}get[Symbol.toStringTag](){return"GraphQLScalarType"}toConfig(){return{name:this.name,description:this.description,specifiedByURL:this.specifiedByURL,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class fe{constructor(t){var n;this.name=re(t.name),this.description=t.description,this.isTypeOf=t.isTypeOf,this.extensions=le(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=null!==(n=t.extensionASTNodes)&&void 0!==n?n:[],this._fields=()=>Bi(t),this._interfaces=()=>Gi(t),null==t.isTypeOf||"function"==typeof t.isTypeOf||O(!1,`${this.name} must provide "isTypeOf" as a function, but got: ${T(t.isTypeOf)}.`)}get[Symbol.toStringTag](){return"GraphQLObjectType"}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}getInterfaces(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:qi(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function Gi(e){var t;const n=On(null!==(t=e.interfaces)&&void 0!==t?t:[]);return Array.isArray(n)||O(!1,`${e.name} interfaces must be an Array or a function which returns an Array.`),n}function Bi(e){const t=Sn(e.fields);return et(t)||O(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),Le(t,(n,i)=>{var r;et(n)||O(!1,`${e.name}.${i} field config must be an object.`),null==n.resolve||"function"==typeof n.resolve||O(!1,`${e.name}.${i} field resolver must be a function if provided, but got: ${T(n.resolve)}.`);const s=null!==(r=n.args)&&void 0!==r?r:{};return et(s)||O(!1,`${e.name}.${i} args must be an object with argument names as keys.`),{name:re(i),description:n.description,type:n.type,args:Qi(s),resolve:n.resolve,subscribe:n.subscribe,deprecationReason:n.deprecationReason,extensions:le(n.extensions),astNode:n.astNode}})}function Qi(e){return Object.entries(e).map(([t,n])=>({name:re(t),description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:le(n.extensions),astNode:n.astNode}))}function et(e){return K(e)&&!Array.isArray(e)}function qi(e){return Le(e,t=>({description:t.description,type:t.type,args:Yi(t.args),resolve:t.resolve,subscribe:t.subscribe,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}))}function Yi(e){return $e(e,t=>t.name,t=>({description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}))}function Ce(e){return S(e.type)&&void 0===e.defaultValue}class tt{constructor(t){var n;this.name=re(t.name),this.description=t.description,this.resolveType=t.resolveType,this.extensions=le(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=null!==(n=t.extensionASTNodes)&&void 0!==n?n:[],this._fields=Bi.bind(void 0,t),this._interfaces=Gi.bind(void 0,t),null==t.resolveType||"function"==typeof t.resolveType||O(!1,`${this.name} must provide "resolveType" as a function, but got: ${T(t.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLInterfaceType"}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}getInterfaces(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:qi(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class nt{constructor(t){var n;this.name=re(t.name),this.description=t.description,this.resolveType=t.resolveType,this.extensions=le(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=null!==(n=t.extensionASTNodes)&&void 0!==n?n:[],this._types=Do.bind(void 0,t),null==t.resolveType||"function"==typeof t.resolveType||O(!1,`${this.name} must provide "resolveType" as a function, but got: ${T(t.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLUnionType"}getTypes(){return"function"==typeof this._types&&(this._types=this._types()),this._types}toConfig(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function Do(e){const t=On(e.types);return Array.isArray(t)||O(!1,`Must provide Array of types or a function which returns such an array for Union ${e.name}.`),t}class Ue{constructor(t){var n;this.name=re(t.name),this.description=t.description,this.extensions=le(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=null!==(n=t.extensionASTNodes)&&void 0!==n?n:[],this._values=function Oo(e,t){return et(t)||O(!1,`${e} values must be an object with value names as keys.`),Object.entries(t).map(([n,i])=>(et(i)||O(!1,`${e}.${n} must refer to an object with a "value" key representing an internal value but got: ${T(i)}.`),{name:Ui(n),description:i.description,value:void 0!==i.value?i.value:n,deprecationReason:i.deprecationReason,extensions:le(i.extensions),astNode:i.astNode}))}(this.name,t.values),this._valueLookup=new Map(this._values.map(i=>[i.value,i])),this._nameLookup=Re(this._values,i=>i.name)}get[Symbol.toStringTag](){return"GraphQLEnumType"}getValues(){return this._values}getValue(t){return this._nameLookup[t]}serialize(t){const n=this._valueLookup.get(t);if(void 0===n)throw new h(`Enum "${this.name}" cannot represent value: ${T(t)}`);return n.name}parseValue(t){if("string"!=typeof t){const i=T(t);throw new h(`Enum "${this.name}" cannot represent non-string value: ${i}.`+Bt(this,i))}const n=this.getValue(t);if(null==n)throw new h(`Value "${t}" does not exist in "${this.name}" enum.`+Bt(this,t));return n.value}parseLiteral(t,n){if(t.kind!==u.ENUM){const r=C(t);throw new h(`Enum "${this.name}" cannot represent non-enum value: ${r}.`+Bt(this,r),{nodes:t})}const i=this.getValue(t.value);if(null==i){const r=C(t);throw new h(`Value "${r}" does not exist in "${this.name}" enum.`+Bt(this,r),{nodes:t})}return i.value}toConfig(){const t=$e(this.getValues(),n=>n.name,n=>({description:n.description,value:n.value,deprecationReason:n.deprecationReason,extensions:n.extensions,astNode:n.astNode}));return{name:this.name,description:this.description,values:t,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function Bt(e,t){return we("the enum value",Ve(t,e.getValues().map(r=>r.name)))}class it{constructor(t){var n;this.name=re(t.name),this.description=t.description,this.extensions=le(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=null!==(n=t.extensionASTNodes)&&void 0!==n?n:[],this._fields=So.bind(void 0,t)}get[Symbol.toStringTag](){return"GraphQLInputObjectType"}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}toConfig(){const t=Le(this.getFields(),n=>({description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:n.extensions,astNode:n.astNode}));return{name:this.name,description:this.description,fields:t,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function So(e){const t=Sn(e.fields);return et(t)||O(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),Le(t,(n,i)=>(!("resolve"in n)||O(!1,`${e.name}.${i} field has a resolve property, but Input Types cannot define resolvers.`),{name:re(i),description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:le(n.extensions),astNode:n.astNode}))}function Qt(e){return S(e.type)&&void 0===e.defaultValue}function qt(e,t){return e===t||!!(S(e)&&S(t)||M(e)&&M(t))&&qt(e.ofType,t.ofType)}function Be(e,t,n){return t===n||(S(n)?!!S(t)&&Be(e,t.ofType,n.ofType):S(t)?Be(e,t.ofType,n):M(n)?!!M(t)&&Be(e,t.ofType,n.ofType):!M(t)&&ge(n)&&(k(t)||F(t))&&e.isSubType(n,t))}function An(e,t,n){return t===n||(ge(t)?ge(n)?e.getPossibleTypes(t).some(i=>e.isSubType(n,i)):e.isSubType(t,n):!!ge(n)&&e.isSubType(n,t))}const Yt=2147483647,Jt=-2147483648,Ji=new Ie({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",serialize(e){const t=vt(e);if("boolean"==typeof t)return t?1:0;let n=t;if("string"==typeof t&&""!==t&&(n=Number(t)),"number"!=typeof n||!Number.isInteger(n))throw new h(`Int cannot represent non-integer value: ${T(t)}`);if(n>Yt||n<Jt)throw new h("Int cannot represent non 32-bit signed integer value: "+T(t));return n},parseValue(e){if("number"!=typeof e||!Number.isInteger(e))throw new h(`Int cannot represent non-integer value: ${T(e)}`);if(e>Yt||e<Jt)throw new h(`Int cannot represent non 32-bit signed integer value: ${e}`);return e},parseLiteral(e){if(e.kind!==u.INT)throw new h(`Int cannot represent non-integer value: ${C(e)}`,{nodes:e});const t=parseInt(e.value,10);if(t>Yt||t<Jt)throw new h(`Int cannot represent non 32-bit signed integer value: ${e.value}`,{nodes:e});return t}}),Xi=new Ie({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",serialize(e){const t=vt(e);if("boolean"==typeof t)return t?1:0;let n=t;if("string"==typeof t&&""!==t&&(n=Number(t)),"number"!=typeof n||!Number.isFinite(n))throw new h(`Float cannot represent non numeric value: ${T(t)}`);return n},parseValue(e){if("number"!=typeof e||!Number.isFinite(e))throw new h(`Float cannot represent non numeric value: ${T(e)}`);return e},parseLiteral(e){if(e.kind!==u.FLOAT&&e.kind!==u.INT)throw new h(`Float cannot represent non numeric value: ${C(e)}`,e);return parseFloat(e.value)}}),G=new Ie({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",serialize(e){const t=vt(e);if("string"==typeof t)return t;if("boolean"==typeof t)return t?"true":"false";if("number"==typeof t&&Number.isFinite(t))return t.toString();throw new h(`String cannot represent value: ${T(e)}`)},parseValue(e){if("string"!=typeof e)throw new h(`String cannot represent a non string value: ${T(e)}`);return e},parseLiteral(e){if(e.kind!==u.STRING)throw new h(`String cannot represent a non string value: ${C(e)}`,{nodes:e});return e.value}}),oe=new Ie({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",serialize(e){const t=vt(e);if("boolean"==typeof t)return t;if(Number.isFinite(t))return 0!==t;throw new h(`Boolean cannot represent a non boolean value: ${T(t)}`)},parseValue(e){if("boolean"!=typeof e)throw new h(`Boolean cannot represent a non boolean value: ${T(e)}`);return e},parseLiteral(e){if(e.kind!==u.BOOLEAN)throw new h(`Boolean cannot represent a non boolean value: ${C(e)}`,{nodes:e});return e.value}}),wn=new Ie({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',serialize(e){const t=vt(e);if("string"==typeof t)return t;if(Number.isInteger(t))return String(t);throw new h(`ID cannot represent value: ${T(e)}`)},parseValue(e){if("string"==typeof e)return e;if("number"==typeof e&&Number.isInteger(e))return e.toString();throw new h(`ID cannot represent value: ${T(e)}`)},parseLiteral(e){if(e.kind!==u.STRING&&e.kind!==u.INT)throw new h("ID cannot represent a non-string and non-integer value: "+C(e),{nodes:e});return e.value}}),yt=Object.freeze([G,Ji,Xi,oe,wn]);function Xt(e){return yt.some(({name:t})=>e.name===t)}function vt(e){if(K(e)){if("function"==typeof e.valueOf){const t=e.valueOf();if(!K(t))return t}if("function"==typeof e.toJSON)return e.toJSON()}return e}function zt(e){return he(e,_e)}function Ao(e){if(!zt(e))throw new Error(`Expected ${T(e)} to be a GraphQL directive.`);return e}class _e{constructor(t){var n,i;this.name=re(t.name),this.description=t.description,this.locations=t.locations,this.isRepeatable=null!==(n=t.isRepeatable)&&void 0!==n&&n,this.extensions=le(t.extensions),this.astNode=t.astNode,Array.isArray(t.locations)||O(!1,`@${t.name} locations must be an Array.`);const r=null!==(i=t.args)&&void 0!==i?i:{};K(r)&&!Array.isArray(r)||O(!1,`@${t.name} args must be an object with argument names as keys.`),this.args=Qi(r)}get[Symbol.toStringTag](){return"GraphQLDirective"}toConfig(){return{name:this.name,description:this.description,locations:this.locations,args:Yi(this.args),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}}toString(){return"@"+this.name}toJSON(){return this.toString()}}const Rn=new _e({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[D.FIELD,D.FRAGMENT_SPREAD,D.INLINE_FRAGMENT],args:{if:{type:new w(oe),description:"Included when true."}}}),Ln=new _e({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[D.FIELD,D.FRAGMENT_SPREAD,D.INLINE_FRAGMENT],args:{if:{type:new w(oe),description:"Skipped when true."}}}),Fn="No longer supported",Ht=new _e({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[D.FIELD_DEFINITION,D.ARGUMENT_DEFINITION,D.INPUT_FIELD_DEFINITION,D.ENUM_VALUE],args:{reason:{type:G,description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",defaultValue:Fn}}}),kn=new _e({name:"specifiedBy",description:"Exposes a URL that specifies the behavior of this scalar.",locations:[D.SCALAR],args:{url:{type:new w(G),description:"The URL that specifies the behavior of this scalar."}}}),Me=Object.freeze([Rn,Ln,Ht,kn]);function $n(e){return Me.some(({name:t})=>t===e.name)}function Vn(e){return"object"==typeof e&&"function"==typeof e?.[Symbol.iterator]}function je(e,t){if(S(t)){const n=je(e,t.ofType);return n?.kind===u.NULL?null:n}if(null===e)return{kind:u.NULL};if(void 0===e)return null;if(M(t)){const n=t.ofType;if(Vn(e)){const i=[];for(const r of e){const s=je(r,n);null!=s&&i.push(s)}return{kind:u.LIST,values:i}}return je(e,n)}if(U(t)){if(!K(e))return null;const n=[];for(const i of Object.values(t.getFields())){const r=je(e[i.name],i.type);r&&n.push({kind:u.OBJECT_FIELD,name:{kind:u.NAME,value:i.name},value:r})}return{kind:u.OBJECT,fields:n}}if(ve(t)){const n=t.serialize(e);if(null==n)return null;if("boolean"==typeof n)return{kind:u.BOOLEAN,value:n};if("number"==typeof n&&Number.isFinite(n)){const i=String(n);return zi.test(i)?{kind:u.INT,value:i}:{kind:u.FLOAT,value:i}}if("string"==typeof n)return Y(t)?{kind:u.ENUM,value:n}:t===wn&&zi.test(n)?{kind:u.INT,value:n}:{kind:u.STRING,value:n};throw new TypeError(`Cannot convert value to AST: ${T(n)}.`)}x(!1,"Unexpected input type: "+T(t))}const zi=/^-?(?:0|[1-9][0-9]*)$/,Wt=new fe({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:()=>({description:{type:G,resolve:e=>e.description},types:{description:"A list of all types supported by this server.",type:new w(new Z(new w(pe))),resolve:e=>Object.values(e.getTypeMap())},queryType:{description:"The type that query operations will be rooted at.",type:new w(pe),resolve:e=>e.getQueryType()},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:pe,resolve:e=>e.getMutationType()},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:pe,resolve:e=>e.getSubscriptionType()},directives:{description:"A list of all directives supported by this server.",type:new w(new Z(new w(xn))),resolve:e=>e.getDirectives()}})}),xn=new fe({name:"__Directive",description:"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",fields:()=>({name:{type:new w(G),resolve:e=>e.name},description:{type:G,resolve:e=>e.description},isRepeatable:{type:new w(oe),resolve:e=>e.isRepeatable},locations:{type:new w(new Z(new w(Cn))),resolve:e=>e.locations},args:{type:new w(new Z(new w(Nt))),args:{includeDeprecated:{type:oe,defaultValue:!1}},resolve:(e,{includeDeprecated:t})=>t?e.args:e.args.filter(n=>null==n.deprecationReason)}})}),Cn=new Ue({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:D.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:D.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:D.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:D.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:D.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:D.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:D.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:D.VARIABLE_DEFINITION,description:"Location adjacent to a variable definition."},SCHEMA:{value:D.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:D.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:D.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:D.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:D.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:D.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:D.UNION,description:"Location adjacent to a union definition."},ENUM:{value:D.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:D.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:D.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:D.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}}),pe=new fe({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:()=>({kind:{type:new w(jn),resolve:e=>se(e)?V.SCALAR:F(e)?V.OBJECT:k(e)?V.INTERFACE:X(e)?V.UNION:Y(e)?V.ENUM:U(e)?V.INPUT_OBJECT:M(e)?V.LIST:S(e)?V.NON_NULL:void x(!1,`Unexpected type: "${T(e)}".`)},name:{type:G,resolve:e=>"name"in e?e.name:void 0},description:{type:G,resolve:e=>"description"in e?e.description:void 0},specifiedByURL:{type:G,resolve:e=>"specifiedByURL"in e?e.specifiedByURL:void 0},fields:{type:new Z(new w(Un)),args:{includeDeprecated:{type:oe,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(F(e)||k(e)){const n=Object.values(e.getFields());return t?n:n.filter(i=>null==i.deprecationReason)}}},interfaces:{type:new Z(new w(pe)),resolve(e){if(F(e)||k(e))return e.getInterfaces()}},possibleTypes:{type:new Z(new w(pe)),resolve(e,t,n,{schema:i}){if(ge(e))return i.getPossibleTypes(e)}},enumValues:{type:new Z(new w(Mn)),args:{includeDeprecated:{type:oe,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(Y(e)){const n=e.getValues();return t?n:n.filter(i=>null==i.deprecationReason)}}},inputFields:{type:new Z(new w(Nt)),args:{includeDeprecated:{type:oe,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(U(e)){const n=Object.values(e.getFields());return t?n:n.filter(i=>null==i.deprecationReason)}}},ofType:{type:pe,resolve:e=>"ofType"in e?e.ofType:void 0}})}),Un=new fe({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:()=>({name:{type:new w(G),resolve:e=>e.name},description:{type:G,resolve:e=>e.description},args:{type:new w(new Z(new w(Nt))),args:{includeDeprecated:{type:oe,defaultValue:!1}},resolve:(e,{includeDeprecated:t})=>t?e.args:e.args.filter(n=>null==n.deprecationReason)},type:{type:new w(pe),resolve:e=>e.type},isDeprecated:{type:new w(oe),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:G,resolve:e=>e.deprecationReason}})}),Nt=new fe({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:()=>({name:{type:new w(G),resolve:e=>e.name},description:{type:G,resolve:e=>e.description},type:{type:new w(pe),resolve:e=>e.type},defaultValue:{type:G,description:"A GraphQL-formatted string representing the default value for this input value.",resolve(e){const{type:t,defaultValue:n}=e,i=je(n,t);return i?C(i):null}},isDeprecated:{type:new w(oe),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:G,resolve:e=>e.deprecationReason}})}),Mn=new fe({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:()=>({name:{type:new w(G),resolve:e=>e.name},description:{type:G,resolve:e=>e.description},isDeprecated:{type:new w(oe),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:G,resolve:e=>e.deprecationReason}})});var V=function(e){return e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.INPUT_OBJECT="INPUT_OBJECT",e.LIST="LIST",e.NON_NULL="NON_NULL",e}(V||{});const jn=new Ue({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:V.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:V.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:V.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:V.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:V.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:V.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:V.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:V.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}}),gt={name:"__schema",type:new w(Wt),description:"Access the current type schema of this server.",args:[],resolve:(e,t,n,{schema:i})=>i,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},It={name:"__type",type:pe,description:"Request the type information of a single type.",args:[{name:"name",description:void 0,type:new w(G),defaultValue:void 0,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0}],resolve:(e,{name:t},n,{schema:i})=>i.getType(t),deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},_t={name:"__typename",type:new w(G),description:"The name of the current Object type at runtime.",args:[],resolve:(e,t,n,{parentType:i})=>i.name,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},bt=Object.freeze([Wt,xn,Cn,pe,Un,Nt,Mn,jn]);function Qe(e){return bt.some(({name:t})=>e.name===t)}function Hi(e){return he(e,rt)}function Pn(e){if(!Hi(e))throw new Error(`Expected ${T(e)} to be a GraphQL schema.`);return e}class rt{constructor(t){var n,i;this.__validationErrors=!0===t.assumeValid?[]:void 0,K(t)||O(!1,"Must provide configuration object."),!t.types||Array.isArray(t.types)||O(!1,`"types" must be Array if provided but got: ${T(t.types)}.`),!t.directives||Array.isArray(t.directives)||O(!1,`"directives" must be Array if provided but got: ${T(t.directives)}.`),this.description=t.description,this.extensions=le(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=null!==(n=t.extensionASTNodes)&&void 0!==n?n:[],this._queryType=t.query,this._mutationType=t.mutation,this._subscriptionType=t.subscription,this._directives=null!==(i=t.directives)&&void 0!==i?i:Me;const r=new Set(t.types);if(null!=t.types)for(const s of t.types)r.delete(s),Te(s,r);null!=this._queryType&&Te(this._queryType,r),null!=this._mutationType&&Te(this._mutationType,r),null!=this._subscriptionType&&Te(this._subscriptionType,r);for(const s of this._directives)if(zt(s))for(const o of s.args)Te(o.type,r);Te(Wt,r),this._typeMap=Object.create(null),this._subTypeMap=Object.create(null),this._implementationsMap=Object.create(null);for(const s of r){if(null==s)continue;const o=s.name;if(o||O(!1,"One of the provided types for building the Schema is missing a name."),void 0!==this._typeMap[o])throw new Error(`Schema must contain uniquely named types but contains multiple types named "${o}".`);if(this._typeMap[o]=s,k(s)){for(const a of s.getInterfaces())if(k(a)){let c=this._implementationsMap[a.name];void 0===c&&(c=this._implementationsMap[a.name]={objects:[],interfaces:[]}),c.interfaces.push(s)}}else if(F(s))for(const a of s.getInterfaces())if(k(a)){let c=this._implementationsMap[a.name];void 0===c&&(c=this._implementationsMap[a.name]={objects:[],interfaces:[]}),c.objects.push(s)}}}get[Symbol.toStringTag](){return"GraphQLSchema"}getQueryType(){return this._queryType}getMutationType(){return this._mutationType}getSubscriptionType(){return this._subscriptionType}getRootType(t){switch(t){case H.QUERY:return this.getQueryType();case H.MUTATION:return this.getMutationType();case H.SUBSCRIPTION:return this.getSubscriptionType()}}getTypeMap(){return this._typeMap}getType(t){return this.getTypeMap()[t]}getPossibleTypes(t){return X(t)?t.getTypes():this.getImplementations(t).objects}getImplementations(t){return this._implementationsMap[t.name]??{objects:[],interfaces:[]}}isSubType(t,n){let i=this._subTypeMap[t.name];if(void 0===i){if(i=Object.create(null),X(t))for(const r of t.getTypes())i[r.name]=!0;else{const r=this.getImplementations(t);for(const s of r.objects)i[s.name]=!0;for(const s of r.interfaces)i[s.name]=!0}this._subTypeMap[t.name]=i}return void 0!==i[n.name]}getDirectives(){return this._directives}getDirective(t){return this.getDirectives().find(n=>n.name===t)}toConfig(){return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:Object.values(this.getTypeMap()),directives:this.getDirectives(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,assumeValid:void 0!==this.__validationErrors}}}function Te(e,t){const n=ee(e);if(!t.has(n))if(t.add(n),X(n))for(const i of n.getTypes())Te(i,t);else if(F(n)||k(n)){for(const i of n.getInterfaces())Te(i,t);for(const i of Object.values(n.getFields())){Te(i.type,t);for(const r of i.args)Te(r.type,t)}}else if(U(n))for(const i of Object.values(n.getFields()))Te(i.type,t);return t}function Gn(e){if(Pn(e),e.__validationErrors)return e.__validationErrors;const t=new wo(e);(function Ro(e){const t=e.schema,n=t.getQueryType();if(n){if(!F(n)){var i;e.reportError(`Query root type must be Object type, it cannot be ${T(n)}.`,null!==(i=Qn(t,H.QUERY))&&void 0!==i?i:n.astNode)}}else e.reportError("Query root type must be provided.",t.astNode);const r=t.getMutationType();var s;r&&!F(r)&&e.reportError(`Mutation root type must be Object type if provided, it cannot be ${T(r)}.`,null!==(s=Qn(t,H.MUTATION))&&void 0!==s?s:r.astNode);const o=t.getSubscriptionType();var a;o&&!F(o)&&e.reportError(`Subscription root type must be Object type if provided, it cannot be ${T(o)}.`,null!==(a=Qn(t,H.SUBSCRIPTION))&&void 0!==a?a:o.astNode)})(t),function Lo(e){for(const n of e.schema.getDirectives())if(zt(n)){qe(e,n);for(const i of n.args)if(qe(e,i),ne(i.type)||e.reportError(`The type of @${n.name}(${i.name}:) must be Input Type but got: ${T(i.type)}.`,i.astNode),Ce(i)&&null!=i.deprecationReason){var t;e.reportError(`Required argument @${n.name}(${i.name}:) cannot be deprecated.`,[qn(i.astNode),null===(t=i.astNode)||void 0===t?void 0:t.type])}}else e.reportError(`Expected directive but got: ${T(n)}.`,n?.astNode)}(t),function Fo(e){const t=function Uo(e){const t=Object.create(null),n=[],i=Object.create(null);return function r(s){if(t[s.name])return;t[s.name]=!0,i[s.name]=n.length;const o=Object.values(s.getFields());for(const a of o)if(S(a.type)&&U(a.type.ofType)){const c=a.type.ofType,l=i[c.name];if(n.push(a),void 0===l)r(c);else{const f=n.slice(l),p=f.map(d=>d.name).join(".");e.reportError(`Cannot reference Input Object "${c.name}" within itself through a series of non-null fields: "${p}".`,f.map(d=>d.astNode))}n.pop()}i[s.name]=void 0}}(e),n=e.schema.getTypeMap();for(const i of Object.values(n))Et(i)?(Qe(i)||qe(e,i),F(i)||k(i)?(Wi(e,i),Ki(e,i)):X(i)?Vo(e,i):Y(i)?xo(e,i):U(i)&&(Co(e,i),t(i))):e.reportError(`Expected GraphQL named type but got: ${T(i)}.`,i.astNode)}(t);const n=t.getErrors();return e.__validationErrors=n,n}function Bn(e){const t=Gn(e);if(0!==t.length)throw new Error(t.map(n=>n.message).join("\n\n"))}class wo{constructor(t){this._errors=[],this.schema=t}reportError(t,n){const i=Array.isArray(n)?n.filter(Boolean):n;this._errors.push(new h(t,{nodes:i}))}getErrors(){return this._errors}}function Qn(e,t){var n;return null===(n=[e.astNode,...e.extensionASTNodes].flatMap(i=>{var r;return null!==(r=i?.operationTypes)&&void 0!==r?r:[]}).find(i=>i.operation===t))||void 0===n?void 0:n.type}function qe(e,t){t.name.startsWith("__")&&e.reportError(`Name "${t.name}" must not begin with "__", which is reserved by GraphQL introspection.`,t.astNode)}function Wi(e,t){const n=Object.values(t.getFields());0===n.length&&e.reportError(`Type ${t.name} must define one or more fields.`,[t.astNode,...t.extensionASTNodes]);for(const o of n){var i;qe(e,o),xe(o.type)||e.reportError(`The type of ${t.name}.${o.name} must be Output Type but got: ${T(o.type)}.`,null===(i=o.astNode)||void 0===i?void 0:i.type);for(const a of o.args){const c=a.name;var r,s;qe(e,a),ne(a.type)||e.reportError(`The type of ${t.name}.${o.name}(${c}:) must be Input Type but got: ${T(a.type)}.`,null===(r=a.astNode)||void 0===r?void 0:r.type),Ce(a)&&null!=a.deprecationReason&&e.reportError(`Required argument ${t.name}.${o.name}(${c}:) cannot be deprecated.`,[qn(a.astNode),null===(s=a.astNode)||void 0===s?void 0:s.type])}}}function Ki(e,t){const n=Object.create(null);for(const i of t.getInterfaces())k(i)?t!==i?n[i.name]?e.reportError(`Type ${t.name} can only implement ${i.name} once.`,Dt(t,i)):(n[i.name]=!0,$o(e,t,i),ko(e,t,i)):e.reportError(`Type ${t.name} cannot implement itself because it would create a circular reference.`,Dt(t,i)):e.reportError(`Type ${T(t)} must only implement Interface types, it cannot implement ${T(i)}.`,Dt(t,i))}function ko(e,t,n){const i=t.getFields();for(const c of Object.values(n.getFields())){const l=c.name,f=i[l];if(f){var r,s;Be(e.schema,f.type,c.type)||e.reportError(`Interface field ${n.name}.${l} expects type ${T(c.type)} but ${t.name}.${l} is type ${T(f.type)}.`,[null===(r=c.astNode)||void 0===r?void 0:r.type,null===(s=f.astNode)||void 0===s?void 0:s.type]);for(const p of c.args){const d=p.name,y=f.args.find(N=>N.name===d);var o,a;y?qt(p.type,y.type)||e.reportError(`Interface field argument ${n.name}.${l}(${d}:) expects type ${T(p.type)} but ${t.name}.${l}(${d}:) is type ${T(y.type)}.`,[null===(o=p.astNode)||void 0===o?void 0:o.type,null===(a=y.astNode)||void 0===a?void 0:a.type]):e.reportError(`Interface field argument ${n.name}.${l}(${d}:) expected but ${t.name}.${l} does not provide it.`,[p.astNode,f.astNode])}for(const p of f.args){const d=p.name;!c.args.find(N=>N.name===d)&&Ce(p)&&e.reportError(`Object field ${t.name}.${l} includes required argument ${d} that is missing from the Interface field ${n.name}.${l}.`,[p.astNode,c.astNode])}}else e.reportError(`Interface field ${n.name}.${l} expected but ${t.name} does not provide it.`,[c.astNode,t.astNode,...t.extensionASTNodes])}}function $o(e,t,n){const i=t.getInterfaces();for(const r of n.getInterfaces())i.includes(r)||e.reportError(r===t?`Type ${t.name} cannot implement ${n.name} because it would create a circular reference.`:`Type ${t.name} must implement ${r.name} because it is implemented by ${n.name}.`,[...Dt(n,r),...Dt(t,n)])}function Vo(e,t){const n=t.getTypes();0===n.length&&e.reportError(`Union type ${t.name} must define one or more member types.`,[t.astNode,...t.extensionASTNodes]);const i=Object.create(null);for(const r of n)i[r.name]?e.reportError(`Union type ${t.name} can only include type ${r.name} once.`,Zi(t,r.name)):(i[r.name]=!0,F(r)||e.reportError(`Union type ${t.name} can only include Object types, it cannot include ${T(r)}.`,Zi(t,String(r))))}function xo(e,t){const n=t.getValues();0===n.length&&e.reportError(`Enum type ${t.name} must define one or more values.`,[t.astNode,...t.extensionASTNodes]);for(const i of n)qe(e,i)}function Co(e,t){const n=Object.values(t.getFields());0===n.length&&e.reportError(`Input Object type ${t.name} must define one or more fields.`,[t.astNode,...t.extensionASTNodes]);for(const s of n){var i,r;qe(e,s),ne(s.type)||e.reportError(`The type of ${t.name}.${s.name} must be Input Type but got: ${T(s.type)}.`,null===(i=s.astNode)||void 0===i?void 0:i.type),Qt(s)&&null!=s.deprecationReason&&e.reportError(`Required input field ${t.name}.${s.name} cannot be deprecated.`,[qn(s.astNode),null===(r=s.astNode)||void 0===r?void 0:r.type])}}function Dt(e,t){const{astNode:n,extensionASTNodes:i}=e;return(null!=n?[n,...i]:i).flatMap(s=>{var o;return null!==(o=s.interfaces)&&void 0!==o?o:[]}).filter(s=>s.name.value===t.name)}function Zi(e,t){const{astNode:n,extensionASTNodes:i}=e;return(null!=n?[n,...i]:i).flatMap(s=>{var o;return null!==(o=s.types)&&void 0!==o?o:[]}).filter(s=>s.name.value===t)}function qn(e){var t;return null==e||null===(t=e.directives)||void 0===t?void 0:t.find(n=>n.name.value===Ht.name)}function ie(e,t){switch(t.kind){case u.LIST_TYPE:{const n=ie(e,t.type);return n&&new Z(n)}case u.NON_NULL_TYPE:{const n=ie(e,t.type);return n&&new w(n)}case u.NAMED_TYPE:return e.getType(t.name.value)}}class Yn{constructor(t,n,i){this._schema=t,this._typeStack=[],this._parentTypeStack=[],this._inputTypeStack=[],this._fieldDefStack=[],this._defaultValueStack=[],this._directive=null,this._argument=null,this._enumValue=null,this._getFieldDef=i??Mo,n&&(ne(n)&&this._inputTypeStack.push(n),Ne(n)&&this._parentTypeStack.push(n),xe(n)&&this._typeStack.push(n))}get[Symbol.toStringTag](){return"TypeInfo"}getType(){if(this._typeStack.length>0)return this._typeStack[this._typeStack.length-1]}getParentType(){if(this._parentTypeStack.length>0)return this._parentTypeStack[this._parentTypeStack.length-1]}getInputType(){if(this._inputTypeStack.length>0)return this._inputTypeStack[this._inputTypeStack.length-1]}getParentInputType(){if(this._inputTypeStack.length>1)return this._inputTypeStack[this._inputTypeStack.length-2]}getFieldDef(){if(this._fieldDefStack.length>0)return this._fieldDefStack[this._fieldDefStack.length-1]}getDefaultValue(){if(this._defaultValueStack.length>0)return this._defaultValueStack[this._defaultValueStack.length-1]}getDirective(){return this._directive}getArgument(){return this._argument}getEnumValue(){return this._enumValue}enter(t){const n=this._schema;switch(t.kind){case u.SELECTION_SET:{const r=ee(this.getType());this._parentTypeStack.push(Ne(r)?r:void 0);break}case u.FIELD:{const r=this.getParentType();let s,o;r&&(s=this._getFieldDef(n,r,t),s&&(o=s.type)),this._fieldDefStack.push(s),this._typeStack.push(xe(o)?o:void 0);break}case u.DIRECTIVE:this._directive=n.getDirective(t.name.value);break;case u.OPERATION_DEFINITION:{const r=n.getRootType(t.operation);this._typeStack.push(F(r)?r:void 0);break}case u.INLINE_FRAGMENT:case u.FRAGMENT_DEFINITION:{const r=t.typeCondition,s=r?ie(n,r):ee(this.getType());this._typeStack.push(xe(s)?s:void 0);break}case u.VARIABLE_DEFINITION:{const r=ie(n,t.type);this._inputTypeStack.push(ne(r)?r:void 0);break}case u.ARGUMENT:{var i;let r,s;const o=null!==(i=this.getDirective())&&void 0!==i?i:this.getFieldDef();o&&(r=o.args.find(a=>a.name===t.name.value),r&&(s=r.type)),this._argument=r,this._defaultValueStack.push(r?r.defaultValue:void 0),this._inputTypeStack.push(ne(s)?s:void 0);break}case u.LIST:{const r=Dn(this.getInputType()),s=M(r)?r.ofType:r;this._defaultValueStack.push(void 0),this._inputTypeStack.push(ne(s)?s:void 0);break}case u.OBJECT_FIELD:{const r=ee(this.getInputType());let s,o;U(r)&&(o=r.getFields()[t.name.value],o&&(s=o.type)),this._defaultValueStack.push(o?o.defaultValue:void 0),this._inputTypeStack.push(ne(s)?s:void 0);break}case u.ENUM:{const r=ee(this.getInputType());let s;Y(r)&&(s=r.getValue(t.value)),this._enumValue=s;break}}}leave(t){switch(t.kind){case u.SELECTION_SET:this._parentTypeStack.pop();break;case u.FIELD:this._fieldDefStack.pop(),this._typeStack.pop();break;case u.DIRECTIVE:this._directive=null;break;case u.OPERATION_DEFINITION:case u.INLINE_FRAGMENT:case u.FRAGMENT_DEFINITION:this._typeStack.pop();break;case u.VARIABLE_DEFINITION:this._inputTypeStack.pop();break;case u.ARGUMENT:this._argument=null,this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case u.LIST:case u.OBJECT_FIELD:this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case u.ENUM:this._enumValue=null}}}function Mo(e,t,n){const i=n.name.value;return i===gt.name&&e.getQueryType()===t?gt:i===It.name&&e.getQueryType()===t?It:i===_t.name&&Ne(t)?_t:F(t)||k(t)?t.getFields()[i]:void 0}function Jn(e,t){return{enter(...n){const i=n[0];e.enter(i);const r=Ze(t,i.kind).enter;if(r){const s=r.apply(t,n);return void 0!==s&&(e.leave(i),En(s)&&e.enter(s)),s}},leave(...n){const i=n[0],r=Ze(t,i.kind).leave;let s;return r&&(s=r.apply(t,n)),e.leave(i),s}}}function jo(e){return Xn(e)||Hn(e)||Wn(e)}function Xn(e){return e.kind===u.OPERATION_DEFINITION||e.kind===u.FRAGMENT_DEFINITION}function Po(e){return e.kind===u.FIELD||e.kind===u.FRAGMENT_SPREAD||e.kind===u.INLINE_FRAGMENT}function er(e){return e.kind===u.VARIABLE||e.kind===u.INT||e.kind===u.FLOAT||e.kind===u.STRING||e.kind===u.BOOLEAN||e.kind===u.NULL||e.kind===u.ENUM||e.kind===u.LIST||e.kind===u.OBJECT}function zn(e){return er(e)&&(e.kind===u.LIST?e.values.some(zn):e.kind===u.OBJECT?e.fields.some(t=>zn(t.value)):e.kind!==u.VARIABLE)}function Go(e){return e.kind===u.NAMED_TYPE||e.kind===u.LIST_TYPE||e.kind===u.NON_NULL_TYPE}function Hn(e){return e.kind===u.SCHEMA_DEFINITION||st(e)||e.kind===u.DIRECTIVE_DEFINITION}function st(e){return e.kind===u.SCALAR_TYPE_DEFINITION||e.kind===u.OBJECT_TYPE_DEFINITION||e.kind===u.INTERFACE_TYPE_DEFINITION||e.kind===u.UNION_TYPE_DEFINITION||e.kind===u.ENUM_TYPE_DEFINITION||e.kind===u.INPUT_OBJECT_TYPE_DEFINITION}function Wn(e){return e.kind===u.SCHEMA_EXTENSION||Kt(e)}function Kt(e){return e.kind===u.SCALAR_TYPE_EXTENSION||e.kind===u.OBJECT_TYPE_EXTENSION||e.kind===u.INTERFACE_TYPE_EXTENSION||e.kind===u.UNION_TYPE_EXTENSION||e.kind===u.ENUM_TYPE_EXTENSION||e.kind===u.INPUT_OBJECT_TYPE_EXTENSION}function tr(e){return{Document(t){for(const n of t.definitions)Xn(n)||e.reportError(new h(`The ${n.kind===u.SCHEMA_DEFINITION||n.kind===u.SCHEMA_EXTENSION?"schema":'"'+n.name.value+'"'} definition is not executable.`,{nodes:n}));return!1}}}function nr(e){return{Field(t){const n=e.getParentType();if(n&&!e.getFieldDef()){const r=e.getSchema(),s=t.name.value;let o=we("to use an inline fragment on",function Bo(e,t,n){if(!ge(t))return[];const i=new Set,r=Object.create(null);for(const o of e.getPossibleTypes(t))if(o.getFields()[n]){i.add(o),r[o.name]=1;for(const a of o.getInterfaces()){var s;a.getFields()[n]&&(i.add(a),r[a.name]=(null!==(s=r[a.name])&&void 0!==s?s:0)+1)}}return[...i].sort((o,a)=>{const c=r[a.name]-r[o.name];return 0!==c?c:k(o)&&e.isSubType(o,a)?-1:k(a)&&e.isSubType(a,o)?1:ht(o.name,a.name)}).map(o=>o.name)}(r,n,s));""===o&&(o=we(function Qo(e,t){return F(e)||k(e)?Ve(t,Object.keys(e.getFields())):[]}(n,s))),e.reportError(new h(`Cannot query field "${s}" on type "${n.name}".`+o,{nodes:t}))}}}}function ir(e){return{InlineFragment(t){const n=t.typeCondition;if(n){const i=ie(e.getSchema(),n);if(i&&!Ne(i)){const r=C(n);e.reportError(new h(`Fragment cannot condition on non composite type "${r}".`,{nodes:n}))}}},FragmentDefinition(t){const n=ie(e.getSchema(),t.typeCondition);if(n&&!Ne(n)){const i=C(t.typeCondition);e.reportError(new h(`Fragment "${t.name.value}" cannot condition on non composite type "${i}".`,{nodes:t.typeCondition}))}}}}function rr(e){return{...sr(e),Argument(t){const n=e.getArgument(),i=e.getFieldDef(),r=e.getParentType();if(!n&&i&&r){const s=t.name.value,a=Ve(s,i.args.map(c=>c.name));e.reportError(new h(`Unknown argument "${s}" on field "${r.name}.${i.name}".`+we(a),{nodes:t}))}}}}function sr(e){const t=Object.create(null),n=e.getSchema(),i=n?n.getDirectives():Me;for(const o of i)t[o.name]=o.args.map(a=>a.name);const r=e.getDocument().definitions;for(const o of r)if(o.kind===u.DIRECTIVE_DEFINITION){var s;const a=null!==(s=o.arguments)&&void 0!==s?s:[];t[o.name.value]=a.map(c=>c.name.value)}return{Directive(o){const a=o.name.value,c=t[a];if(o.arguments&&c)for(const l of o.arguments){const f=l.name.value;if(!c.includes(f)){const p=Ve(f,c);e.reportError(new h(`Unknown argument "${f}" on directive "@${a}".`+we(p),{nodes:l}))}}return!1}}}function Kn(e){const t=Object.create(null),n=e.getSchema(),i=n?n.getDirectives():Me;for(const s of i)t[s.name]=s.locations;const r=e.getDocument().definitions;for(const s of r)s.kind===u.DIRECTIVE_DEFINITION&&(t[s.name.value]=s.locations.map(o=>o.value));return{Directive(s,o,a,c,l){const f=s.name.value,p=t[f];if(!p)return void e.reportError(new h(`Unknown directive "@${f}".`,{nodes:s}));const d=function qo(e){const t=e[e.length-1];switch("kind"in t||x(!1),t.kind){case u.OPERATION_DEFINITION:return function Yo(e){switch(e){case H.QUERY:return D.QUERY;case H.MUTATION:return D.MUTATION;case H.SUBSCRIPTION:return D.SUBSCRIPTION}}(t.operation);case u.FIELD:return D.FIELD;case u.FRAGMENT_SPREAD:return D.FRAGMENT_SPREAD;case u.INLINE_FRAGMENT:return D.INLINE_FRAGMENT;case u.FRAGMENT_DEFINITION:return D.FRAGMENT_DEFINITION;case u.VARIABLE_DEFINITION:return D.VARIABLE_DEFINITION;case u.SCHEMA_DEFINITION:case u.SCHEMA_EXTENSION:return D.SCHEMA;case u.SCALAR_TYPE_DEFINITION:case u.SCALAR_TYPE_EXTENSION:return D.SCALAR;case u.OBJECT_TYPE_DEFINITION:case u.OBJECT_TYPE_EXTENSION:return D.OBJECT;case u.FIELD_DEFINITION:return D.FIELD_DEFINITION;case u.INTERFACE_TYPE_DEFINITION:case u.INTERFACE_TYPE_EXTENSION:return D.INTERFACE;case u.UNION_TYPE_DEFINITION:case u.UNION_TYPE_EXTENSION:return D.UNION;case u.ENUM_TYPE_DEFINITION:case u.ENUM_TYPE_EXTENSION:return D.ENUM;case u.ENUM_VALUE_DEFINITION:return D.ENUM_VALUE;case u.INPUT_OBJECT_TYPE_DEFINITION:case u.INPUT_OBJECT_TYPE_EXTENSION:return D.INPUT_OBJECT;case u.INPUT_VALUE_DEFINITION:{const n=e[e.length-3];return"kind"in n||x(!1),n.kind===u.INPUT_OBJECT_TYPE_DEFINITION?D.INPUT_FIELD_DEFINITION:D.ARGUMENT_DEFINITION}default:x(!1,"Unexpected kind: "+T(t.kind))}}(l);d&&!p.includes(d)&&e.reportError(new h(`Directive "@${f}" may not be used on ${d}.`,{nodes:s}))}}}function or(e){return{FragmentSpread(t){const n=t.name.value;e.getFragment(n)||e.reportError(new h(`Unknown fragment "${n}".`,{nodes:t.name}))}}}function Zn(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),i=Object.create(null);for(const s of e.getDocument().definitions)st(s)&&(i[s.name.value]=!0);const r=[...Object.keys(n),...Object.keys(i)];return{NamedType(s,o,a,c,l){const f=s.name.value;if(!n[f]&&!i[f]){var p;const d=null!==(p=l[2])&&void 0!==p?p:a,y=null!=d&&function Jo(e){return"kind"in e&&(Hn(e)||Wn(e))}(d);if(y&&ar.includes(f))return;const N=Ve(f,y?ar.concat(r):r);e.reportError(new h(`Unknown type "${f}".`+we(N),{nodes:s}))}}}}const ar=[...yt,...bt].map(e=>e.name);function cr(e){let t=0;return{Document(n){t=n.definitions.filter(i=>i.kind===u.OPERATION_DEFINITION).length},OperationDefinition(n){!n.name&&t>1&&e.reportError(new h("This anonymous operation must be the only defined operation.",{nodes:n}))}}}function ur(e){var t,n,i;const r=e.getSchema(),s=null!==(t=null!==(n=null!==(i=r?.astNode)&&void 0!==i?i:r?.getQueryType())&&void 0!==n?n:r?.getMutationType())&&void 0!==t?t:r?.getSubscriptionType();let o=0;return{SchemaDefinition(a){s?e.reportError(new h("Cannot define a new schema within a schema extension.",{nodes:a})):(o>0&&e.reportError(new h("Must provide only one schema definition.",{nodes:a})),++o)}}}function lr(e){const t=Object.create(null),n=[],i=Object.create(null);return{OperationDefinition:()=>!1,FragmentDefinition:s=>(r(s),!1)};function r(s){if(t[s.name.value])return;const o=s.name.value;t[o]=!0;const a=e.getFragmentSpreads(s.selectionSet);if(0!==a.length){i[o]=n.length;for(const c of a){const l=c.name.value,f=i[l];if(n.push(c),void 0===f){const p=e.getFragment(l);p&&r(p)}else{const p=n.slice(f),d=p.slice(0,-1).map(y=>'"'+y.name.value+'"').join(", ");e.reportError(new h(`Cannot spread fragment "${l}" within itself`+(""!==d?` via ${d}.`:"."),{nodes:p}))}n.pop()}i[o]=void 0}}}function fr(e){let t=Object.create(null);return{OperationDefinition:{enter(){t=Object.create(null)},leave(n){const i=e.getRecursiveVariableUsages(n);for(const{node:r}of i){const s=r.name.value;!0!==t[s]&&e.reportError(new h(n.name?`Variable "$${s}" is not defined by operation "${n.name.value}".`:`Variable "$${s}" is not defined.`,{nodes:[r,n]}))}}},VariableDefinition(n){t[n.variable.name.value]=!0}}}function pr(e){const t=[],n=[];return{OperationDefinition:i=>(t.push(i),!1),FragmentDefinition:i=>(n.push(i),!1),Document:{leave(){const i=Object.create(null);for(const r of t)for(const s of e.getRecursivelyReferencedFragments(r))i[s.name.value]=!0;for(const r of n){const s=r.name.value;!0!==i[s]&&e.reportError(new h(`Fragment "${s}" is never used.`,{nodes:r}))}}}}}function dr(e){let t=[];return{OperationDefinition:{enter(){t=[]},leave(n){const i=Object.create(null),r=e.getRecursiveVariableUsages(n);for(const{node:s}of r)i[s.name.value]=!0;for(const s of t){const o=s.variable.name.value;!0!==i[o]&&e.reportError(new h(n.name?`Variable "$${o}" is never used in operation "${n.name.value}".`:`Variable "$${o}" is never used.`,{nodes:s}))}}},VariableDefinition(n){t.push(n)}}}function Zt(e){switch(e.kind){case u.OBJECT:return{...e,fields:Xo(e.fields)};case u.LIST:return{...e,values:e.values.map(Zt)};case u.INT:case u.FLOAT:case u.STRING:case u.BOOLEAN:case u.NULL:case u.ENUM:case u.VARIABLE:return e}}function Xo(e){return e.map(t=>({...t,value:Zt(t.value)})).sort((t,n)=>ht(t.name.value,n.name.value))}function hr(e){return Array.isArray(e)?e.map(([t,n])=>`subfields "${t}" conflict because `+hr(n)).join(" and "):e}function mr(e){const t=new ea,n=new Map;return{SelectionSet(i){const r=function zo(e,t,n,i,r){const s=[],[o,a]=nn(e,t,i,r);if(function Wo(e,t,n,i,r){for(const[s,o]of Object.entries(r))if(o.length>1)for(let a=0;a<o.length;a++)for(let c=a+1;c<o.length;c++){const l=Tr(e,n,i,!1,s,o[a],o[c]);l&&t.push(l)}}(e,s,t,n,o),0!==a.length)for(let c=0;c<a.length;c++){en(e,s,t,n,!1,o,a[c]);for(let l=c+1;l<a.length;l++)tn(e,s,t,n,!1,a[c],a[l])}return s}(e,n,t,e.getParentType(),i);for(const[[s,o],a,c]of r){const l=hr(o);e.reportError(new h(`Fields "${s}" conflict because ${l}. Use different aliases on the fields to fetch both if this was intentional.`,{nodes:a.concat(c)}))}}}}function en(e,t,n,i,r,s,o){const a=e.getFragment(o);if(!a)return;const[c,l]=ni(e,n,a);if(s!==c){ei(e,t,n,i,r,s,c);for(const f of l)i.has(f,o,r)||(i.add(f,o,r),en(e,t,n,i,r,s,f))}}function tn(e,t,n,i,r,s,o){if(s===o||i.has(s,o,r))return;i.add(s,o,r);const a=e.getFragment(s),c=e.getFragment(o);if(!a||!c)return;const[l,f]=ni(e,n,a),[p,d]=ni(e,n,c);ei(e,t,n,i,r,l,p);for(const y of d)tn(e,t,n,i,r,s,y);for(const y of f)tn(e,t,n,i,r,y,o)}function ei(e,t,n,i,r,s,o){for(const[a,c]of Object.entries(s)){const l=o[a];if(l)for(const f of c)for(const p of l){const d=Tr(e,n,i,r,a,f,p);d&&t.push(d)}}}function Tr(e,t,n,i,r,s,o){const[a,c,l]=s,[f,p,d]=o,y=i||a!==f&&F(a)&&F(f);if(!y){const Ee=c.name.value,te=p.name.value;if(Ee!==te)return[[r,`"${Ee}" and "${te}" are different fields`],[c],[p]];if(!function Ko(e,t){const n=e.arguments,i=t.arguments;if(void 0===n||0===n.length)return void 0===i||0===i.length;if(void 0===i||0===i.length||n.length!==i.length)return!1;const r=new Map(i.map(({name:s,value:o})=>[s.value,o]));return n.every(s=>{const o=s.value,a=r.get(s.name.value);return void 0!==a&&Er(o)===Er(a)})}(c,p))return[[r,"they have differing arguments"],[c],[p]]}const N=l?.type,L=d?.type;if(N&&L&&ti(N,L))return[[r,`they return conflicting types "${T(N)}" and "${T(L)}"`],[c],[p]];const $=c.selectionSet,B=p.selectionSet;if($&&B){const Ee=function Ho(e,t,n,i,r,s,o,a){const c=[],[l,f]=nn(e,t,r,s),[p,d]=nn(e,t,o,a);ei(e,c,t,n,i,l,p);for(const y of d)en(e,c,t,n,i,l,y);for(const y of f)en(e,c,t,n,i,p,y);for(const y of f)for(const N of d)tn(e,c,t,n,i,y,N);return c}(e,t,n,y,ee(N),$,ee(L),B);return function Zo(e,t,n,i){if(e.length>0)return[[t,e.map(([r])=>r)],[n,...e.map(([,r])=>r).flat()],[i,...e.map(([,,r])=>r).flat()]]}(Ee,r,c,p)}}function Er(e){return C(Zt(e))}function ti(e,t){return M(e)?!M(t)||ti(e.ofType,t.ofType):!!M(t)||(S(e)?!S(t)||ti(e.ofType,t.ofType):!!S(t)||!(!ve(e)&&!ve(t))&&e!==t)}function nn(e,t,n,i){const r=t.get(i);if(r)return r;const s=Object.create(null),o=Object.create(null);yr(e,n,i,s,o);const a=[s,Object.keys(o)];return t.set(i,a),a}function ni(e,t,n){const i=t.get(n.selectionSet);if(i)return i;const r=ie(e.getSchema(),n.typeCondition);return nn(e,t,r,n.selectionSet)}function yr(e,t,n,i,r){for(const s of n.selections)switch(s.kind){case u.FIELD:{const o=s.name.value;let a;(F(t)||k(t))&&(a=t.getFields()[o]);const c=s.alias?s.alias.value:o;i[c]||(i[c]=[]),i[c].push([t,s,a]);break}case u.FRAGMENT_SPREAD:r[s.name.value]=!0;break;case u.INLINE_FRAGMENT:{const o=s.typeCondition,a=o?ie(e.getSchema(),o):t;yr(e,a,s.selectionSet,i,r);break}}}class ea{constructor(){this._data=new Map}has(t,n,i){var r;const[s,o]=t<n?[t,n]:[n,t],a=null===(r=this._data.get(s))||void 0===r?void 0:r.get(o);return void 0!==a&&(!!i||i===a)}add(t,n,i){const[r,s]=t<n?[t,n]:[n,t],o=this._data.get(r);void 0===o?this._data.set(r,new Map([[s,i]])):o.set(s,i)}}function vr(e){return{InlineFragment(t){const n=e.getType(),i=e.getParentType();if(Ne(n)&&Ne(i)&&!An(e.getSchema(),n,i)){const r=T(i),s=T(n);e.reportError(new h(`Fragment cannot be spread here as objects of type "${r}" can never be of type "${s}".`,{nodes:t}))}},FragmentSpread(t){const n=t.name.value,i=function ta(e,t){const n=e.getFragment(t);if(n){const i=ie(e.getSchema(),n.typeCondition);if(Ne(i))return i}}(e,n),r=e.getParentType();if(i&&r&&!An(e.getSchema(),i,r)){const s=T(r),o=T(i);e.reportError(new h(`Fragment "${n}" cannot be spread here as objects of type "${s}" can never be of type "${o}".`,{nodes:t}))}}}}function Nr(e){const t=e.getSchema(),n=Object.create(null);for(const r of e.getDocument().definitions)st(r)&&(n[r.name.value]=r);return{ScalarTypeExtension:i,ObjectTypeExtension:i,InterfaceTypeExtension:i,UnionTypeExtension:i,EnumTypeExtension:i,InputObjectTypeExtension:i};function i(r){const s=r.name.value,o=n[s],a=t?.getType(s);let c;if(o?c=na[o.kind]:a&&(c=function ia(e){return se(e)?u.SCALAR_TYPE_EXTENSION:F(e)?u.OBJECT_TYPE_EXTENSION:k(e)?u.INTERFACE_TYPE_EXTENSION:X(e)?u.UNION_TYPE_EXTENSION:Y(e)?u.ENUM_TYPE_EXTENSION:U(e)?u.INPUT_OBJECT_TYPE_EXTENSION:void x(!1,"Unexpected type: "+T(e))}(a)),c){if(c!==r.kind){const l=function ra(e){switch(e){case u.SCALAR_TYPE_EXTENSION:return"scalar";case u.OBJECT_TYPE_EXTENSION:return"object";case u.INTERFACE_TYPE_EXTENSION:return"interface";case u.UNION_TYPE_EXTENSION:return"union";case u.ENUM_TYPE_EXTENSION:return"enum";case u.INPUT_OBJECT_TYPE_EXTENSION:return"input object";default:x(!1,"Unexpected kind: "+T(e))}}(r.kind);e.reportError(new h(`Cannot extend non-${l} type "${s}".`,{nodes:o?[o,r]:r}))}}else{const f=Ve(s,Object.keys({...n,...t?.getTypeMap()}));e.reportError(new h(`Cannot extend type "${s}" because it is not defined.`+we(f),{nodes:r.name}))}}}const na={[u.SCALAR_TYPE_DEFINITION]:u.SCALAR_TYPE_EXTENSION,[u.OBJECT_TYPE_DEFINITION]:u.OBJECT_TYPE_EXTENSION,[u.INTERFACE_TYPE_DEFINITION]:u.INTERFACE_TYPE_EXTENSION,[u.UNION_TYPE_DEFINITION]:u.UNION_TYPE_EXTENSION,[u.ENUM_TYPE_DEFINITION]:u.ENUM_TYPE_EXTENSION,[u.INPUT_OBJECT_TYPE_DEFINITION]:u.INPUT_OBJECT_TYPE_EXTENSION};function gr(e){return{...Ir(e),Field:{leave(t){var n;const i=e.getFieldDef();if(!i)return!1;const r=new Set(null===(n=t.arguments)||void 0===n?void 0:n.map(s=>s.name.value));for(const s of i.args)if(!r.has(s.name)&&Ce(s)){const o=T(s.type);e.reportError(new h(`Field "${i.name}" argument "${s.name}" of type "${o}" is required, but it was not provided.`,{nodes:t}))}}}}}function Ir(e){var t;const n=Object.create(null),i=e.getSchema(),r=null!==(t=i?.getDirectives())&&void 0!==t?t:Me;for(const a of r)n[a.name]=Re(a.args.filter(Ce),c=>c.name);const s=e.getDocument().definitions;for(const a of s)if(a.kind===u.DIRECTIVE_DEFINITION){var o;const c=null!==(o=a.arguments)&&void 0!==o?o:[];n[a.name.value]=Re(c.filter(sa),l=>l.name.value)}return{Directive:{leave(a){const c=a.name.value,l=n[c];if(l){var f;const p=null!==(f=a.arguments)&&void 0!==f?f:[],d=new Set(p.map(y=>y.name.value));for(const[y,N]of Object.entries(l))if(!d.has(y)){const L=mt(N.type)?T(N.type):C(N.type);e.reportError(new h(`Directive "@${c}" argument "${y}" of type "${L}" is required, but it was not provided.`,{nodes:a}))}}}}}}function sa(e){return e.type.kind===u.NON_NULL_TYPE&&null==e.defaultValue}function _r(e){return{Field(t){const n=e.getType(),i=t.selectionSet;if(n)if(ve(ee(n))){if(i){const r=t.name.value,s=T(n);e.reportError(new h(`Field "${r}" must not have a selection since type "${s}" has no subfields.`,{nodes:i}))}}else if(!i){const r=t.name.value,s=T(n);e.reportError(new h(`Field "${r}" of type "${s}" must have a selection of subfields. Did you mean "${r} { ... }"?`,{nodes:t}))}}}}function br(e){return e.map(t=>"number"==typeof t?"["+t.toString()+"]":"."+t).join("")}function ot(e,t,n){return{prev:e,key:t,typename:n}}function ae(e){const t=[];let n=e;for(;n;)t.push(n.key),n=n.prev;return t.reverse()}function Dr(e,t,n=oa){return Ot(e,t,n,void 0)}function oa(e,t,n){let i="Invalid value "+T(t);throw e.length>0&&(i+=` at "value${br(e)}"`),n.message=i+": "+n.message,n}function Ot(e,t,n,i){if(S(t))return null!=e?Ot(e,t.ofType,n,i):void n(ae(i),e,new h(`Expected non-nullable type "${T(t)}" not to be null.`));if(null==e)return null;if(M(t)){const r=t.ofType;return Vn(e)?Array.from(e,(s,o)=>{const a=ot(i,o,void 0);return Ot(s,r,n,a)}):[Ot(e,r,n,i)]}if(U(t)){if(!K(e))return void n(ae(i),e,new h(`Expected type "${t.name}" to be an object.`));const r={},s=t.getFields();for(const o of Object.values(s)){const a=e[o.name];if(void 0!==a)r[o.name]=Ot(a,o.type,n,ot(i,o.name,t.name));else if(void 0!==o.defaultValue)r[o.name]=o.defaultValue;else if(S(o.type)){const c=T(o.type);n(ae(i),e,new h(`Field "${o.name}" of required type "${c}" was not provided.`))}}for(const o of Object.keys(e))if(!s[o]){const a=Ve(o,Object.keys(t.getFields()));n(ae(i),e,new h(`Field "${o}" is not defined by type "${t.name}".`+we(a)))}return r}if(ve(t)){let r;try{r=t.parseValue(e)}catch(s){return void n(ae(i),e,s instanceof h?s:new h(`Expected type "${t.name}". `+s.message,{originalError:s}))}return void 0===r&&n(ae(i),e,new h(`Expected type "${t.name}".`)),r}x(!1,"Unexpected input type: "+T(t))}function be(e,t,n){if(e){if(e.kind===u.VARIABLE){const i=e.name.value;if(null==n||void 0===n[i])return;const r=n[i];return null===r&&S(t)?void 0:r}if(S(t))return e.kind===u.NULL?void 0:be(e,t.ofType,n);if(e.kind===u.NULL)return null;if(M(t)){const i=t.ofType;if(e.kind===u.LIST){const s=[];for(const o of e.values)if(Or(o,n)){if(S(i))return;s.push(null)}else{const a=be(o,i,n);if(void 0===a)return;s.push(a)}return s}const r=be(e,i,n);return void 0===r?void 0:[r]}if(U(t)){if(e.kind!==u.OBJECT)return;const i=Object.create(null),r=Re(e.fields,s=>s.name.value);for(const s of Object.values(t.getFields())){const o=r[s.name];if(!o||Or(o.value,n)){if(void 0!==s.defaultValue)i[s.name]=s.defaultValue;else if(S(s.type))return;continue}const a=be(o.value,s.type,n);if(void 0===a)return;i[s.name]=a}return i}if(ve(t)){let i;try{i=t.parseLiteral(e,n)}catch{return}return void 0===i?void 0:i}x(!1,"Unexpected input type: "+T(t))}}function Or(e,t){return e.kind===u.VARIABLE&&(null==t||void 0===t[e.name.value])}function Sr(e,t,n,i){const r=[],s=i?.maxErrors;try{const o=function aa(e,t,n,i){const r={};for(const s of t){const o=s.variable.name.value,a=ie(e,s.type);if(!ne(a)){const l=C(s.type);i(new h(`Variable "$${o}" expected value of type "${l}" which cannot be used as an input type.`,{nodes:s.type}));continue}if(!Ar(n,o)){if(s.defaultValue)r[o]=be(s.defaultValue,a);else if(S(a)){const l=T(a);i(new h(`Variable "$${o}" of required type "${l}" was not provided.`,{nodes:s}))}continue}const c=n[o];if(null===c&&S(a)){const l=T(a);i(new h(`Variable "$${o}" of non-null type "${l}" must not be null.`,{nodes:s}))}else r[o]=Dr(c,a,(l,f,p)=>{let d=`Variable "$${o}" got invalid value `+T(f);l.length>0&&(d+=` at "${o}${br(l)}"`),i(new h(d+"; "+p.message,{nodes:s,originalError:p}))})}return r}(e,t,n,a=>{if(null!=s&&r.length>=s)throw new h("Too many errors processing variables, error limit reached. Execution aborted.");r.push(a)});if(0===r.length)return{coerced:o}}catch(o){r.push(o)}return{errors:r}}function rn(e,t,n){var i;const r={},o=Re(null!==(i=t.arguments)&&void 0!==i?i:[],a=>a.name.value);for(const a of e.args){const c=a.name,l=a.type,f=o[c];if(!f){if(void 0!==a.defaultValue)r[c]=a.defaultValue;else if(S(l))throw new h(`Argument "${c}" of required type "${T(l)}" was not provided.`,{nodes:t});continue}const p=f.value;let d=p.kind===u.NULL;if(p.kind===u.VARIABLE){const N=p.name.value;if(null==n||!Ar(n,N)){if(void 0!==a.defaultValue)r[c]=a.defaultValue;else if(S(l))throw new h(`Argument "${c}" of required type "${T(l)}" was provided the variable "$${N}" which was not provided a runtime value.`,{nodes:p});continue}d=null==n[N]}if(d&&S(l))throw new h(`Argument "${c}" of non-null type "${T(l)}" must not be null.`,{nodes:p});const y=be(p,l,n);if(void 0===y)throw new h(`Argument "${c}" has invalid value ${C(p)}.`,{nodes:p});r[c]=y}return r}function St(e,t,n){var i;const r=null===(i=t.directives)||void 0===i?void 0:i.find(s=>s.name.value===e.name);if(r)return rn(e,r,n)}function Ar(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function ii(e,t,n,i,r){const s=new Map;return sn(e,t,n,i,r,s,new Set),s}function sn(e,t,n,i,r,s,o){for(const a of r.selections)switch(a.kind){case u.FIELD:{if(!ri(n,a))continue;const c=ua(a),l=s.get(c);void 0!==l?l.push(a):s.set(c,[a]);break}case u.INLINE_FRAGMENT:if(!ri(n,a)||!wr(e,a,i))continue;sn(e,t,n,i,a.selectionSet,s,o);break;case u.FRAGMENT_SPREAD:{const c=a.name.value;if(o.has(c)||!ri(n,a))continue;o.add(c);const l=t[c];if(!l||!wr(e,l,i))continue;sn(e,t,n,i,l.selectionSet,s,o);break}}}function ri(e,t){const n=St(Ln,t,e);if(!0===n?.if)return!1;const i=St(Rn,t,e);return!1!==i?.if}function wr(e,t,n){const i=t.typeCondition;if(!i)return!0;const r=ie(e,i);return r===n||!!ge(r)&&e.isSubType(r,n)}function ua(e){return e.alias?e.alias.value:e.name.value}function Rr(e){return{OperationDefinition(t){if("subscription"===t.operation){const n=e.getSchema(),i=n.getSubscriptionType();if(i){const r=t.name?t.name.value:null,s=Object.create(null),o=e.getDocument(),a=Object.create(null);for(const l of o.definitions)l.kind===u.FRAGMENT_DEFINITION&&(a[l.name.value]=l);const c=ii(n,a,s,i,t.selectionSet);if(c.size>1){const p=[...c.values()].slice(1).flat();e.reportError(new h(null!=r?`Subscription "${r}" must select only one top level field.`:"Anonymous Subscription must select only one top level field.",{nodes:p}))}for(const l of c.values())l[0].name.value.startsWith("__")&&e.reportError(new h(null!=r?`Subscription "${r}" must not select an introspection top level field.`:"Anonymous Subscription must not select an introspection top level field.",{nodes:l}))}}}}}function si(e,t){const n=new Map;for(const i of e){const r=t(i),s=n.get(r);void 0===s?n.set(r,[i]):s.push(i)}return n}function Lr(e){return{DirectiveDefinition(i){var r;const s=null!==(r=i.arguments)&&void 0!==r?r:[];return n(`@${i.name.value}`,s)},InterfaceTypeDefinition:t,InterfaceTypeExtension:t,ObjectTypeDefinition:t,ObjectTypeExtension:t};function t(i){var r;const s=i.name.value,o=null!==(r=i.fields)&&void 0!==r?r:[];for(const c of o){var a;n(`${s}.${c.name.value}`,null!==(a=c.arguments)&&void 0!==a?a:[])}return!1}function n(i,r){const s=si(r,o=>o.name.value);for(const[o,a]of s)a.length>1&&e.reportError(new h(`Argument "${i}(${o}:)" can only be defined once.`,{nodes:a.map(c=>c.name)}));return!1}}function oi(e){return{Field:t,Directive:t};function t(n){var i;const s=si(null!==(i=n.arguments)&&void 0!==i?i:[],o=>o.name.value);for(const[o,a]of s)a.length>1&&e.reportError(new h(`There can be only one argument named "${o}".`,{nodes:a.map(c=>c.name)}))}}function Fr(e){const t=Object.create(null),n=e.getSchema();return{DirectiveDefinition(i){const r=i.name.value;if(null==n||!n.getDirective(r))return t[r]?e.reportError(new h(`There can be only one directive named "@${r}".`,{nodes:[t[r],i.name]})):t[r]=i.name,!1;e.reportError(new h(`Directive "@${r}" already exists in the schema. It cannot be redefined.`,{nodes:i.name}))}}}function ai(e){const t=Object.create(null),n=e.getSchema(),i=n?n.getDirectives():Me;for(const a of i)t[a.name]=!a.isRepeatable;const r=e.getDocument().definitions;for(const a of r)a.kind===u.DIRECTIVE_DEFINITION&&(t[a.name.value]=!a.repeatable);const s=Object.create(null),o=Object.create(null);return{enter(a){if(!("directives"in a)||!a.directives)return;let c;if(a.kind===u.SCHEMA_DEFINITION||a.kind===u.SCHEMA_EXTENSION)c=s;else if(st(a)||Kt(a)){const l=a.name.value;c=o[l],void 0===c&&(o[l]=c=Object.create(null))}else c=Object.create(null);for(const l of a.directives){const f=l.name.value;t[f]&&(c[f]?e.reportError(new h(`The directive "@${f}" can only be used once at this location.`,{nodes:[c[f],l]})):c[f]=l)}}}}function kr(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),i=Object.create(null);return{EnumTypeDefinition:r,EnumTypeExtension:r};function r(s){var o;const a=s.name.value;i[a]||(i[a]=Object.create(null));const c=null!==(o=s.values)&&void 0!==o?o:[],l=i[a];for(const f of c){const p=f.name.value,d=n[a];Y(d)&&d.getValue(p)?e.reportError(new h(`Enum value "${a}.${p}" already exists in the schema. It cannot also be defined in this type extension.`,{nodes:f.name})):l[p]?e.reportError(new h(`Enum value "${a}.${p}" can only be defined once.`,{nodes:[l[p],f.name]})):l[p]=f.name}return!1}}function $r(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),i=Object.create(null);return{InputObjectTypeDefinition:r,InputObjectTypeExtension:r,InterfaceTypeDefinition:r,InterfaceTypeExtension:r,ObjectTypeDefinition:r,ObjectTypeExtension:r};function r(s){var o;const a=s.name.value;i[a]||(i[a]=Object.create(null));const c=null!==(o=s.fields)&&void 0!==o?o:[],l=i[a];for(const f of c){const p=f.name.value;la(n[a],p)?e.reportError(new h(`Field "${a}.${p}" already exists in the schema. It cannot also be defined in this type extension.`,{nodes:f.name})):l[p]?e.reportError(new h(`Field "${a}.${p}" can only be defined once.`,{nodes:[l[p],f.name]})):l[p]=f.name}return!1}}function la(e,t){return!!(F(e)||k(e)||U(e))&&null!=e.getFields()[t]}function Vr(e){const t=Object.create(null);return{OperationDefinition:()=>!1,FragmentDefinition(n){const i=n.name.value;return t[i]?e.reportError(new h(`There can be only one fragment named "${i}".`,{nodes:[t[i],n.name]})):t[i]=n.name,!1}}}function ci(e){const t=[];let n=Object.create(null);return{ObjectValue:{enter(){t.push(n),n=Object.create(null)},leave(){const i=t.pop();i||x(!1),n=i}},ObjectField(i){const r=i.name.value;n[r]?e.reportError(new h(`There can be only one input field named "${r}".`,{nodes:[n[r],i.name]})):n[r]=i.name}}}function xr(e){const t=Object.create(null);return{OperationDefinition(n){const i=n.name;return i&&(t[i.value]?e.reportError(new h(`There can be only one operation named "${i.value}".`,{nodes:[t[i.value],i]})):t[i.value]=i),!1},FragmentDefinition:()=>!1}}function Cr(e){const t=e.getSchema(),n=Object.create(null),i=t?{query:t.getQueryType(),mutation:t.getMutationType(),subscription:t.getSubscriptionType()}:{};return{SchemaDefinition:r,SchemaExtension:r};function r(s){var o;const a=null!==(o=s.operationTypes)&&void 0!==o?o:[];for(const c of a){const l=c.operation,f=n[l];i[l]?e.reportError(new h(`Type for ${l} already defined in the schema. It cannot be redefined.`,{nodes:c})):f?e.reportError(new h(`There can be only one ${l} type in schema.`,{nodes:[f,c]})):n[l]=c}return!1}}function Ur(e){const t=Object.create(null),n=e.getSchema();return{ScalarTypeDefinition:i,ObjectTypeDefinition:i,InterfaceTypeDefinition:i,UnionTypeDefinition:i,EnumTypeDefinition:i,InputObjectTypeDefinition:i};function i(r){const s=r.name.value;if(null==n||!n.getType(s))return t[s]?e.reportError(new h(`There can be only one type named "${s}".`,{nodes:[t[s],r.name]})):t[s]=r.name,!1;e.reportError(new h(`Type "${s}" already exists in the schema. It cannot also be defined in this type definition.`,{nodes:r.name}))}}function Mr(e){return{OperationDefinition(t){var n;const r=si(null!==(n=t.variableDefinitions)&&void 0!==n?n:[],s=>s.variable.name.value);for(const[s,o]of r)o.length>1&&e.reportError(new h(`There can be only one variable named "$${s}".`,{nodes:o.map(a=>a.variable.name)}))}}}function jr(e){return{ListValue(t){if(!M(Dn(e.getParentInputType())))return Ye(e,t),!1},ObjectValue(t){const n=ee(e.getInputType());if(!U(n))return Ye(e,t),!1;const i=Re(t.fields,r=>r.name.value);for(const r of Object.values(n.getFields()))if(!i[r.name]&&Qt(r)){const o=T(r.type);e.reportError(new h(`Field "${n.name}.${r.name}" of required type "${o}" was not provided.`,{nodes:t}))}},ObjectField(t){const n=ee(e.getParentInputType());if(!e.getInputType()&&U(n)){const r=Ve(t.name.value,Object.keys(n.getFields()));e.reportError(new h(`Field "${t.name.value}" is not defined by type "${n.name}".`+we(r),{nodes:t}))}},NullValue(t){const n=e.getInputType();S(n)&&e.reportError(new h(`Expected value of type "${T(n)}", found ${C(t)}.`,{nodes:t}))},EnumValue:t=>Ye(e,t),IntValue:t=>Ye(e,t),FloatValue:t=>Ye(e,t),StringValue:t=>Ye(e,t),BooleanValue:t=>Ye(e,t)}}function Ye(e,t){const n=e.getInputType();if(!n)return;const i=ee(n);if(ve(i))try{if(void 0===i.parseLiteral(t,void 0)){const s=T(n);e.reportError(new h(`Expected value of type "${s}", found ${C(t)}.`,{nodes:t}))}}catch(r){const s=T(n);e.reportError(r instanceof h?r:new h(`Expected value of type "${s}", found ${C(t)}; `+r.message,{nodes:t,originalError:r}))}else{const r=T(n);e.reportError(new h(`Expected value of type "${r}", found ${C(t)}.`,{nodes:t}))}}function Pr(e){return{VariableDefinition(t){const n=ie(e.getSchema(),t.type);if(void 0!==n&&!ne(n)){const i=t.variable.name.value,r=C(t.type);e.reportError(new h(`Variable "$${i}" cannot be non-input type "${r}".`,{nodes:t.type}))}}}}function Gr(e){let t=Object.create(null);return{OperationDefinition:{enter(){t=Object.create(null)},leave(n){const i=e.getRecursiveVariableUsages(n);for(const{node:r,type:s,defaultValue:o}of i){const a=r.name.value,c=t[a];if(c&&s){const l=e.getSchema(),f=ie(l,c.type);if(f&&!fa(l,f,c.defaultValue,s,o)){const p=T(f),d=T(s);e.reportError(new h(`Variable "$${a}" of type "${p}" used in position expecting type "${d}".`,{nodes:[c,r]}))}}}}},VariableDefinition(n){t[n.variable.name.value]=n}}}function fa(e,t,n,i,r){return S(i)&&!S(t)?(null!=n&&n.kind!==u.NULL||void 0!==r)&&Be(e,t,i.ofType):Be(e,t,i)}const Br=Object.freeze([tr,xr,cr,Rr,Zn,ir,Pr,_r,nr,Vr,or,pr,vr,lr,Mr,fr,dr,Kn,ai,rr,oi,jr,gr,Gr,mr,ci]),pa=Object.freeze([ur,Cr,Ur,kr,$r,Lr,Fr,Zn,Kn,ai,Nr,sr,oi,ci,Ir]);class Qr{constructor(t,n){this._ast=t,this._fragments=void 0,this._fragmentSpreads=new Map,this._recursivelyReferencedFragments=new Map,this._onError=n}get[Symbol.toStringTag](){return"ASTValidationContext"}reportError(t){this._onError(t)}getDocument(){return this._ast}getFragment(t){let n;if(this._fragments)n=this._fragments;else{n=Object.create(null);for(const i of this.getDocument().definitions)i.kind===u.FRAGMENT_DEFINITION&&(n[i.name.value]=i);this._fragments=n}return n[t]}getFragmentSpreads(t){let n=this._fragmentSpreads.get(t);if(!n){n=[];const i=[t];let r;for(;r=i.pop();)for(const s of r.selections)s.kind===u.FRAGMENT_SPREAD?n.push(s):s.selectionSet&&i.push(s.selectionSet);this._fragmentSpreads.set(t,n)}return n}getRecursivelyReferencedFragments(t){let n=this._recursivelyReferencedFragments.get(t);if(!n){n=[];const i=Object.create(null),r=[t.selectionSet];let s;for(;s=r.pop();)for(const o of this.getFragmentSpreads(s)){const a=o.name.value;if(!0!==i[a]){i[a]=!0;const c=this.getFragment(a);c&&(n.push(c),r.push(c.selectionSet))}}this._recursivelyReferencedFragments.set(t,n)}return n}}class da extends Qr{constructor(t,n,i){super(t,i),this._schema=n}get[Symbol.toStringTag](){return"SDLValidationContext"}getSchema(){return this._schema}}class qr extends Qr{constructor(t,n,i,r){super(n,r),this._schema=t,this._typeInfo=i,this._variableUsages=new Map,this._recursiveVariableUsages=new Map}get[Symbol.toStringTag](){return"ValidationContext"}getSchema(){return this._schema}getVariableUsages(t){let n=this._variableUsages.get(t);if(!n){const i=[],r=new Yn(this._schema);Ke(t,Jn(r,{VariableDefinition:()=>!1,Variable(s){i.push({node:s,type:r.getInputType(),defaultValue:r.getDefaultValue()})}})),n=i,this._variableUsages.set(t,n)}return n}getRecursiveVariableUsages(t){let n=this._recursiveVariableUsages.get(t);if(!n){n=this.getVariableUsages(t);for(const i of this.getRecursivelyReferencedFragments(t))n=n.concat(this.getVariableUsages(i));this._recursiveVariableUsages.set(t,n)}return n}getType(){return this._typeInfo.getType()}getParentType(){return this._typeInfo.getParentType()}getInputType(){return this._typeInfo.getInputType()}getParentInputType(){return this._typeInfo.getParentInputType()}getFieldDef(){return this._typeInfo.getFieldDef()}getDirective(){return this._typeInfo.getDirective()}getArgument(){return this._typeInfo.getArgument()}getEnumValue(){return this._typeInfo.getEnumValue()}}function Yr(e,t,n=Br,i,r=new Yn(e)){var s;const o=null!==(s=i?.maxErrors)&&void 0!==s?s:100;t||O(!1,"Must provide document."),Bn(e);const a=Object.freeze({}),c=[],l=new qr(e,t,r,p=>{if(c.length>=o)throw c.push(new h("Too many validation errors, error limit reached. Validation aborted.")),a;c.push(p)}),f=_n(n.map(p=>p(l)));try{Ke(t,Jn(r,f))}catch(p){if(p!==a)throw p}return c}function Jr(e,t,n=pa){const i=[],r=new da(e,t,o=>{i.push(o)});return Ke(e,_n(n.map(o=>o(r)))),i}function Xr(e){return Promise.all(Object.values(e)).then(t=>{const n=Object.create(null);for(const[i,r]of Object.keys(e).entries())n[r]=t[i];return n})}class va extends Error{constructor(t){super("Unexpected error value: "+T(t)),this.name="NonErrorThrown",this.thrownValue=t}}function at(e,t,n){var i;const r=function ya(e){return e instanceof Error?e:new va(e)}(e);return function Na(e){return Array.isArray(e.path)}(r)?r:new h(r.message,{nodes:null!==(i=r.nodes)&&void 0!==i?i:t,source:r.source,positions:r.positions,path:n,originalError:r})}const ga=function Ta(e){let t;return function(i,r,s){void 0===t&&(t=new WeakMap);let o=t.get(i);void 0===o&&(o=new WeakMap,t.set(i,o));let a=o.get(r);void 0===a&&(a=new WeakMap,o.set(r,a));let c=a.get(s);return void 0===c&&(c=e(i,r,s),a.set(s,c)),c}}((e,t,n)=>function ca(e,t,n,i,r){const s=new Map,o=new Set;for(const a of r)a.selectionSet&&sn(e,t,n,i,a.selectionSet,s,o);return s}(e.schema,e.fragments,e.variableValues,t,n));function on(e){arguments.length<2||O(!1,"graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.");const{schema:t,document:n,variableValues:i,rootValue:r}=e;Hr(t,n,i);const s=Wr(e);if(!("schema"in s))return{errors:s};try{const{operation:o}=s,a=function Ia(e,t,n){const i=e.schema.getRootType(t.operation);if(null==i)throw new h(`Schema is not configured to execute ${t.operation} operation.`,{nodes:t});const r=ii(e.schema,e.fragments,e.variableValues,i,t.selectionSet),s=void 0;switch(t.operation){case H.QUERY:return cn(e,i,n,s,r);case H.MUTATION:return function _a(e,t,n,i,r){return function Ea(e,t,n){let i=n;for(const r of e)i=W(i)?i.then(s=>t(s,r)):t(i,r);return i}(r.entries(),(s,[o,a])=>{const c=ot(i,o,t.name),l=Kr(e,t,n,a,c);return void 0===l?s:W(l)?l.then(f=>(s[o]=f,s)):(s[o]=l,s)},Object.create(null))}(e,i,n,s,r);case H.SUBSCRIPTION:return cn(e,i,n,s,r)}}(s,o,r);return W(a)?a.then(c=>an(c,s.errors),c=>(s.errors.push(c),an(null,s.errors))):an(a,s.errors)}catch(o){return s.errors.push(o),an(null,s.errors)}}function zr(e){const t=on(e);if(W(t))throw new Error("GraphQL execution failed to complete synchronously.");return t}function an(e,t){return 0===t.length?{data:e}:{errors:t,data:e}}function Hr(e,t,n){t||O(!1,"Must provide document."),Bn(e),null==n||K(n)||O(!1,"Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.")}function Wr(e){var t,n;const{schema:i,document:r,rootValue:s,contextValue:o,variableValues:a,operationName:c,fieldResolver:l,typeResolver:f,subscribeFieldResolver:p}=e;let d;const y=Object.create(null);for(const $ of r.definitions)switch($.kind){case u.OPERATION_DEFINITION:if(null==c){if(void 0!==d)return[new h("Must provide operation name if query contains multiple operations.")];d=$}else(null===(t=$.name)||void 0===t?void 0:t.value)===c&&(d=$);break;case u.FRAGMENT_DEFINITION:y[$.name.value]=$}if(!d)return null!=c?[new h(`Unknown operation named "${c}".`)]:[new h("Must provide an operation.")];const L=Sr(i,null!==(n=d.variableDefinitions)&&void 0!==n?n:[],a??{},{maxErrors:50});return L.errors?L.errors:{schema:i,fragments:y,rootValue:s,contextValue:o,operation:d,variableValues:L.coerced,fieldResolver:l??li,typeResolver:f??ns,subscribeFieldResolver:p??li,errors:[]}}function cn(e,t,n,i,r){const s=Object.create(null);let o=!1;try{for(const[a,c]of r.entries()){const f=Kr(e,t,n,c,ot(i,a,t.name));void 0!==f&&(s[a]=f,W(f)&&(o=!0))}}catch(a){if(o)return Xr(s).finally(()=>{throw a});throw a}return o?Xr(s):s}function Kr(e,t,n,i,r){var s;const o=is(e.schema,t,i[0]);if(!o)return;const a=o.type,c=null!==(s=o.resolve)&&void 0!==s?s:e.fieldResolver,l=Zr(e,o,i,t,r);try{const d=c(n,rn(o,i[0],e.variableValues),e.contextValue,l);let y;return y=W(d)?d.then(N=>At(e,a,i,l,r,N)):At(e,a,i,l,r,d),W(y)?y.then(void 0,N=>un(at(N,i,ae(r)),a,e)):y}catch(f){return un(at(f,i,ae(r)),a,e)}}function Zr(e,t,n,i,r){return{fieldName:t.name,fieldNodes:n,returnType:t.type,parentType:i,path:r,schema:e.schema,fragments:e.fragments,rootValue:e.rootValue,operation:e.operation,variableValues:e.variableValues}}function un(e,t,n){if(S(t))throw e;return n.errors.push(e),null}function At(e,t,n,i,r,s){if(s instanceof Error)throw s;if(S(t)){const o=At(e,t.ofType,n,i,r,s);if(null===o)throw new Error(`Cannot return null for non-nullable field ${i.parentType.name}.${i.fieldName}.`);return o}return null==s?null:M(t)?function ba(e,t,n,i,r,s){if(!Vn(s))throw new h(`Expected Iterable, but did not find one for field "${i.parentType.name}.${i.fieldName}".`);const o=t.ofType;let a=!1;const c=Array.from(s,(l,f)=>{const p=ot(r,f,void 0);try{let d;return d=W(l)?l.then(y=>At(e,o,n,i,p,y)):At(e,o,n,i,p,l),W(d)?(a=!0,d.then(void 0,y=>un(at(y,n,ae(p)),o,e))):d}catch(d){return un(at(d,n,ae(p)),o,e)}});return a?Promise.all(c):c}(e,t,n,i,r,s):ve(t)?function Da(e,t){const n=e.serialize(t);if(null==n)throw new Error(`Expected \`${T(e)}.serialize(${T(t)})\` to return non-nullable value, returned: ${T(n)}`);return n}(t,s):ge(t)?function Oa(e,t,n,i,r,s){var o;const l=(null!==(o=t.resolveType)&&void 0!==o?o:e.typeResolver)(s,e.contextValue,i,t);return W(l)?l.then(f=>ui(e,es(f,e,t,n,i,s),n,i,r,s)):ui(e,es(l,e,t,n,i,s),n,i,r,s)}(e,t,n,i,r,s):F(t)?ui(e,t,n,i,r,s):void x(!1,"Cannot complete value of unexpected output type: "+T(t))}function es(e,t,n,i,r,s){if(null==e)throw new h(`Abstract type "${n.name}" must resolve to an Object type at runtime for field "${r.parentType.name}.${r.fieldName}". Either the "${n.name}" type should provide a "resolveType" function or each possible type should provide an "isTypeOf" function.`,i);if(F(e))throw new h("Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.");if("string"!=typeof e)throw new h(`Abstract type "${n.name}" must resolve to an Object type at runtime for field "${r.parentType.name}.${r.fieldName}" with value ${T(s)}, received "${T(e)}".`);const o=t.schema.getType(e);if(null==o)throw new h(`Abstract type "${n.name}" was resolved to a type "${e}" that does not exist inside the schema.`,{nodes:i});if(!F(o))throw new h(`Abstract type "${n.name}" was resolved to a non-object type "${e}".`,{nodes:i});if(!t.schema.isSubType(n,o))throw new h(`Runtime Object type "${o.name}" is not a possible type for "${n.name}".`,{nodes:i});return o}function ui(e,t,n,i,r,s){const o=ga(e,t,n);if(t.isTypeOf){const a=t.isTypeOf(s,e.contextValue,i);if(W(a))return a.then(c=>{if(!c)throw ts(t,s,n);return cn(e,t,s,r,o)});if(!a)throw ts(t,s,n)}return cn(e,t,s,r,o)}function ts(e,t,n){return new h(`Expected value of type "${e.name}" but got: ${T(t)}.`,{nodes:n})}const ns=function(e,t,n,i){if(K(e)&&"string"==typeof e.__typename)return e.__typename;const r=n.schema.getPossibleTypes(i),s=[];for(let o=0;o<r.length;o++){const a=r[o];if(a.isTypeOf){const c=a.isTypeOf(e,t,n);if(W(c))s[o]=c;else if(c)return a.name}}return s.length?Promise.all(s).then(o=>{for(let a=0;a<o.length;a++)if(o[a])return r[a].name}):void 0},li=function(e,t,n,i){if(K(e)||"function"==typeof e){const r=e[i.fieldName];return"function"==typeof r?e[i.fieldName](t,n,i):r}};function is(e,t,n){const i=n.name.value;return i===gt.name&&e.getQueryType()===t?gt:i===It.name&&e.getQueryType()===t?It:i===_t.name?_t:t.getFields()[i]}function Sa(e){return new Promise(t=>t(rs(e)))}function Aa(e){const t=rs(e);if(W(t))throw new Error("GraphQL execution failed to complete synchronously.");return t}function rs(e){arguments.length<2||O(!1,"graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.");const{schema:t,source:n,rootValue:i,contextValue:r,variableValues:s,operationName:o,fieldResolver:a,typeResolver:c}=e,l=Gn(t);if(l.length>0)return{errors:l};let f;try{f=Ct(n)}catch(d){return{errors:[d]}}const p=Yr(t,f);return p.length>0?{errors:p}:on({schema:t,document:f,rootValue:i,contextValue:r,variableValues:s,operationName:o,fieldResolver:a,typeResolver:c})}var Je=ft(9671);function ss(e){return"function"==typeof e?.[Symbol.asyncIterator]}function Ra(e){return fi.apply(this,arguments)}function fi(){return fi=(0,Je.Z)(function*(e){arguments.length<2||O(!1,"graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.");const t=yield os(e);return ss(t)?function wa(e,t){const n=e[Symbol.asyncIterator]();function i(s){return r.apply(this,arguments)}function r(){return(r=(0,Je.Z)(function*(s){if(s.done)return s;try{return{value:yield t(s.value),done:!1}}catch(o){if("function"==typeof n.return)try{yield n.return()}catch{}throw o}})).apply(this,arguments)}return{next:()=>(0,Je.Z)(function*(){return i(yield n.next())})(),return:()=>(0,Je.Z)(function*(){return"function"==typeof n.return?i(yield n.return()):{value:void 0,done:!0}})(),throw:s=>(0,Je.Z)(function*(){if("function"==typeof n.throw)return i(yield n.throw(s));throw s})(),[Symbol.asyncIterator](){return this}}}(t,i=>on({...e,rootValue:i})):t}),fi.apply(this,arguments)}function os(){return pi.apply(this,arguments)}function pi(){return pi=(0,Je.Z)(function*(...e){const t=function La(e){const t=e[0];return t&&"document"in t?t:{schema:t,document:e[1],rootValue:e[2],contextValue:e[3],variableValues:e[4],operationName:e[5],subscribeFieldResolver:e[6]}}(e),{schema:n,document:i,variableValues:r}=t;Hr(n,i,r);const s=Wr(t);if(!("schema"in s))return{errors:s};try{const o=yield function Fa(e){return di.apply(this,arguments)}(s);if(!ss(o))throw new Error(`Subscription field must return Async Iterable. Received: ${T(o)}.`);return o}catch(o){if(o instanceof h)return{errors:[o]};throw o}}),pi.apply(this,arguments)}function di(){return(di=(0,Je.Z)(function*(e){const{schema:t,fragments:n,operation:i,variableValues:r,rootValue:s}=e,o=t.getSubscriptionType();if(null==o)throw new h("Schema is not configured to execute subscription operation.",{nodes:i});const a=ii(t,n,r,o,i.selectionSet),[c,l]=[...a.entries()][0],f=is(t,o,l[0]);if(!f)throw new h(`The subscription field "${l[0].name.value}" is not defined.`,{nodes:l});const p=ot(void 0,c,o.name),d=Zr(e,f,l,o,p);try{var y;const N=rn(f,l[0],r),L=e.contextValue,B=yield(null!==(y=f.subscribe)&&void 0!==y?y:e.subscribeFieldResolver)(s,N,L,d);if(B instanceof Error)throw B;return B}catch(N){throw at(N,l,ae(p))}})).apply(this,arguments)}function ka(e){return{Field(t){const n=e.getFieldDef(),i=n?.deprecationReason;if(n&&null!=i){const r=e.getParentType();null!=r||x(!1),e.reportError(new h(`The field ${r.name}.${n.name} is deprecated. ${i}`,{nodes:t}))}},Argument(t){const n=e.getArgument(),i=n?.deprecationReason;if(n&&null!=i){const r=e.getDirective();if(null!=r)e.reportError(new h(`Directive "@${r.name}" argument "${n.name}" is deprecated. ${i}`,{nodes:t}));else{const s=e.getParentType(),o=e.getFieldDef();null!=s&&null!=o||x(!1),e.reportError(new h(`Field "${s.name}.${o.name}" argument "${n.name}" is deprecated. ${i}`,{nodes:t}))}}},ObjectField(t){const n=ee(e.getParentInputType());if(U(n)){const i=n.getFields()[t.name.value],r=i?.deprecationReason;null!=r&&e.reportError(new h(`The input field ${n.name}.${i.name} is deprecated. ${r}`,{nodes:t}))}},EnumValue(t){const n=e.getEnumValue(),i=n?.deprecationReason;if(n&&null!=i){const r=ee(e.getInputType());null!=r||x(!1),e.reportError(new h(`The enum value "${r.name}.${n.name}" is deprecated. ${i}`,{nodes:t}))}}}}function $a(e){return{Field(t){const n=ee(e.getType());n&&Qe(n)&&e.reportError(new h(`GraphQL introspection has been disabled, but the requested query contained the field "${t.name.value}".`,{nodes:t}))}}}function as(e){const t={descriptions:!0,specifiedByUrl:!1,directiveIsRepeatable:!1,schemaDescription:!1,inputValueDeprecation:!1,...e},n=t.descriptions?"description":"",i=t.specifiedByUrl?"specifiedByURL":"";function o(a){return t.inputValueDeprecation?a:""}return`\n    query IntrospectionQuery {\n      __schema {\n        ${t.schemaDescription?n:""}\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ${n}\n          ${t.directiveIsRepeatable?"isRepeatable":""}\n          locations\n          args${o("(includeDeprecated: true)")} {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ${n}\n      ${i}\n      fields(includeDeprecated: true) {\n        name\n        ${n}\n        args${o("(includeDeprecated: true)")} {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields${o("(includeDeprecated: true)")} {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ${n}\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ${n}\n      type { ...TypeRef }\n      defaultValue\n      ${o("isDeprecated")}\n      ${o("deprecationReason")}\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                    ofType {\n                      kind\n                      name\n                      ofType {\n                        kind\n                        name\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `}function Va(e,t){let n=null;for(const r of e.definitions)if(r.kind===u.OPERATION_DEFINITION){var i;if(null==t){if(n)return null;n=r}else if((null===(i=r.name)||void 0===i?void 0:i.value)===t)return r}return n}function xa(e,t){if("query"===t.operation){const n=e.getQueryType();if(!n)throw new h("Schema does not define the required query root type.",{nodes:t});return n}if("mutation"===t.operation){const n=e.getMutationType();if(!n)throw new h("Schema is not configured for mutations.",{nodes:t});return n}if("subscription"===t.operation){const n=e.getSubscriptionType();if(!n)throw new h("Schema is not configured for subscriptions.",{nodes:t});return n}throw new h("Can only have query, mutation and subscription operations.",{nodes:t})}function Ca(e,t){const r=zr({schema:e,document:Ct(as({specifiedByUrl:!0,directiveIsRepeatable:!0,schemaDescription:!0,inputValueDeprecation:!0,...t}))});return!r.errors&&r.data||x(!1),r.data}function Ua(e,t){K(e)&&K(e.__schema)||O(!1,`Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: ${T(e)}.`);const n=e.__schema,i=$e(n.types,v=>v.name,v=>function d(v){if(null!=v&&null!=v.name&&null!=v.kind)switch(v.kind){case V.SCALAR:return function y(v){return new Ie({name:v.name,description:v.description,specifiedByURL:v.specifiedByURL})}(v);case V.OBJECT:return function L(v){return new fe({name:v.name,description:v.description,interfaces:()=>N(v),fields:()=>ce(v)})}(v);case V.INTERFACE:return function $(v){return new tt({name:v.name,description:v.description,interfaces:()=>N(v),fields:()=>ce(v)})}(v);case V.UNION:return function B(v){if(!v.possibleTypes){const A=T(v);throw new Error(`Introspection result missing possibleTypes: ${A}.`)}return new nt({name:v.name,description:v.description,types:()=>v.possibleTypes.map(f)})}(v);case V.ENUM:return function Ee(v){if(!v.enumValues){const A=T(v);throw new Error(`Introspection result missing enumValues: ${A}.`)}return new Ue({name:v.name,description:v.description,values:$e(v.enumValues,A=>A.name,A=>({description:A.description,deprecationReason:A.deprecationReason}))})}(v);case V.INPUT_OBJECT:return function te(v){if(!v.inputFields){const A=T(v);throw new Error(`Introspection result missing inputFields: ${A}.`)}return new it({name:v.name,description:v.description,fields:()=>Pe(v.inputFields)})}(v)}const A=T(v);throw new Error(`Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${A}.`)}(v));for(const v of[...yt,...bt])i[v.name]&&(i[v.name]=v);const r=n.queryType?f(n.queryType):null,s=n.mutationType?f(n.mutationType):null,o=n.subscriptionType?f(n.subscriptionType):null,a=n.directives?n.directives.map(function yi(v){if(!v.args){const A=T(v);throw new Error(`Introspection result missing directive args: ${A}.`)}if(!v.locations){const A=T(v);throw new Error(`Introspection result missing directive locations: ${A}.`)}return new _e({name:v.name,description:v.description,isRepeatable:v.isRepeatable,locations:v.locations.slice(),args:Pe(v.args)})}):[];return new rt({description:n.description,query:r,mutation:s,subscription:o,types:Object.values(i),directives:a,assumeValid:t?.assumeValid});function c(v){if(v.kind===V.LIST){const A=v.ofType;if(!A)throw new Error("Decorated type deeper than introspection query.");return new Z(c(A))}if(v.kind===V.NON_NULL){const A=v.ofType;if(!A)throw new Error("Decorated type deeper than introspection query.");const ue=c(A);return new w(Pi(ue))}return l(v)}function l(v){const A=v.name;if(!A)throw new Error(`Unknown type reference: ${T(v)}.`);const ue=i[A];if(!ue)throw new Error(`Invalid or incomplete schema, unknown type: ${A}. Ensure that a full introspection query is used in order to build a client schema.`);return ue}function f(v){return Mi(l(v))}function p(v){return ji(l(v))}function N(v){if(null===v.interfaces&&v.kind===V.INTERFACE)return[];if(!v.interfaces){const A=T(v);throw new Error(`Introspection result missing interfaces: ${A}.`)}return v.interfaces.map(p)}function ce(v){if(!v.fields)throw new Error(`Introspection result missing fields: ${T(v)}.`);return $e(v.fields,A=>A.name,Xe)}function Xe(v){const A=c(v.type);if(!xe(A)){const ue=T(A);throw new Error(`Introspection must provide output type for fields, but received: ${ue}.`)}if(!v.args){const ue=T(v);throw new Error(`Introspection result missing field args: ${ue}.`)}return{description:v.description,deprecationReason:v.deprecationReason,type:A,args:Pe(v.args)}}function Pe(v){return $e(v,A=>A.name,ct)}function ct(v){const A=c(v.type);if(!ne(A)){const ut=T(A);throw new Error(`Introspection must provide input type for arguments, but received: ${ut}.`)}const ue=null!=v.defaultValue?be(ki(v.defaultValue),A):void 0;return{description:v.description,type:A,defaultValue:ue,deprecationReason:v.deprecationReason}}}function Ma(e,t,n){Pn(e),null!=t&&t.kind===u.DOCUMENT||O(!1,"Must provide valid Document AST."),!0!==n?.assumeValid&&!0!==n?.assumeValidSDL&&function ma(e,t){const n=Jr(e,t);if(0!==n.length)throw new Error(n.map(i=>i.message).join("\n\n"))}(t,e);const i=e.toConfig(),r=cs(i,t,n);return i===r?e:new rt(r)}function cs(e,t,n){var i,r,s,o;const a=[],c=Object.create(null),l=[];let f;const p=[];for(const E of t.definitions)if(E.kind===u.SCHEMA_DEFINITION)f=E;else if(E.kind===u.SCHEMA_EXTENSION)p.push(E);else if(st(E))a.push(E);else if(Kt(E)){const _=E.name.value,g=c[_];c[_]=g?g.concat([E]):[E]}else E.kind===u.DIRECTIVE_DEFINITION&&l.push(E);if(0===Object.keys(c).length&&0===a.length&&0===l.length&&0===p.length&&null==f)return e;const d=Object.create(null);for(const E of e.types)d[E.name]=Ee(E);for(const E of a){var y;const _=E.name.value;d[_]=null!==(y=us[_])&&void 0!==y?y:hc(E)}const N={query:e.query&&$(e.query),mutation:e.mutation&&$(e.mutation),subscription:e.subscription&&$(e.subscription),...f&&ue([f]),...ue(p)};return{description:null===(i=f)||void 0===i||null===(r=i.description)||void 0===r?void 0:r.value,...N,types:Object.values(d),directives:[...e.directives.map(function B(E){const _=E.toConfig();return new _e({..._,args:Le(_.args,A)})}),...l.map(function dc(E){var _;return new _e({name:E.name.value,description:null===(_=E.description)||void 0===_?void 0:_.value,locations:E.locations.map(({value:g})=>g),isRepeatable:E.repeatable,args:Os(E.arguments),astNode:E})})],extensions:Object.create(null),astNode:null!==(s=f)&&void 0!==s?s:e.astNode,extensionASTNodes:e.extensionASTNodes.concat(p),assumeValid:null!==(o=n?.assumeValid)&&void 0!==o&&o};function L(E){return M(E)?new Z(L(E.ofType)):S(E)?new w(L(E.ofType)):$(E)}function $(E){return d[E.name]}function Ee(E){return Qe(E)||Xt(E)?E:se(E)?function Xe(E){var _;const g=E.toConfig(),b=null!==(_=c[g.name])&&void 0!==_?_:[];let j=g.specifiedByURL;for(const P of b){var z;j=null!==(z=ls(P))&&void 0!==z?z:j}return new Ie({...g,specifiedByURL:j,extensionASTNodes:g.extensionASTNodes.concat(b)})}(E):F(E)?function Pe(E){var _;const g=E.toConfig(),b=null!==(_=c[g.name])&&void 0!==_?_:[];return new fe({...g,interfaces:()=>[...E.getInterfaces().map($),...dn(b)],fields:()=>({...Le(g.fields,v),...pn(b)}),extensionASTNodes:g.extensionASTNodes.concat(b)})}(E):k(E)?function ct(E){var _;const g=E.toConfig(),b=null!==(_=c[g.name])&&void 0!==_?_:[];return new tt({...g,interfaces:()=>[...E.getInterfaces().map($),...dn(b)],fields:()=>({...Le(g.fields,v),...pn(b)}),extensionASTNodes:g.extensionASTNodes.concat(b)})}(E):X(E)?function yi(E){var _;const g=E.toConfig(),b=null!==(_=c[g.name])&&void 0!==_?_:[];return new nt({...g,types:()=>[...E.getTypes().map($),...ws(b)],extensionASTNodes:g.extensionASTNodes.concat(b)})}(E):Y(E)?function ce(E){var _;const g=E.toConfig(),b=null!==(_=c[E.name])&&void 0!==_?_:[];return new Ue({...g,values:{...g.values,...As(b)},extensionASTNodes:g.extensionASTNodes.concat(b)})}(E):U(E)?function te(E){var _;const g=E.toConfig(),b=null!==(_=c[g.name])&&void 0!==_?_:[];return new it({...g,fields:()=>({...Le(g.fields,j=>({...j,type:L(j.type)})),...Ss(b)}),extensionASTNodes:g.extensionASTNodes.concat(b)})}(E):void x(!1,"Unexpected type: "+T(E))}function v(E){return{...E,type:L(E.type),args:E.args&&Le(E.args,A)}}function A(E){return{...E,type:L(E.type)}}function ue(E){const _={};for(const b of E){var g;const j=null!==(g=b.operationTypes)&&void 0!==g?g:[];for(const z of j)_[z.operation]=ut(z.type)}return _}function ut(E){var _;const g=E.name.value,b=null!==(_=us[g])&&void 0!==_?_:d[g];if(void 0===b)throw new Error(`Unknown type: "${g}".`);return b}function Lt(E){return E.kind===u.LIST_TYPE?new Z(Lt(E.type)):E.kind===u.NON_NULL_TYPE?new w(Lt(E.type)):ut(E)}function pn(E){const _=Object.create(null);for(const j of E){var g;const z=null!==(g=j.fields)&&void 0!==g?g:[];for(const P of z){var b;_[P.name.value]={type:Lt(P.type),description:null===(b=P.description)||void 0===b?void 0:b.value,args:Os(P.arguments),deprecationReason:ln(P),astNode:P}}}return _}function Os(E){const _=E??[],g=Object.create(null);for(const j of _){var b;const z=Lt(j.type);g[j.name.value]={type:z,description:null===(b=j.description)||void 0===b?void 0:b.value,defaultValue:be(j.defaultValue,z),deprecationReason:ln(j),astNode:j}}return g}function Ss(E){const _=Object.create(null);for(const j of E){var g;const z=null!==(g=j.fields)&&void 0!==g?g:[];for(const P of z){var b;const lt=Lt(P.type);_[P.name.value]={type:lt,description:null===(b=P.description)||void 0===b?void 0:b.value,defaultValue:be(P.defaultValue,lt),deprecationReason:ln(P),astNode:P}}}return _}function As(E){const _=Object.create(null);for(const j of E){var g;const z=null!==(g=j.values)&&void 0!==g?g:[];for(const P of z){var b;_[P.name.value]={description:null===(b=P.description)||void 0===b?void 0:b.value,deprecationReason:ln(P),astNode:P}}}return _}function dn(E){return E.flatMap(_=>{var g,b;return null!==(g=null===(b=_.interfaces)||void 0===b?void 0:b.map(ut))&&void 0!==g?g:[]})}function ws(E){return E.flatMap(_=>{var g,b;return null!==(g=null===(b=_.types)||void 0===b?void 0:b.map(ut))&&void 0!==g?g:[]})}function hc(E){var _;const g=E.name.value,b=null!==(_=c[g])&&void 0!==_?_:[];switch(E.kind){case u.OBJECT_TYPE_DEFINITION:{var j;const ye=[E,...b];return new fe({name:g,description:null===(j=E.description)||void 0===j?void 0:j.value,interfaces:()=>dn(ye),fields:()=>pn(ye),astNode:E,extensionASTNodes:b})}case u.INTERFACE_TYPE_DEFINITION:{var z;const ye=[E,...b];return new tt({name:g,description:null===(z=E.description)||void 0===z?void 0:z.value,interfaces:()=>dn(ye),fields:()=>pn(ye),astNode:E,extensionASTNodes:b})}case u.ENUM_TYPE_DEFINITION:{var P;const ye=[E,...b];return new Ue({name:g,description:null===(P=E.description)||void 0===P?void 0:P.value,values:As(ye),astNode:E,extensionASTNodes:b})}case u.UNION_TYPE_DEFINITION:{var lt;const ye=[E,...b];return new nt({name:g,description:null===(lt=E.description)||void 0===lt?void 0:lt.value,types:()=>ws(ye),astNode:E,extensionASTNodes:b})}case u.SCALAR_TYPE_DEFINITION:var vi;return new Ie({name:g,description:null===(vi=E.description)||void 0===vi?void 0:vi.value,specifiedByURL:ls(E),astNode:E,extensionASTNodes:b});case u.INPUT_OBJECT_TYPE_DEFINITION:{var Ni;const ye=[E,...b];return new it({name:g,description:null===(Ni=E.description)||void 0===Ni?void 0:Ni.value,fields:()=>Ss(ye),astNode:E,extensionASTNodes:b})}}}}const us=Re([...yt,...bt],e=>e.name);function ln(e){const t=St(Ht,e);return t?.reason}function ls(e){const t=St(kn,e);return t?.url}function fs(e,t){null!=e&&e.kind===u.DOCUMENT||O(!1,"Must provide valid Document AST."),!0!==t?.assumeValid&&!0!==t?.assumeValidSDL&&function ha(e){const t=Jr(e);if(0!==t.length)throw new Error(t.map(n=>n.message).join("\n\n"))}(e);const i=cs({description:void 0,types:[],directives:[],extensions:Object.create(null),extensionASTNodes:[],assumeValid:!1},e,t);if(null==i.astNode)for(const s of i.types)switch(s.name){case"Query":i.query=s;break;case"Mutation":i.mutation=s;break;case"Subscription":i.subscription=s}const r=[...i.directives,...Me.filter(s=>i.directives.every(o=>o.name!==s.name))];return new rt({...i,directives:r})}function ja(e,t){return fs(Ct(e,{noLocation:t?.noLocation,allowLegacyFragmentVariables:t?.allowLegacyFragmentVariables}),{assumeValidSDL:t?.assumeValidSDL,assumeValid:t?.assumeValid})}function Pa(e){const t=e.toConfig(),n=$e(hi(t.types),d=>d.name,function p(d){if(se(d)||Qe(d))return d;if(F(d)){const y=d.toConfig();return new fe({...y,interfaces:()=>f(y.interfaces),fields:()=>c(y.fields)})}if(k(d)){const y=d.toConfig();return new tt({...y,interfaces:()=>f(y.interfaces),fields:()=>c(y.fields)})}if(X(d)){const y=d.toConfig();return new nt({...y,types:()=>f(y.types)})}if(Y(d)){const y=d.toConfig();return new Ue({...y,values:fn(y.values,N=>N)})}if(U(d)){const y=d.toConfig();return new it({...y,fields:()=>function l(d){return fn(d,y=>({...y,type:i(y.type)}))}(y.fields)})}x(!1,"Unexpected type: "+T(d))});return new rt({...t,types:Object.values(n),directives:hi(t.directives).map(function o(d){const y=d.toConfig();return new _e({...y,locations:ps(y.locations,N=>N),args:a(y.args)})}),query:s(t.query),mutation:s(t.mutation),subscription:s(t.subscription)});function i(d){return M(d)?new Z(i(d.ofType)):S(d)?new w(i(d.ofType)):r(d)}function r(d){return n[d.name]}function s(d){return d&&r(d)}function a(d){return fn(d,y=>({...y,type:i(y.type)}))}function c(d){return fn(d,y=>({...y,type:i(y.type),args:y.args&&a(y.args)}))}function f(d){return hi(d).map(r)}}function fn(e,t){const n=Object.create(null);for(const i of Object.keys(e).sort(ht))n[i]=t(e[i]);return n}function hi(e){return ps(e,t=>t.name)}function ps(e,t){return e.slice().sort((n,i)=>ht(t(n),t(i)))}function Ga(e){return ds(e,t=>!$n(t),Qa)}function Ba(e){return ds(e,$n,Qe)}function Qa(e){return!Xt(e)&&!Qe(e)}function ds(e,t,n){const i=e.getDirectives().filter(t),r=Object.values(e.getTypeMap()).filter(n);return[qa(e),...i.map(s=>function Za(e){return de(e)+"directive @"+e.name+Es(e.args)+(e.isRepeatable?" repeatable":"")+" on "+e.locations.join(" | ")}(s)),...r.map(s=>hs(s))].filter(Boolean).join("\n\n")}function qa(e){if(null==e.description&&function Ya(e){const t=e.getQueryType();if(t&&"Query"!==t.name)return!1;const n=e.getMutationType();if(n&&"Mutation"!==n.name)return!1;const i=e.getSubscriptionType();return!(i&&"Subscription"!==i.name)}(e))return;const t=[],n=e.getQueryType();n&&t.push(`  query: ${n.name}`);const i=e.getMutationType();i&&t.push(`  mutation: ${i.name}`);const r=e.getSubscriptionType();return r&&t.push(`  subscription: ${r.name}`),de(e)+`schema {\n${t.join("\n")}\n}`}function hs(e){return se(e)?function Ja(e){return de(e)+`scalar ${e.name}`+function ec(e){return null==e.specifiedByURL?"":` @specifiedBy(url: ${C({kind:u.STRING,value:e.specifiedByURL})})`}(e)}(e):F(e)?function Xa(e){return de(e)+`type ${e.name}`+ms(e)+Ts(e)}(e):k(e)?function za(e){return de(e)+`interface ${e.name}`+ms(e)+Ts(e)}(e):X(e)?function Ha(e){const t=e.getTypes(),n=t.length?" = "+t.join(" | "):"";return de(e)+"union "+e.name+n}(e):Y(e)?function Wa(e){const t=e.getValues().map((n,i)=>de(n,"  ",!i)+"  "+n.name+Ei(n.deprecationReason));return de(e)+`enum ${e.name}`+mi(t)}(e):U(e)?function Ka(e){const t=Object.values(e.getFields()).map((n,i)=>de(n,"  ",!i)+"  "+Ti(n));return de(e)+`input ${e.name}`+mi(t)}(e):void x(!1,"Unexpected type: "+T(e))}function ms(e){const t=e.getInterfaces();return t.length?" implements "+t.map(n=>n.name).join(" & "):""}function Ts(e){return mi(Object.values(e.getFields()).map((n,i)=>de(n,"  ",!i)+"  "+n.name+Es(n.args,"  ")+": "+String(n.type)+Ei(n.deprecationReason)))}function mi(e){return 0!==e.length?" {\n"+e.join("\n")+"\n}":""}function Es(e,t=""){return 0===e.length?"":e.every(n=>!n.description)?"("+e.map(Ti).join(", ")+")":"(\n"+e.map((n,i)=>de(n,"  "+t,!i)+"  "+t+Ti(n)).join("\n")+"\n"+t+")"}function Ti(e){const t=je(e.defaultValue,e.type);let n=e.name+": "+String(e.type);return t&&(n+=` = ${C(t)}`),n+Ei(e.deprecationReason)}function Ei(e){return null==e?"":e!==Fn?` @deprecated(reason: ${C({kind:u.STRING,value:e})})`:" @deprecated"}function de(e,t="",n=!0){const{description:i}=e;return null==i?"":(t&&!n?"\n"+t:t)+C({kind:u.STRING,value:i,block:xs(i)}).replace(/\n/g,"\n"+t)+"\n"}function tc(e){const t=[];for(const n of e)t.push(...n.definitions);return{kind:u.DOCUMENT,definitions:t}}function nc(e){const t=[],n=Object.create(null);for(const r of e.definitions)switch(r.kind){case u.OPERATION_DEFINITION:t.push(r);break;case u.FRAGMENT_DEFINITION:n[r.name.value]=vs(r.selectionSet)}const i=Object.create(null);for(const r of t){const s=new Set;for(const a of vs(r.selectionSet))ys(s,n,a);i[r.name?r.name.value:""]={kind:u.DOCUMENT,definitions:e.definitions.filter(a=>a===r||a.kind===u.FRAGMENT_DEFINITION&&s.has(a.name.value))}}return i}function ys(e,t,n){if(!e.has(n)){e.add(n);const i=t[n];if(void 0!==i)for(const r of i)ys(e,t,r)}}function vs(e){const t=[];return Ke(e,{FragmentSpread(n){t.push(n.name.value)}}),t}function ic(e){const t=Fi(e)?e:new xt(e),n=t.body,i=new Nn(t);let r="",s=!1;for(;i.advance().kind!==m.EOF;){const o=i.token,a=o.kind,c=!Si(o.kind);s&&(c||o.kind===m.SPREAD)&&(r+=" ");const l=n.slice(o.start,o.end);r+=a===m.BLOCK_STRING?Oi(o.value,{minimize:!0}):l,s=c}return r}function rc(e){const t=Ns(e);if(t)throw t;return e}function Ns(e){if("string"==typeof e||O(!1,"Expected name to be a string."),e.startsWith("__"))return new h(`Name "${e}" must not begin with "__", which is reserved by GraphQL introspection.`);try{re(e)}catch(t){return t}}var Q=function(e){return e.TYPE_REMOVED="TYPE_REMOVED",e.TYPE_CHANGED_KIND="TYPE_CHANGED_KIND",e.TYPE_REMOVED_FROM_UNION="TYPE_REMOVED_FROM_UNION",e.VALUE_REMOVED_FROM_ENUM="VALUE_REMOVED_FROM_ENUM",e.REQUIRED_INPUT_FIELD_ADDED="REQUIRED_INPUT_FIELD_ADDED",e.IMPLEMENTED_INTERFACE_REMOVED="IMPLEMENTED_INTERFACE_REMOVED",e.FIELD_REMOVED="FIELD_REMOVED",e.FIELD_CHANGED_KIND="FIELD_CHANGED_KIND",e.REQUIRED_ARG_ADDED="REQUIRED_ARG_ADDED",e.ARG_REMOVED="ARG_REMOVED",e.ARG_CHANGED_KIND="ARG_CHANGED_KIND",e.DIRECTIVE_REMOVED="DIRECTIVE_REMOVED",e.DIRECTIVE_ARG_REMOVED="DIRECTIVE_ARG_REMOVED",e.REQUIRED_DIRECTIVE_ARG_ADDED="REQUIRED_DIRECTIVE_ARG_ADDED",e.DIRECTIVE_REPEATABLE_REMOVED="DIRECTIVE_REPEATABLE_REMOVED",e.DIRECTIVE_LOCATION_REMOVED="DIRECTIVE_LOCATION_REMOVED",e}(Q||{}),De=function(e){return e.VALUE_ADDED_TO_ENUM="VALUE_ADDED_TO_ENUM",e.TYPE_ADDED_TO_UNION="TYPE_ADDED_TO_UNION",e.OPTIONAL_INPUT_FIELD_ADDED="OPTIONAL_INPUT_FIELD_ADDED",e.OPTIONAL_ARG_ADDED="OPTIONAL_ARG_ADDED",e.IMPLEMENTED_INTERFACE_ADDED="IMPLEMENTED_INTERFACE_ADDED",e.ARG_DEFAULT_VALUE_CHANGE="ARG_DEFAULT_VALUE_CHANGE",e}(De||{});function sc(e,t){return gs(e,t).filter(n=>n.type in Q)}function oc(e,t){return gs(e,t).filter(n=>n.type in De)}function gs(e,t){return[...cc(e,t),...ac(e,t)]}function ac(e,t){const n=[],i=Fe(e.getDirectives(),t.getDirectives());for(const r of i.removed)n.push({type:Q.DIRECTIVE_REMOVED,description:`${r.name} was removed.`});for(const[r,s]of i.persisted){const o=Fe(r.args,s.args);for(const a of o.added)Ce(a)&&n.push({type:Q.REQUIRED_DIRECTIVE_ARG_ADDED,description:`A required arg ${a.name} on directive ${r.name} was added.`});for(const a of o.removed)n.push({type:Q.DIRECTIVE_ARG_REMOVED,description:`${a.name} was removed from ${r.name}.`});r.isRepeatable&&!s.isRepeatable&&n.push({type:Q.DIRECTIVE_REPEATABLE_REMOVED,description:`Repeatable flag was removed from ${r.name}.`});for(const a of r.locations)s.locations.includes(a)||n.push({type:Q.DIRECTIVE_LOCATION_REMOVED,description:`${a} was removed from ${r.name}.`})}return n}function cc(e,t){const n=[],i=Fe(Object.values(e.getTypeMap()),Object.values(t.getTypeMap()));for(const r of i.removed)n.push({type:Q.TYPE_REMOVED,description:Xt(r)?`Standard scalar ${r.name} was removed because it is not referenced anymore.`:`${r.name} was removed.`});for(const[r,s]of i.persisted)Y(r)&&Y(s)?n.push(...fc(r,s)):X(r)&&X(s)?n.push(...lc(r,s)):U(r)&&U(s)?n.push(...uc(r,s)):F(r)&&F(s)||k(r)&&k(s)?n.push(..._s(r,s),...Is(r,s)):r.constructor!==s.constructor&&n.push({type:Q.TYPE_CHANGED_KIND,description:`${r.name} changed from ${bs(r)} to ${bs(s)}.`});return n}function uc(e,t){const n=[],i=Fe(Object.values(e.getFields()),Object.values(t.getFields()));for(const r of i.added)Qt(r)?n.push({type:Q.REQUIRED_INPUT_FIELD_ADDED,description:`A required field ${r.name} on input type ${e.name} was added.`}):n.push({type:De.OPTIONAL_INPUT_FIELD_ADDED,description:`An optional field ${r.name} on input type ${e.name} was added.`});for(const r of i.removed)n.push({type:Q.FIELD_REMOVED,description:`${e.name}.${r.name} was removed.`});for(const[r,s]of i.persisted)Rt(r.type,s.type)||n.push({type:Q.FIELD_CHANGED_KIND,description:`${e.name}.${r.name} changed type from ${String(r.type)} to ${String(s.type)}.`});return n}function lc(e,t){const n=[],i=Fe(e.getTypes(),t.getTypes());for(const r of i.added)n.push({type:De.TYPE_ADDED_TO_UNION,description:`${r.name} was added to union type ${e.name}.`});for(const r of i.removed)n.push({type:Q.TYPE_REMOVED_FROM_UNION,description:`${r.name} was removed from union type ${e.name}.`});return n}function fc(e,t){const n=[],i=Fe(e.getValues(),t.getValues());for(const r of i.added)n.push({type:De.VALUE_ADDED_TO_ENUM,description:`${r.name} was added to enum type ${e.name}.`});for(const r of i.removed)n.push({type:Q.VALUE_REMOVED_FROM_ENUM,description:`${r.name} was removed from enum type ${e.name}.`});return n}function Is(e,t){const n=[],i=Fe(e.getInterfaces(),t.getInterfaces());for(const r of i.added)n.push({type:De.IMPLEMENTED_INTERFACE_ADDED,description:`${r.name} added to interfaces implemented by ${e.name}.`});for(const r of i.removed)n.push({type:Q.IMPLEMENTED_INTERFACE_REMOVED,description:`${e.name} no longer implements interface ${r.name}.`});return n}function _s(e,t){const n=[],i=Fe(Object.values(e.getFields()),Object.values(t.getFields()));for(const r of i.removed)n.push({type:Q.FIELD_REMOVED,description:`${e.name}.${r.name} was removed.`});for(const[r,s]of i.persisted)n.push(...pc(e,r,s)),wt(r.type,s.type)||n.push({type:Q.FIELD_CHANGED_KIND,description:`${e.name}.${r.name} changed type from ${String(r.type)} to ${String(s.type)}.`});return n}function pc(e,t,n){const i=[],r=Fe(t.args,n.args);for(const s of r.removed)i.push({type:Q.ARG_REMOVED,description:`${e.name}.${t.name} arg ${s.name} was removed.`});for(const[s,o]of r.persisted)if(Rt(s.type,o.type)){if(void 0!==s.defaultValue)if(void 0===o.defaultValue)i.push({type:De.ARG_DEFAULT_VALUE_CHANGE,description:`${e.name}.${t.name} arg ${s.name} defaultValue was removed.`});else{const c=Ds(s.defaultValue,s.type),l=Ds(o.defaultValue,o.type);c!==l&&i.push({type:De.ARG_DEFAULT_VALUE_CHANGE,description:`${e.name}.${t.name} arg ${s.name} has changed defaultValue from ${c} to ${l}.`})}}else i.push({type:Q.ARG_CHANGED_KIND,description:`${e.name}.${t.name} arg ${s.name} has changed type from ${String(s.type)} to ${String(o.type)}.`});for(const s of r.added)Ce(s)?i.push({type:Q.REQUIRED_ARG_ADDED,description:`A required arg ${s.name} on ${e.name}.${t.name} was added.`}):i.push({type:De.OPTIONAL_ARG_ADDED,description:`An optional arg ${s.name} on ${e.name}.${t.name} was added.`});return i}function wt(e,t){return M(e)?M(t)&&wt(e.ofType,t.ofType)||S(t)&&wt(e,t.ofType):S(e)?S(t)&&wt(e.ofType,t.ofType):Et(t)&&e.name===t.name||S(t)&&wt(e,t.ofType)}function Rt(e,t){return M(e)?M(t)&&Rt(e.ofType,t.ofType):S(e)?S(t)&&Rt(e.ofType,t.ofType)||!S(t)&&Rt(e.ofType,t):Et(t)&&e.name===t.name}function bs(e){return se(e)?"a Scalar type":F(e)?"an Object type":k(e)?"an Interface type":X(e)?"a Union type":Y(e)?"an Enum type":U(e)?"an Input type":void x(!1,"Unexpected type: "+T(e))}function Ds(e,t){const n=je(e,t);return null!=n||x(!1),C(Zt(n))}function Fe(e,t){const n=[],i=[],r=[],s=Re(e,({name:a})=>a),o=Re(t,({name:a})=>a);for(const a of e){const c=o[a.name];void 0===c?i.push(a):r.push([a,c])}for(const a of t)void 0===s[a.name]&&n.push(a);return{added:n,persisted:r,removed:i}}}}]);